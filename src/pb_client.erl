%% -*- coding: utf-8 -*-
%% @private
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.7.1
-module(pb_client).

-export([encode_msg/1, encode_msg/2, encode_msg/3]).
-export([decode_msg/2, decode_msg/3]).
-export([merge_msgs/2, merge_msgs/3, merge_msgs/4]).
-export([verify_msg/1, verify_msg/2, verify_msg/3]).
-export([get_msg_defs/0]).
-export([get_msg_names/0]).
-export([get_group_names/0]).
-export([get_msg_or_group_names/0]).
-export([get_enum_names/0]).
-export([find_msg_def/1, fetch_msg_def/1]).
-export([find_enum_def/1, fetch_enum_def/1]).
-export([enum_symbol_by_value/2, enum_value_by_symbol/2]).
-export(['enum_symbol_by_value_ProtobufClient.APIAuthenticationMessage.Source'/1, 'enum_value_by_symbol_ProtobufClient.APIAuthenticationMessage.Source'/1]).
-export([get_service_names/0]).
-export([get_service_def/1]).
-export([get_rpc_names/1]).
-export([find_rpc_def/2, fetch_rpc_def/2]).
-export([fqbin_to_service_name/1]).
-export([service_name_to_fqbin/1]).
-export([fqbins_to_service_and_rpc_name/2]).
-export([service_and_rpc_name_to_fqbins/2]).
-export([fqbin_to_msg_name/1]).
-export([msg_name_to_fqbin/1]).
-export([fqbin_to_enum_name/1]).
-export([enum_name_to_fqbin/1]).
-export([get_package_name/0]).
-export([uses_packages/0]).
-export([source_basename/0]).
-export([get_all_source_basenames/0]).
-export([get_all_proto_names/0]).
-export([get_msg_containment/1]).
-export([get_pkg_containment/1]).
-export([get_service_containment/1]).
-export([get_rpc_containment/1]).
-export([get_enum_containment/1]).
-export([get_proto_by_msg_name_as_fqbin/1]).
-export([get_proto_by_service_name_as_fqbin/1]).
-export([get_proto_by_enum_name_as_fqbin/1]).
-export([get_protos_by_pkg_name_as_fqbin/1]).
-export([gpb_version_as_string/0, gpb_version_as_list/0]).

-include("pb_client.hrl").
-include("gpb.hrl").

%% enumerated types
-type 'ProtobufClient.APIAuthenticationMessage.Source'() :: 'UNKNOWN' | 'GOLANG_SDK' | 'JAVASCRIPT_SDK' | 'NODE_SDK' | 'RUST_SDK' | 'CW_WEB'.
-export_type(['ProtobufClient.APIAuthenticationMessage.Source'/0]).

%% message types
-type 'ProtobufClient.ClientMessage'() :: #'ProtobufClient.ClientMessage'{}.

-type 'ProtobufClient.ClientIdentificationMessage'() :: #'ProtobufClient.ClientIdentificationMessage'{}.

-type 'ProtobufClient.WebAuthenticationMessage'() :: #'ProtobufClient.WebAuthenticationMessage'{}.

-type 'ProtobufClient.TradeSessionAuth'() :: #'ProtobufClient.TradeSessionAuth'{}.

-type 'ProtobufClient.TradeSubscription'() :: #'ProtobufClient.TradeSubscription'{}.

-type 'ProtobufClient.StreamSubscription'() :: #'ProtobufClient.StreamSubscription'{}.

-type 'ProtobufClient.ClientSubscription'() :: #'ProtobufClient.ClientSubscription'{}.

-type 'ProtobufClient.APIAuthenticationMessage'() :: #'ProtobufClient.APIAuthenticationMessage'{}.

-type 'ProtobufClient.ClientSessionMessage.Session'() :: #'ProtobufClient.ClientSessionMessage.Session'{}.

-type 'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'() :: #'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'{}.

-type 'ProtobufClient.ClientSessionMessage'() :: #'ProtobufClient.ClientSessionMessage'{}.

-type 'ProtobufClient.ClientSubscribeMessage'() :: #'ProtobufClient.ClientSubscribeMessage'{}.

-type 'ProtobufClient.ClientUnsubscribeMessage'() :: #'ProtobufClient.ClientUnsubscribeMessage'{}.

-export_type(['ProtobufClient.ClientMessage'/0, 'ProtobufClient.ClientIdentificationMessage'/0, 'ProtobufClient.WebAuthenticationMessage'/0, 'ProtobufClient.TradeSessionAuth'/0, 'ProtobufClient.TradeSubscription'/0, 'ProtobufClient.StreamSubscription'/0, 'ProtobufClient.ClientSubscription'/0, 'ProtobufClient.APIAuthenticationMessage'/0, 'ProtobufClient.ClientSessionMessage.Session'/0, 'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'/0, 'ProtobufClient.ClientSessionMessage'/0, 'ProtobufClient.ClientSubscribeMessage'/0, 'ProtobufClient.ClientUnsubscribeMessage'/0]).

-spec encode_msg(#'ProtobufClient.ClientMessage'{} | #'ProtobufClient.ClientIdentificationMessage'{} | #'ProtobufClient.WebAuthenticationMessage'{} | #'ProtobufClient.TradeSessionAuth'{} | #'ProtobufClient.TradeSubscription'{} | #'ProtobufClient.StreamSubscription'{} | #'ProtobufClient.ClientSubscription'{} | #'ProtobufClient.APIAuthenticationMessage'{} | #'ProtobufClient.ClientSessionMessage.Session'{} | #'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'{} | #'ProtobufClient.ClientSessionMessage'{} | #'ProtobufClient.ClientSubscribeMessage'{} | #'ProtobufClient.ClientUnsubscribeMessage'{}) -> binary().
encode_msg(Msg) when tuple_size(Msg) >= 1 ->
    encode_msg(Msg, element(1, Msg), []).

-spec encode_msg(#'ProtobufClient.ClientMessage'{} | #'ProtobufClient.ClientIdentificationMessage'{} | #'ProtobufClient.WebAuthenticationMessage'{} | #'ProtobufClient.TradeSessionAuth'{} | #'ProtobufClient.TradeSubscription'{} | #'ProtobufClient.StreamSubscription'{} | #'ProtobufClient.ClientSubscription'{} | #'ProtobufClient.APIAuthenticationMessage'{} | #'ProtobufClient.ClientSessionMessage.Session'{} | #'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'{} | #'ProtobufClient.ClientSessionMessage'{} | #'ProtobufClient.ClientSubscribeMessage'{} | #'ProtobufClient.ClientUnsubscribeMessage'{}, atom() | list()) -> binary().
encode_msg(Msg, MsgName) when is_atom(MsgName) ->
    encode_msg(Msg, MsgName, []);
encode_msg(Msg, Opts)
    when tuple_size(Msg) >= 1, is_list(Opts) ->
    encode_msg(Msg, element(1, Msg), Opts).

-spec encode_msg(#'ProtobufClient.ClientMessage'{} | #'ProtobufClient.ClientIdentificationMessage'{} | #'ProtobufClient.WebAuthenticationMessage'{} | #'ProtobufClient.TradeSessionAuth'{} | #'ProtobufClient.TradeSubscription'{} | #'ProtobufClient.StreamSubscription'{} | #'ProtobufClient.ClientSubscription'{} | #'ProtobufClient.APIAuthenticationMessage'{} | #'ProtobufClient.ClientSessionMessage.Session'{} | #'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'{} | #'ProtobufClient.ClientSessionMessage'{} | #'ProtobufClient.ClientSubscribeMessage'{} | #'ProtobufClient.ClientUnsubscribeMessage'{}, atom(), list()) -> binary().
encode_msg(Msg, MsgName, Opts) ->
    case proplists:get_bool(verify, Opts) of
      true -> verify_msg(Msg, MsgName, Opts);
      false -> ok
    end,
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
      'ProtobufClient.ClientMessage' ->
	  'encode_msg_ProtobufClient.ClientMessage'(id(Msg,
						       TrUserData),
						    TrUserData);
      'ProtobufClient.ClientIdentificationMessage' ->
	  'encode_msg_ProtobufClient.ClientIdentificationMessage'(id(Msg,
								     TrUserData),
								  TrUserData);
      'ProtobufClient.WebAuthenticationMessage' ->
	  'encode_msg_ProtobufClient.WebAuthenticationMessage'(id(Msg,
								  TrUserData),
							       TrUserData);
      'ProtobufClient.TradeSessionAuth' ->
	  'encode_msg_ProtobufClient.TradeSessionAuth'(id(Msg,
							  TrUserData),
						       TrUserData);
      'ProtobufClient.TradeSubscription' ->
	  'encode_msg_ProtobufClient.TradeSubscription'(id(Msg,
							   TrUserData),
							TrUserData);
      'ProtobufClient.StreamSubscription' ->
	  'encode_msg_ProtobufClient.StreamSubscription'(id(Msg,
							    TrUserData),
							 TrUserData);
      'ProtobufClient.ClientSubscription' ->
	  'encode_msg_ProtobufClient.ClientSubscription'(id(Msg,
							    TrUserData),
							 TrUserData);
      'ProtobufClient.APIAuthenticationMessage' ->
	  'encode_msg_ProtobufClient.APIAuthenticationMessage'(id(Msg,
								  TrUserData),
							       TrUserData);
      'ProtobufClient.ClientSessionMessage.Session' ->
	  'encode_msg_ProtobufClient.ClientSessionMessage.Session'(id(Msg,
								      TrUserData),
								   TrUserData);
      'ProtobufClient.ClientSessionMessage.AnonymousTradingSession' ->
	  'encode_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(id(Msg,
										      TrUserData),
										   TrUserData);
      'ProtobufClient.ClientSessionMessage' ->
	  'encode_msg_ProtobufClient.ClientSessionMessage'(id(Msg,
							      TrUserData),
							   TrUserData);
      'ProtobufClient.ClientSubscribeMessage' ->
	  'encode_msg_ProtobufClient.ClientSubscribeMessage'(id(Msg,
								TrUserData),
							     TrUserData);
      'ProtobufClient.ClientUnsubscribeMessage' ->
	  'encode_msg_ProtobufClient.ClientUnsubscribeMessage'(id(Msg,
								  TrUserData),
							       TrUserData)
    end.


'encode_msg_ProtobufClient.ClientMessage'(Msg,
					  TrUserData) ->
    'encode_msg_ProtobufClient.ClientMessage'(Msg, <<>>,
					      TrUserData).


'encode_msg_ProtobufClient.ClientMessage'(#'ProtobufClient.ClientMessage'{body
									      =
									      F1},
					  Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
	   case id(F1, TrUserData) of
	     {identification, TF1} ->
		 begin
		   TrTF1 = id(TF1, TrUserData),
		   'e_mfield_ProtobufClient.ClientMessage_identification'(TrTF1,
									  <<Bin/binary,
									    10>>,
									  TrUserData)
		 end;
	     {subscribe, TF1} ->
		 begin
		   TrTF1 = id(TF1, TrUserData),
		   'e_mfield_ProtobufClient.ClientMessage_subscribe'(TrTF1,
								     <<Bin/binary,
								       18>>,
								     TrUserData)
		 end;
	     {unsubscribe, TF1} ->
		 begin
		   TrTF1 = id(TF1, TrUserData),
		   'e_mfield_ProtobufClient.ClientMessage_unsubscribe'(TrTF1,
								       <<Bin/binary,
									 26>>,
								       TrUserData)
		 end;
	     {webAuthentication, TF1} ->
		 begin
		   TrTF1 = id(TF1, TrUserData),
		   'e_mfield_ProtobufClient.ClientMessage_webAuthentication'(TrTF1,
									     <<Bin/binary,
									       34>>,
									     TrUserData)
		 end;
	     {apiAuthentication, TF1} ->
		 begin
		   TrTF1 = id(TF1, TrUserData),
		   'e_mfield_ProtobufClient.ClientMessage_apiAuthentication'(TrTF1,
									     <<Bin/binary,
									       42>>,
									     TrUserData)
		 end
	   end
    end.

'encode_msg_ProtobufClient.ClientIdentificationMessage'(Msg,
							TrUserData) ->
    'encode_msg_ProtobufClient.ClientIdentificationMessage'(Msg,
							    <<>>, TrUserData).


'encode_msg_ProtobufClient.ClientIdentificationMessage'(#'ProtobufClient.ClientIdentificationMessage'{useragent
													  =
													  F1,
												      revision
													  =
													  F2,
												      integration
													  =
													  F3,
												      locale
													  =
													  F4,
												      subscriptions
													  =
													  F5},
							Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  case is_empty_string(TrF1) of
		    true -> Bin;
		    false ->
			e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
		  end
		end
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  case is_empty_string(TrF2) of
		    true -> B1;
		    false ->
			e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
		  end
		end
	 end,
    B3 = if F3 == undefined -> B2;
	    true ->
		begin
		  TrF3 = id(F3, TrUserData),
		  case is_empty_string(TrF3) of
		    true -> B2;
		    false ->
			e_type_string(TrF3, <<B2/binary, 26>>, TrUserData)
		  end
		end
	 end,
    B4 = if F4 == undefined -> B3;
	    true ->
		begin
		  TrF4 = id(F4, TrUserData),
		  case is_empty_string(TrF4) of
		    true -> B3;
		    false ->
			e_type_string(TrF4, <<B3/binary, 34>>, TrUserData)
		  end
		end
	 end,
    begin
      TrF5 = id(F5, TrUserData),
      if TrF5 == [] -> B4;
	 true ->
	     'e_field_ProtobufClient.ClientIdentificationMessage_subscriptions'(TrF5,
										B4,
										TrUserData)
      end
    end.

'encode_msg_ProtobufClient.WebAuthenticationMessage'(Msg,
						     TrUserData) ->
    'encode_msg_ProtobufClient.WebAuthenticationMessage'(Msg,
							 <<>>, TrUserData).


'encode_msg_ProtobufClient.WebAuthenticationMessage'(#'ProtobufClient.WebAuthenticationMessage'{identification
												    =
												    F1,
												token
												    =
												    F2,
												nonce
												    =
												    F3,
												access_list
												    =
												    F4},
						     Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  if TrF1 =:= undefined -> Bin;
		     true ->
			 'e_mfield_ProtobufClient.WebAuthenticationMessage_identification'(TrF1,
											   <<Bin/binary,
											     10>>,
											   TrUserData)
		  end
		end
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  case is_empty_string(TrF2) of
		    true -> B1;
		    false ->
			e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
		  end
		end
	 end,
    B3 = if F3 == undefined -> B2;
	    true ->
		begin
		  TrF3 = id(F3, TrUserData),
		  case is_empty_string(TrF3) of
		    true -> B2;
		    false ->
			e_type_string(TrF3, <<B2/binary, 26>>, TrUserData)
		  end
		end
	 end,
    begin
      TrF4 = id(F4, TrUserData),
      if TrF4 == [] -> B3;
	 true ->
	     'e_field_ProtobufClient.WebAuthenticationMessage_access_list'(TrF4,
									   B3,
									   TrUserData)
      end
    end.

'encode_msg_ProtobufClient.TradeSessionAuth'(Msg,
					     TrUserData) ->
    'encode_msg_ProtobufClient.TradeSessionAuth'(Msg, <<>>,
						 TrUserData).


'encode_msg_ProtobufClient.TradeSessionAuth'(#'ProtobufClient.TradeSessionAuth'{api_key
										    =
										    F1,
										api_secret
										    =
										    F2,
										customer_id
										    =
										    F3,
										key_passphrase
										    =
										    F4},
					     Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  case is_empty_string(TrF1) of
		    true -> Bin;
		    false ->
			e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
		  end
		end
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  case is_empty_string(TrF2) of
		    true -> B1;
		    false ->
			e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
		  end
		end
	 end,
    B3 = if F3 == undefined -> B2;
	    true ->
		begin
		  TrF3 = id(F3, TrUserData),
		  case is_empty_string(TrF3) of
		    true -> B2;
		    false ->
			e_type_string(TrF3, <<B2/binary, 26>>, TrUserData)
		  end
		end
	 end,
    if F4 == undefined -> B3;
       true ->
	   begin
	     TrF4 = id(F4, TrUserData),
	     case is_empty_string(TrF4) of
	       true -> B3;
	       false ->
		   e_type_string(TrF4, <<B3/binary, 34>>, TrUserData)
	     end
	   end
    end.

'encode_msg_ProtobufClient.TradeSubscription'(Msg,
					      TrUserData) ->
    'encode_msg_ProtobufClient.TradeSubscription'(Msg, <<>>,
						  TrUserData).


'encode_msg_ProtobufClient.TradeSubscription'(#'ProtobufClient.TradeSubscription'{marketId
										      =
										      F1,
										  auth
										      =
										      F2},
					      Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  case is_empty_string(TrF1) of
		    true -> Bin;
		    false ->
			e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
		  end
		end
	 end,
    if F2 == undefined -> B1;
       true ->
	   begin
	     TrF2 = id(F2, TrUserData),
	     if TrF2 =:= undefined -> B1;
		true ->
		    'e_mfield_ProtobufClient.TradeSubscription_auth'(TrF2,
								     <<B1/binary,
								       18>>,
								     TrUserData)
	     end
	   end
    end.

'encode_msg_ProtobufClient.StreamSubscription'(Msg,
					       TrUserData) ->
    'encode_msg_ProtobufClient.StreamSubscription'(Msg,
						   <<>>, TrUserData).


'encode_msg_ProtobufClient.StreamSubscription'(#'ProtobufClient.StreamSubscription'{resource
											=
											F1},
					       Bin, TrUserData) ->
    if F1 == undefined -> Bin;
       true ->
	   begin
	     TrF1 = id(F1, TrUserData),
	     case is_empty_string(TrF1) of
	       true -> Bin;
	       false ->
		   e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
	     end
	   end
    end.

'encode_msg_ProtobufClient.ClientSubscription'(Msg,
					       TrUserData) ->
    'encode_msg_ProtobufClient.ClientSubscription'(Msg,
						   <<>>, TrUserData).


'encode_msg_ProtobufClient.ClientSubscription'(#'ProtobufClient.ClientSubscription'{body
											=
											F1},
					       Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
	   case id(F1, TrUserData) of
	     {stream_subscription, TF1} ->
		 begin
		   TrTF1 = id(TF1, TrUserData),
		   'e_mfield_ProtobufClient.ClientSubscription_stream_subscription'(TrTF1,
										    <<Bin/binary,
										      10>>,
										    TrUserData)
		 end;
	     {trade_subscription, TF1} ->
		 begin
		   TrTF1 = id(TF1, TrUserData),
		   'e_mfield_ProtobufClient.ClientSubscription_trade_subscription'(TrTF1,
										   <<Bin/binary,
										     18>>,
										   TrUserData)
		 end
	   end
    end.

'encode_msg_ProtobufClient.APIAuthenticationMessage'(Msg,
						     TrUserData) ->
    'encode_msg_ProtobufClient.APIAuthenticationMessage'(Msg,
							 <<>>, TrUserData).


'encode_msg_ProtobufClient.APIAuthenticationMessage'(#'ProtobufClient.APIAuthenticationMessage'{token
												    =
												    F1,
												nonce
												    =
												    F2,
												api_key
												    =
												    F3,
												source
												    =
												    F4,
												version
												    =
												    F5,
												subscriptions
												    =
												    F6,
												client_subscriptions
												    =
												    F7},
						     Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  case is_empty_string(TrF1) of
		    true -> Bin;
		    false ->
			e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
		  end
		end
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  case is_empty_string(TrF2) of
		    true -> B1;
		    false ->
			e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
		  end
		end
	 end,
    B3 = if F3 == undefined -> B2;
	    true ->
		begin
		  TrF3 = id(F3, TrUserData),
		  case is_empty_string(TrF3) of
		    true -> B2;
		    false ->
			e_type_string(TrF3, <<B2/binary, 26>>, TrUserData)
		  end
		end
	 end,
    B4 = if F4 == undefined -> B3;
	    true ->
		begin
		  TrF4 = id(F4, TrUserData),
		  if TrF4 =:= 'UNKNOWN'; TrF4 =:= 0 -> B3;
		     true ->
			 'e_enum_ProtobufClient.APIAuthenticationMessage.Source'(TrF4,
										 <<B3/binary,
										   32>>,
										 'MaybeTrUserData')
		  end
		end
	 end,
    B5 = if F5 == undefined -> B4;
	    true ->
		begin
		  TrF5 = id(F5, TrUserData),
		  case is_empty_string(TrF5) of
		    true -> B4;
		    false ->
			e_type_string(TrF5, <<B4/binary, 42>>, TrUserData)
		  end
		end
	 end,
    B6 = begin
	   TrF6 = id(F6, TrUserData),
	   if TrF6 == [] -> B5;
	      true ->
		  'e_field_ProtobufClient.APIAuthenticationMessage_subscriptions'(TrF6,
										  B5,
										  TrUserData)
	   end
	 end,
    begin
      TrF7 = id(F7, TrUserData),
      if TrF7 == [] -> B6;
	 true ->
	     'e_field_ProtobufClient.APIAuthenticationMessage_client_subscriptions'(TrF7,
										    B6,
										    TrUserData)
      end
    end.

'encode_msg_ProtobufClient.ClientSessionMessage.Session'(Msg,
							 TrUserData) ->
    'encode_msg_ProtobufClient.ClientSessionMessage.Session'(Msg,
							     <<>>, TrUserData).


'encode_msg_ProtobufClient.ClientSessionMessage.Session'(#'ProtobufClient.ClientSessionMessage.Session'{userId
													    =
													    F1,
													expires
													    =
													    F2,
													token
													    =
													    F3,
													mfaToken
													    =
													    F4},
							 Bin, TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  case is_empty_string(TrF1) of
		    true -> Bin;
		    false ->
			e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
		  end
		end
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  if TrF2 =:= 0 -> B1;
		     true ->
			 e_type_int64(TrF2, <<B1/binary, 16>>, TrUserData)
		  end
		end
	 end,
    B3 = if F3 == undefined -> B2;
	    true ->
		begin
		  TrF3 = id(F3, TrUserData),
		  case is_empty_string(TrF3) of
		    true -> B2;
		    false ->
			e_type_string(TrF3, <<B2/binary, 26>>, TrUserData)
		  end
		end
	 end,
    if F4 == undefined -> B3;
       true ->
	   begin
	     TrF4 = id(F4, TrUserData),
	     case is_empty_string(TrF4) of
	       true -> B3;
	       false ->
		   e_type_string(TrF4, <<B3/binary, 34>>, TrUserData)
	     end
	   end
    end.

'encode_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Msg,
									 TrUserData) ->
    'encode_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Msg,
									     <<>>,
									     TrUserData).


'encode_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(#'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'{exchange
																	    =
																	    F1,
																	token
																	    =
																	    F2,
																	expiration
																	    =
																	    F3},
									 Bin,
									 TrUserData) ->
    B1 = if F1 == undefined -> Bin;
	    true ->
		begin
		  TrF1 = id(F1, TrUserData),
		  case is_empty_string(TrF1) of
		    true -> Bin;
		    false ->
			e_type_string(TrF1, <<Bin/binary, 10>>, TrUserData)
		  end
		end
	 end,
    B2 = if F2 == undefined -> B1;
	    true ->
		begin
		  TrF2 = id(F2, TrUserData),
		  case is_empty_string(TrF2) of
		    true -> B1;
		    false ->
			e_type_string(TrF2, <<B1/binary, 18>>, TrUserData)
		  end
		end
	 end,
    if F3 == undefined -> B2;
       true ->
	   begin
	     TrF3 = id(F3, TrUserData),
	     if TrF3 =:= 0 -> B2;
		true ->
		    e_type_int64(TrF3, <<B2/binary, 24>>, TrUserData)
	     end
	   end
    end.

'encode_msg_ProtobufClient.ClientSessionMessage'(Msg,
						 TrUserData) ->
    'encode_msg_ProtobufClient.ClientSessionMessage'(Msg,
						     <<>>, TrUserData).


'encode_msg_ProtobufClient.ClientSessionMessage'(#'ProtobufClient.ClientSessionMessage'{'SessionConfig'
											    =
											    F1},
						 Bin, TrUserData) ->
    if F1 =:= undefined -> Bin;
       true ->
	   case id(F1, TrUserData) of
	     {session, TF1} ->
		 begin
		   TrTF1 = id(TF1, TrUserData),
		   'e_mfield_ProtobufClient.ClientSessionMessage_session'(TrTF1,
									  <<Bin/binary,
									    10>>,
									  TrUserData)
		 end;
	     {anonymousTradingSession, TF1} ->
		 begin
		   TrTF1 = id(TF1, TrUserData),
		   'e_mfield_ProtobufClient.ClientSessionMessage_anonymousTradingSession'(TrTF1,
											  <<Bin/binary,
											    18>>,
											  TrUserData)
		 end
	   end
    end.

'encode_msg_ProtobufClient.ClientSubscribeMessage'(Msg,
						   TrUserData) ->
    'encode_msg_ProtobufClient.ClientSubscribeMessage'(Msg,
						       <<>>, TrUserData).


'encode_msg_ProtobufClient.ClientSubscribeMessage'(#'ProtobufClient.ClientSubscribeMessage'{subscriptionKeys
												=
												F1,
											    subscriptions
												=
												F2},
						   Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   if TrF1 == [] -> Bin;
	      true ->
		  'e_field_ProtobufClient.ClientSubscribeMessage_subscriptionKeys'(TrF1,
										   Bin,
										   TrUserData)
	   end
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      if TrF2 == [] -> B1;
	 true ->
	     'e_field_ProtobufClient.ClientSubscribeMessage_subscriptions'(TrF2,
									   B1,
									   TrUserData)
      end
    end.

'encode_msg_ProtobufClient.ClientUnsubscribeMessage'(Msg,
						     TrUserData) ->
    'encode_msg_ProtobufClient.ClientUnsubscribeMessage'(Msg,
							 <<>>, TrUserData).


'encode_msg_ProtobufClient.ClientUnsubscribeMessage'(#'ProtobufClient.ClientUnsubscribeMessage'{subscriptionKeys
												    =
												    F1,
												subscriptions
												    =
												    F2},
						     Bin, TrUserData) ->
    B1 = begin
	   TrF1 = id(F1, TrUserData),
	   if TrF1 == [] -> Bin;
	      true ->
		  'e_field_ProtobufClient.ClientUnsubscribeMessage_subscriptionKeys'(TrF1,
										     Bin,
										     TrUserData)
	   end
	 end,
    begin
      TrF2 = id(F2, TrUserData),
      if TrF2 == [] -> B1;
	 true ->
	     'e_field_ProtobufClient.ClientUnsubscribeMessage_subscriptions'(TrF2,
									     B1,
									     TrUserData)
      end
    end.

'e_mfield_ProtobufClient.ClientMessage_identification'(Msg,
						       Bin, TrUserData) ->
    SubBin =
	'encode_msg_ProtobufClient.ClientIdentificationMessage'(Msg,
								<<>>,
								TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_ProtobufClient.ClientMessage_subscribe'(Msg,
						  Bin, TrUserData) ->
    SubBin =
	'encode_msg_ProtobufClient.ClientSubscribeMessage'(Msg,
							   <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_ProtobufClient.ClientMessage_unsubscribe'(Msg,
						    Bin, TrUserData) ->
    SubBin =
	'encode_msg_ProtobufClient.ClientUnsubscribeMessage'(Msg,
							     <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_ProtobufClient.ClientMessage_webAuthentication'(Msg,
							  Bin, TrUserData) ->
    SubBin =
	'encode_msg_ProtobufClient.WebAuthenticationMessage'(Msg,
							     <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_ProtobufClient.ClientMessage_apiAuthentication'(Msg,
							  Bin, TrUserData) ->
    SubBin =
	'encode_msg_ProtobufClient.APIAuthenticationMessage'(Msg,
							     <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_ProtobufClient.ClientIdentificationMessage_subscriptions'([Elem
								    | Rest],
								   Bin,
								   TrUserData) ->
    Bin2 = <<Bin/binary, 42>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2,
			 TrUserData),
    'e_field_ProtobufClient.ClientIdentificationMessage_subscriptions'(Rest,
								       Bin3,
								       TrUserData);
'e_field_ProtobufClient.ClientIdentificationMessage_subscriptions'([],
								   Bin,
								   _TrUserData) ->
    Bin.

'e_mfield_ProtobufClient.WebAuthenticationMessage_identification'(Msg,
								  Bin,
								  TrUserData) ->
    SubBin =
	'encode_msg_ProtobufClient.ClientIdentificationMessage'(Msg,
								<<>>,
								TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_ProtobufClient.WebAuthenticationMessage_access_list'([Elem
							       | Rest],
							      Bin,
							      TrUserData) ->
    Bin2 = <<Bin/binary, 34>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2,
			 TrUserData),
    'e_field_ProtobufClient.WebAuthenticationMessage_access_list'(Rest,
								  Bin3,
								  TrUserData);
'e_field_ProtobufClient.WebAuthenticationMessage_access_list'([],
							      Bin,
							      _TrUserData) ->
    Bin.

'e_mfield_ProtobufClient.TradeSubscription_auth'(Msg,
						 Bin, TrUserData) ->
    SubBin =
	'encode_msg_ProtobufClient.TradeSessionAuth'(Msg, <<>>,
						     TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_ProtobufClient.ClientSubscription_stream_subscription'(Msg,
								 Bin,
								 TrUserData) ->
    SubBin =
	'encode_msg_ProtobufClient.StreamSubscription'(Msg,
						       <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_ProtobufClient.ClientSubscription_trade_subscription'(Msg,
								Bin,
								TrUserData) ->
    SubBin =
	'encode_msg_ProtobufClient.TradeSubscription'(Msg, <<>>,
						      TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_ProtobufClient.APIAuthenticationMessage_subscriptions'([Elem
								 | Rest],
								Bin,
								TrUserData) ->
    Bin2 = <<Bin/binary, 50>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2,
			 TrUserData),
    'e_field_ProtobufClient.APIAuthenticationMessage_subscriptions'(Rest,
								    Bin3,
								    TrUserData);
'e_field_ProtobufClient.APIAuthenticationMessage_subscriptions'([],
								Bin,
								_TrUserData) ->
    Bin.

'e_mfield_ProtobufClient.APIAuthenticationMessage_client_subscriptions'(Msg,
									Bin,
									TrUserData) ->
    SubBin =
	'encode_msg_ProtobufClient.ClientSubscription'(Msg,
						       <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_ProtobufClient.APIAuthenticationMessage_client_subscriptions'([Elem
									| Rest],
								       Bin,
								       TrUserData) ->
    Bin2 = <<Bin/binary, 58>>,
    Bin3 =
	'e_mfield_ProtobufClient.APIAuthenticationMessage_client_subscriptions'(id(Elem,
										   TrUserData),
										Bin2,
										TrUserData),
    'e_field_ProtobufClient.APIAuthenticationMessage_client_subscriptions'(Rest,
									   Bin3,
									   TrUserData);
'e_field_ProtobufClient.APIAuthenticationMessage_client_subscriptions'([],
								       Bin,
								       _TrUserData) ->
    Bin.

'e_mfield_ProtobufClient.ClientSessionMessage_session'(Msg,
						       Bin, TrUserData) ->
    SubBin =
	'encode_msg_ProtobufClient.ClientSessionMessage.Session'(Msg,
								 <<>>,
								 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_mfield_ProtobufClient.ClientSessionMessage_anonymousTradingSession'(Msg,
								       Bin,
								       TrUserData) ->
    SubBin =
	'encode_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Msg,
										 <<>>,
										 TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_ProtobufClient.ClientSubscribeMessage_subscriptionKeys'([Elem
								  | Rest],
								 Bin,
								 TrUserData) ->
    Bin2 = <<Bin/binary, 10>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2,
			 TrUserData),
    'e_field_ProtobufClient.ClientSubscribeMessage_subscriptionKeys'(Rest,
								     Bin3,
								     TrUserData);
'e_field_ProtobufClient.ClientSubscribeMessage_subscriptionKeys'([],
								 Bin,
								 _TrUserData) ->
    Bin.

'e_mfield_ProtobufClient.ClientSubscribeMessage_subscriptions'(Msg,
							       Bin,
							       TrUserData) ->
    SubBin =
	'encode_msg_ProtobufClient.ClientSubscription'(Msg,
						       <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_ProtobufClient.ClientSubscribeMessage_subscriptions'([Elem
							       | Rest],
							      Bin,
							      TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 =
	'e_mfield_ProtobufClient.ClientSubscribeMessage_subscriptions'(id(Elem,
									  TrUserData),
								       Bin2,
								       TrUserData),
    'e_field_ProtobufClient.ClientSubscribeMessage_subscriptions'(Rest,
								  Bin3,
								  TrUserData);
'e_field_ProtobufClient.ClientSubscribeMessage_subscriptions'([],
							      Bin,
							      _TrUserData) ->
    Bin.

'e_field_ProtobufClient.ClientUnsubscribeMessage_subscriptionKeys'([Elem
								    | Rest],
								   Bin,
								   TrUserData) ->
    Bin2 = <<Bin/binary, 10>>,
    Bin3 = e_type_string(id(Elem, TrUserData), Bin2,
			 TrUserData),
    'e_field_ProtobufClient.ClientUnsubscribeMessage_subscriptionKeys'(Rest,
								       Bin3,
								       TrUserData);
'e_field_ProtobufClient.ClientUnsubscribeMessage_subscriptionKeys'([],
								   Bin,
								   _TrUserData) ->
    Bin.

'e_mfield_ProtobufClient.ClientUnsubscribeMessage_subscriptions'(Msg,
								 Bin,
								 TrUserData) ->
    SubBin =
	'encode_msg_ProtobufClient.ClientSubscription'(Msg,
						       <<>>, TrUserData),
    Bin2 = e_varint(byte_size(SubBin), Bin),
    <<Bin2/binary, SubBin/binary>>.

'e_field_ProtobufClient.ClientUnsubscribeMessage_subscriptions'([Elem
								 | Rest],
								Bin,
								TrUserData) ->
    Bin2 = <<Bin/binary, 18>>,
    Bin3 =
	'e_mfield_ProtobufClient.ClientUnsubscribeMessage_subscriptions'(id(Elem,
									    TrUserData),
									 Bin2,
									 TrUserData),
    'e_field_ProtobufClient.ClientUnsubscribeMessage_subscriptions'(Rest,
								    Bin3,
								    TrUserData);
'e_field_ProtobufClient.ClientUnsubscribeMessage_subscriptions'([],
								Bin,
								_TrUserData) ->
    Bin.

'e_enum_ProtobufClient.APIAuthenticationMessage.Source'('UNKNOWN',
							Bin, _TrUserData) ->
    <<Bin/binary, 0>>;
'e_enum_ProtobufClient.APIAuthenticationMessage.Source'('GOLANG_SDK',
							Bin, _TrUserData) ->
    <<Bin/binary, 1>>;
'e_enum_ProtobufClient.APIAuthenticationMessage.Source'('JAVASCRIPT_SDK',
							Bin, _TrUserData) ->
    <<Bin/binary, 2>>;
'e_enum_ProtobufClient.APIAuthenticationMessage.Source'('NODE_SDK',
							Bin, _TrUserData) ->
    <<Bin/binary, 3>>;
'e_enum_ProtobufClient.APIAuthenticationMessage.Source'('RUST_SDK',
							Bin, _TrUserData) ->
    <<Bin/binary, 5>>;
'e_enum_ProtobufClient.APIAuthenticationMessage.Source'('CW_WEB',
							Bin, _TrUserData) ->
    <<Bin/binary, 4>>;
'e_enum_ProtobufClient.APIAuthenticationMessage.Source'(V,
							Bin, _TrUserData) ->
    e_varint(V, Bin).

-compile({nowarn_unused_function,e_type_sint/3}).
e_type_sint(Value, Bin, _TrUserData) when Value >= 0 ->
    e_varint(Value * 2, Bin);
e_type_sint(Value, Bin, _TrUserData) ->
    e_varint(Value * -2 - 1, Bin).

-compile({nowarn_unused_function,e_type_int32/3}).
e_type_int32(Value, Bin, _TrUserData)
    when 0 =< Value, Value =< 127 ->
    <<Bin/binary, Value>>;
e_type_int32(Value, Bin, _TrUserData) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

-compile({nowarn_unused_function,e_type_int64/3}).
e_type_int64(Value, Bin, _TrUserData)
    when 0 =< Value, Value =< 127 ->
    <<Bin/binary, Value>>;
e_type_int64(Value, Bin, _TrUserData) ->
    <<N:64/unsigned-native>> = <<Value:64/signed-native>>,
    e_varint(N, Bin).

-compile({nowarn_unused_function,e_type_bool/3}).
e_type_bool(true, Bin, _TrUserData) ->
    <<Bin/binary, 1>>;
e_type_bool(false, Bin, _TrUserData) ->
    <<Bin/binary, 0>>;
e_type_bool(1, Bin, _TrUserData) -> <<Bin/binary, 1>>;
e_type_bool(0, Bin, _TrUserData) -> <<Bin/binary, 0>>.

-compile({nowarn_unused_function,e_type_string/3}).
e_type_string(S, Bin, _TrUserData) ->
    Utf8 = unicode:characters_to_binary(S),
    Bin2 = e_varint(byte_size(Utf8), Bin),
    <<Bin2/binary, Utf8/binary>>.

-compile({nowarn_unused_function,e_type_bytes/3}).
e_type_bytes(Bytes, Bin, _TrUserData)
    when is_binary(Bytes) ->
    Bin2 = e_varint(byte_size(Bytes), Bin),
    <<Bin2/binary, Bytes/binary>>;
e_type_bytes(Bytes, Bin, _TrUserData)
    when is_list(Bytes) ->
    BytesBin = iolist_to_binary(Bytes),
    Bin2 = e_varint(byte_size(BytesBin), Bin),
    <<Bin2/binary, BytesBin/binary>>.

-compile({nowarn_unused_function,e_type_fixed32/3}).
e_type_fixed32(Value, Bin, _TrUserData) ->
    <<Bin/binary, Value:32/little>>.

-compile({nowarn_unused_function,e_type_sfixed32/3}).
e_type_sfixed32(Value, Bin, _TrUserData) ->
    <<Bin/binary, Value:32/little-signed>>.

-compile({nowarn_unused_function,e_type_fixed64/3}).
e_type_fixed64(Value, Bin, _TrUserData) ->
    <<Bin/binary, Value:64/little>>.

-compile({nowarn_unused_function,e_type_sfixed64/3}).
e_type_sfixed64(Value, Bin, _TrUserData) ->
    <<Bin/binary, Value:64/little-signed>>.

-compile({nowarn_unused_function,e_type_float/3}).
e_type_float(V, Bin, _) when is_number(V) ->
    <<Bin/binary, V:32/little-float>>;
e_type_float(infinity, Bin, _) ->
    <<Bin/binary, 0:16, 128, 127>>;
e_type_float('-infinity', Bin, _) ->
    <<Bin/binary, 0:16, 128, 255>>;
e_type_float(nan, Bin, _) ->
    <<Bin/binary, 0:16, 192, 127>>.

-compile({nowarn_unused_function,e_type_double/3}).
e_type_double(V, Bin, _) when is_number(V) ->
    <<Bin/binary, V:64/little-float>>;
e_type_double(infinity, Bin, _) ->
    <<Bin/binary, 0:48, 240, 127>>;
e_type_double('-infinity', Bin, _) ->
    <<Bin/binary, 0:48, 240, 255>>;
e_type_double(nan, Bin, _) ->
    <<Bin/binary, 0:48, 248, 127>>.

-compile({nowarn_unused_function,e_varint/3}).
e_varint(N, Bin, _TrUserData) -> e_varint(N, Bin).

-compile({nowarn_unused_function,e_varint/2}).
e_varint(N, Bin) when N =< 127 -> <<Bin/binary, N>>;
e_varint(N, Bin) ->
    Bin2 = <<Bin/binary, (N band 127 bor 128)>>,
    e_varint(N bsr 7, Bin2).

is_empty_string("") -> true;
is_empty_string(<<>>) -> true;
is_empty_string(L) when is_list(L) ->
    not string_has_chars(L);
is_empty_string(B) when is_binary(B) -> false.

string_has_chars([C | _]) when is_integer(C) -> true;
string_has_chars([H | T]) ->
    case string_has_chars(H) of
      true -> true;
      false -> string_has_chars(T)
    end;
string_has_chars(B)
    when is_binary(B), byte_size(B) =/= 0 ->
    true;
string_has_chars(C) when is_integer(C) -> true;
string_has_chars(<<>>) -> false;
string_has_chars([]) -> false.


decode_msg(Bin, MsgName) when is_binary(Bin) ->
    decode_msg(Bin, MsgName, []).

decode_msg(Bin, MsgName, Opts) when is_binary(Bin) ->
    TrUserData = proplists:get_value(user_data, Opts),
    decode_msg_1_catch(Bin, MsgName, TrUserData).

-ifdef('OTP_RELEASE').
decode_msg_1_catch(Bin, MsgName, TrUserData) ->
    try decode_msg_2_doit(MsgName, Bin, TrUserData)
    catch Class:Reason:StackTrace -> error({gpb_error,{decoding_failure, {Bin, MsgName, {Class, Reason, StackTrace}}}})
    end.
-else.
decode_msg_1_catch(Bin, MsgName, TrUserData) ->
    try decode_msg_2_doit(MsgName, Bin, TrUserData)
    catch Class:Reason ->
        StackTrace = erlang:get_stacktrace(),
        error({gpb_error,{decoding_failure, {Bin, MsgName, {Class, Reason, StackTrace}}}})
    end.
-endif.

decode_msg_2_doit('ProtobufClient.ClientMessage', Bin,
		  TrUserData) ->
    id('decode_msg_ProtobufClient.ClientMessage'(Bin,
						 TrUserData),
       TrUserData);
decode_msg_2_doit('ProtobufClient.ClientIdentificationMessage',
		  Bin, TrUserData) ->
    id('decode_msg_ProtobufClient.ClientIdentificationMessage'(Bin,
							       TrUserData),
       TrUserData);
decode_msg_2_doit('ProtobufClient.WebAuthenticationMessage',
		  Bin, TrUserData) ->
    id('decode_msg_ProtobufClient.WebAuthenticationMessage'(Bin,
							    TrUserData),
       TrUserData);
decode_msg_2_doit('ProtobufClient.TradeSessionAuth',
		  Bin, TrUserData) ->
    id('decode_msg_ProtobufClient.TradeSessionAuth'(Bin,
						    TrUserData),
       TrUserData);
decode_msg_2_doit('ProtobufClient.TradeSubscription',
		  Bin, TrUserData) ->
    id('decode_msg_ProtobufClient.TradeSubscription'(Bin,
						     TrUserData),
       TrUserData);
decode_msg_2_doit('ProtobufClient.StreamSubscription',
		  Bin, TrUserData) ->
    id('decode_msg_ProtobufClient.StreamSubscription'(Bin,
						      TrUserData),
       TrUserData);
decode_msg_2_doit('ProtobufClient.ClientSubscription',
		  Bin, TrUserData) ->
    id('decode_msg_ProtobufClient.ClientSubscription'(Bin,
						      TrUserData),
       TrUserData);
decode_msg_2_doit('ProtobufClient.APIAuthenticationMessage',
		  Bin, TrUserData) ->
    id('decode_msg_ProtobufClient.APIAuthenticationMessage'(Bin,
							    TrUserData),
       TrUserData);
decode_msg_2_doit('ProtobufClient.ClientSessionMessage.Session',
		  Bin, TrUserData) ->
    id('decode_msg_ProtobufClient.ClientSessionMessage.Session'(Bin,
								TrUserData),
       TrUserData);
decode_msg_2_doit('ProtobufClient.ClientSessionMessage.AnonymousTradingSession',
		  Bin, TrUserData) ->
    id('decode_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Bin,
										TrUserData),
       TrUserData);
decode_msg_2_doit('ProtobufClient.ClientSessionMessage',
		  Bin, TrUserData) ->
    id('decode_msg_ProtobufClient.ClientSessionMessage'(Bin,
							TrUserData),
       TrUserData);
decode_msg_2_doit('ProtobufClient.ClientSubscribeMessage',
		  Bin, TrUserData) ->
    id('decode_msg_ProtobufClient.ClientSubscribeMessage'(Bin,
							  TrUserData),
       TrUserData);
decode_msg_2_doit('ProtobufClient.ClientUnsubscribeMessage',
		  Bin, TrUserData) ->
    id('decode_msg_ProtobufClient.ClientUnsubscribeMessage'(Bin,
							    TrUserData),
       TrUserData).



'decode_msg_ProtobufClient.ClientMessage'(Bin,
					  TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientMessage'(Bin,
						      0, 0,
						      id(undefined, TrUserData),
						      TrUserData).

'dfp_read_field_def_ProtobufClient.ClientMessage'(<<10,
						    Rest/binary>>,
						  Z1, Z2, F@_1, TrUserData) ->
    'd_field_ProtobufClient.ClientMessage_identification'(Rest,
							  Z1, Z2, F@_1,
							  TrUserData);
'dfp_read_field_def_ProtobufClient.ClientMessage'(<<18,
						    Rest/binary>>,
						  Z1, Z2, F@_1, TrUserData) ->
    'd_field_ProtobufClient.ClientMessage_subscribe'(Rest,
						     Z1, Z2, F@_1, TrUserData);
'dfp_read_field_def_ProtobufClient.ClientMessage'(<<26,
						    Rest/binary>>,
						  Z1, Z2, F@_1, TrUserData) ->
    'd_field_ProtobufClient.ClientMessage_unsubscribe'(Rest,
						       Z1, Z2, F@_1,
						       TrUserData);
'dfp_read_field_def_ProtobufClient.ClientMessage'(<<34,
						    Rest/binary>>,
						  Z1, Z2, F@_1, TrUserData) ->
    'd_field_ProtobufClient.ClientMessage_webAuthentication'(Rest,
							     Z1, Z2, F@_1,
							     TrUserData);
'dfp_read_field_def_ProtobufClient.ClientMessage'(<<42,
						    Rest/binary>>,
						  Z1, Z2, F@_1, TrUserData) ->
    'd_field_ProtobufClient.ClientMessage_apiAuthentication'(Rest,
							     Z1, Z2, F@_1,
							     TrUserData);
'dfp_read_field_def_ProtobufClient.ClientMessage'(<<>>,
						  0, 0, F@_1, _) ->
    #'ProtobufClient.ClientMessage'{body = F@_1};
'dfp_read_field_def_ProtobufClient.ClientMessage'(Other,
						  Z1, Z2, F@_1, TrUserData) ->
    'dg_read_field_def_ProtobufClient.ClientMessage'(Other,
						     Z1, Z2, F@_1, TrUserData).

'dg_read_field_def_ProtobufClient.ClientMessage'(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F@_1, TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtobufClient.ClientMessage'(Rest,
						     N + 7, X bsl N + Acc, F@_1,
						     TrUserData);
'dg_read_field_def_ProtobufClient.ClientMessage'(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, F@_1, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  'd_field_ProtobufClient.ClientMessage_identification'(Rest,
								0, 0, F@_1,
								TrUserData);
      18 ->
	  'd_field_ProtobufClient.ClientMessage_subscribe'(Rest,
							   0, 0, F@_1,
							   TrUserData);
      26 ->
	  'd_field_ProtobufClient.ClientMessage_unsubscribe'(Rest,
							     0, 0, F@_1,
							     TrUserData);
      34 ->
	  'd_field_ProtobufClient.ClientMessage_webAuthentication'(Rest,
								   0, 0, F@_1,
								   TrUserData);
      42 ->
	  'd_field_ProtobufClient.ClientMessage_apiAuthentication'(Rest,
								   0, 0, F@_1,
								   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtobufClient.ClientMessage'(Rest, 0, 0,
							   F@_1, TrUserData);
	    1 ->
		'skip_64_ProtobufClient.ClientMessage'(Rest, 0, 0, F@_1,
						       TrUserData);
	    2 ->
		'skip_length_delimited_ProtobufClient.ClientMessage'(Rest,
								     0, 0, F@_1,
								     TrUserData);
	    3 ->
		'skip_group_ProtobufClient.ClientMessage'(Rest,
							  Key bsr 3, 0, F@_1,
							  TrUserData);
	    5 ->
		'skip_32_ProtobufClient.ClientMessage'(Rest, 0, 0, F@_1,
						       TrUserData)
	  end
    end;
'dg_read_field_def_ProtobufClient.ClientMessage'(<<>>,
						 0, 0, F@_1, _) ->
    #'ProtobufClient.ClientMessage'{body = F@_1}.

'd_field_ProtobufClient.ClientMessage_identification'(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F@_1, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientMessage_identification'(Rest,
							  N + 7, X bsl N + Acc,
							  F@_1, TrUserData);
'd_field_ProtobufClient.ClientMessage_identification'(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, Prev,
						      TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Bs:Len/binary, Rest2/binary>> = Rest,
			   {id('decode_msg_ProtobufClient.ClientIdentificationMessage'(Bs,
										       TrUserData),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientMessage'(RestF,
						      0, 0,
						      case Prev of
							undefined ->
							    id({identification,
								NewFValue},
							       TrUserData);
							{identification,
							 MVPrev} ->
							    id({identification,
								'merge_msg_ProtobufClient.ClientIdentificationMessage'(MVPrev,
														       NewFValue,
														       TrUserData)},
							       TrUserData);
							_ ->
							    id({identification,
								NewFValue},
							       TrUserData)
						      end,
						      TrUserData).

'd_field_ProtobufClient.ClientMessage_subscribe'(<<1:1,
						   X:7, Rest/binary>>,
						 N, Acc, F@_1, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientMessage_subscribe'(Rest,
						     N + 7, X bsl N + Acc, F@_1,
						     TrUserData);
'd_field_ProtobufClient.ClientMessage_subscribe'(<<0:1,
						   X:7, Rest/binary>>,
						 N, Acc, Prev, TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Bs:Len/binary, Rest2/binary>> = Rest,
			   {id('decode_msg_ProtobufClient.ClientSubscribeMessage'(Bs,
										  TrUserData),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientMessage'(RestF,
						      0, 0,
						      case Prev of
							undefined ->
							    id({subscribe,
								NewFValue},
							       TrUserData);
							{subscribe, MVPrev} ->
							    id({subscribe,
								'merge_msg_ProtobufClient.ClientSubscribeMessage'(MVPrev,
														  NewFValue,
														  TrUserData)},
							       TrUserData);
							_ ->
							    id({subscribe,
								NewFValue},
							       TrUserData)
						      end,
						      TrUserData).

'd_field_ProtobufClient.ClientMessage_unsubscribe'(<<1:1,
						     X:7, Rest/binary>>,
						   N, Acc, F@_1, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientMessage_unsubscribe'(Rest,
						       N + 7, X bsl N + Acc,
						       F@_1, TrUserData);
'd_field_ProtobufClient.ClientMessage_unsubscribe'(<<0:1,
						     X:7, Rest/binary>>,
						   N, Acc, Prev, TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Bs:Len/binary, Rest2/binary>> = Rest,
			   {id('decode_msg_ProtobufClient.ClientUnsubscribeMessage'(Bs,
										    TrUserData),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientMessage'(RestF,
						      0, 0,
						      case Prev of
							undefined ->
							    id({unsubscribe,
								NewFValue},
							       TrUserData);
							{unsubscribe, MVPrev} ->
							    id({unsubscribe,
								'merge_msg_ProtobufClient.ClientUnsubscribeMessage'(MVPrev,
														    NewFValue,
														    TrUserData)},
							       TrUserData);
							_ ->
							    id({unsubscribe,
								NewFValue},
							       TrUserData)
						      end,
						      TrUserData).

'd_field_ProtobufClient.ClientMessage_webAuthentication'(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F@_1,
							 TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientMessage_webAuthentication'(Rest,
							     N + 7,
							     X bsl N + Acc,
							     F@_1, TrUserData);
'd_field_ProtobufClient.ClientMessage_webAuthentication'(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, Prev,
							 TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Bs:Len/binary, Rest2/binary>> = Rest,
			   {id('decode_msg_ProtobufClient.WebAuthenticationMessage'(Bs,
										    TrUserData),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientMessage'(RestF,
						      0, 0,
						      case Prev of
							undefined ->
							    id({webAuthentication,
								NewFValue},
							       TrUserData);
							{webAuthentication,
							 MVPrev} ->
							    id({webAuthentication,
								'merge_msg_ProtobufClient.WebAuthenticationMessage'(MVPrev,
														    NewFValue,
														    TrUserData)},
							       TrUserData);
							_ ->
							    id({webAuthentication,
								NewFValue},
							       TrUserData)
						      end,
						      TrUserData).

'd_field_ProtobufClient.ClientMessage_apiAuthentication'(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F@_1,
							 TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientMessage_apiAuthentication'(Rest,
							     N + 7,
							     X bsl N + Acc,
							     F@_1, TrUserData);
'd_field_ProtobufClient.ClientMessage_apiAuthentication'(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, Prev,
							 TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Bs:Len/binary, Rest2/binary>> = Rest,
			   {id('decode_msg_ProtobufClient.APIAuthenticationMessage'(Bs,
										    TrUserData),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientMessage'(RestF,
						      0, 0,
						      case Prev of
							undefined ->
							    id({apiAuthentication,
								NewFValue},
							       TrUserData);
							{apiAuthentication,
							 MVPrev} ->
							    id({apiAuthentication,
								'merge_msg_ProtobufClient.APIAuthenticationMessage'(MVPrev,
														    NewFValue,
														    TrUserData)},
							       TrUserData);
							_ ->
							    id({apiAuthentication,
								NewFValue},
							       TrUserData)
						      end,
						      TrUserData).

'skip_varint_ProtobufClient.ClientMessage'(<<1:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F@_1, TrUserData) ->
    'skip_varint_ProtobufClient.ClientMessage'(Rest, Z1, Z2,
					       F@_1, TrUserData);
'skip_varint_ProtobufClient.ClientMessage'(<<0:1, _:7,
					     Rest/binary>>,
					   Z1, Z2, F@_1, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientMessage'(Rest,
						      Z1, Z2, F@_1, TrUserData).

'skip_length_delimited_ProtobufClient.ClientMessage'(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F@_1, TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtobufClient.ClientMessage'(Rest,
							 N + 7, X bsl N + Acc,
							 F@_1, TrUserData);
'skip_length_delimited_ProtobufClient.ClientMessage'(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F@_1,
						     TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtobufClient.ClientMessage'(Rest2,
						      0, 0, F@_1, TrUserData).

'skip_group_ProtobufClient.ClientMessage'(Bin, FNum, Z2,
					  F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_ProtobufClient.ClientMessage'(Rest,
						      0, Z2, F@_1, TrUserData).

'skip_32_ProtobufClient.ClientMessage'(<<_:32,
					 Rest/binary>>,
				       Z1, Z2, F@_1, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientMessage'(Rest,
						      Z1, Z2, F@_1, TrUserData).

'skip_64_ProtobufClient.ClientMessage'(<<_:64,
					 Rest/binary>>,
				       Z1, Z2, F@_1, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientMessage'(Rest,
						      Z1, Z2, F@_1, TrUserData).

'decode_msg_ProtobufClient.ClientIdentificationMessage'(Bin,
							TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(Bin,
								    0, 0,
								    id([],
								       TrUserData),
								    id([],
								       TrUserData),
								    id([],
								       TrUserData),
								    id([],
								       TrUserData),
								    id([],
								       TrUserData),
								    TrUserData).

'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(<<10,
								  Rest/binary>>,
								Z1, Z2, F@_1,
								F@_2, F@_3,
								F@_4, F@_5,
								TrUserData) ->
    'd_field_ProtobufClient.ClientIdentificationMessage_useragent'(Rest,
								   Z1, Z2, F@_1,
								   F@_2, F@_3,
								   F@_4, F@_5,
								   TrUserData);
'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(<<18,
								  Rest/binary>>,
								Z1, Z2, F@_1,
								F@_2, F@_3,
								F@_4, F@_5,
								TrUserData) ->
    'd_field_ProtobufClient.ClientIdentificationMessage_revision'(Rest,
								  Z1, Z2, F@_1,
								  F@_2, F@_3,
								  F@_4, F@_5,
								  TrUserData);
'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(<<26,
								  Rest/binary>>,
								Z1, Z2, F@_1,
								F@_2, F@_3,
								F@_4, F@_5,
								TrUserData) ->
    'd_field_ProtobufClient.ClientIdentificationMessage_integration'(Rest,
								     Z1, Z2,
								     F@_1, F@_2,
								     F@_3, F@_4,
								     F@_5,
								     TrUserData);
'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(<<34,
								  Rest/binary>>,
								Z1, Z2, F@_1,
								F@_2, F@_3,
								F@_4, F@_5,
								TrUserData) ->
    'd_field_ProtobufClient.ClientIdentificationMessage_locale'(Rest,
								Z1, Z2, F@_1,
								F@_2, F@_3,
								F@_4, F@_5,
								TrUserData);
'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(<<42,
								  Rest/binary>>,
								Z1, Z2, F@_1,
								F@_2, F@_3,
								F@_4, F@_5,
								TrUserData) ->
    'd_field_ProtobufClient.ClientIdentificationMessage_subscriptions'(Rest,
								       Z1, Z2,
								       F@_1,
								       F@_2,
								       F@_3,
								       F@_4,
								       F@_5,
								       TrUserData);
'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(<<>>,
								0, 0, F@_1,
								F@_2, F@_3,
								F@_4, R1,
								TrUserData) ->
    #'ProtobufClient.ClientIdentificationMessage'{useragent
						      = F@_1,
						  revision = F@_2,
						  integration = F@_3,
						  locale = F@_4,
						  subscriptions =
						      lists_reverse(R1,
								    TrUserData)};
'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(Other,
								Z1, Z2, F@_1,
								F@_2, F@_3,
								F@_4, F@_5,
								TrUserData) ->
    'dg_read_field_def_ProtobufClient.ClientIdentificationMessage'(Other,
								   Z1, Z2, F@_1,
								   F@_2, F@_3,
								   F@_4, F@_5,
								   TrUserData).

'dg_read_field_def_ProtobufClient.ClientIdentificationMessage'(<<1:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F@_1,
							       F@_2, F@_3, F@_4,
							       F@_5, TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtobufClient.ClientIdentificationMessage'(Rest,
								   N + 7,
								   X bsl N +
								     Acc,
								   F@_1, F@_2,
								   F@_3, F@_4,
								   F@_5,
								   TrUserData);
'dg_read_field_def_ProtobufClient.ClientIdentificationMessage'(<<0:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F@_1,
							       F@_2, F@_3, F@_4,
							       F@_5,
							       TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  'd_field_ProtobufClient.ClientIdentificationMessage_useragent'(Rest,
									 0, 0,
									 F@_1,
									 F@_2,
									 F@_3,
									 F@_4,
									 F@_5,
									 TrUserData);
      18 ->
	  'd_field_ProtobufClient.ClientIdentificationMessage_revision'(Rest,
									0, 0,
									F@_1,
									F@_2,
									F@_3,
									F@_4,
									F@_5,
									TrUserData);
      26 ->
	  'd_field_ProtobufClient.ClientIdentificationMessage_integration'(Rest,
									   0, 0,
									   F@_1,
									   F@_2,
									   F@_3,
									   F@_4,
									   F@_5,
									   TrUserData);
      34 ->
	  'd_field_ProtobufClient.ClientIdentificationMessage_locale'(Rest,
								      0, 0,
								      F@_1,
								      F@_2,
								      F@_3,
								      F@_4,
								      F@_5,
								      TrUserData);
      42 ->
	  'd_field_ProtobufClient.ClientIdentificationMessage_subscriptions'(Rest,
									     0,
									     0,
									     F@_1,
									     F@_2,
									     F@_3,
									     F@_4,
									     F@_5,
									     TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtobufClient.ClientIdentificationMessage'(Rest,
									 0, 0,
									 F@_1,
									 F@_2,
									 F@_3,
									 F@_4,
									 F@_5,
									 TrUserData);
	    1 ->
		'skip_64_ProtobufClient.ClientIdentificationMessage'(Rest,
								     0, 0, F@_1,
								     F@_2, F@_3,
								     F@_4, F@_5,
								     TrUserData);
	    2 ->
		'skip_length_delimited_ProtobufClient.ClientIdentificationMessage'(Rest,
										   0,
										   0,
										   F@_1,
										   F@_2,
										   F@_3,
										   F@_4,
										   F@_5,
										   TrUserData);
	    3 ->
		'skip_group_ProtobufClient.ClientIdentificationMessage'(Rest,
									Key bsr
									  3,
									0, F@_1,
									F@_2,
									F@_3,
									F@_4,
									F@_5,
									TrUserData);
	    5 ->
		'skip_32_ProtobufClient.ClientIdentificationMessage'(Rest,
								     0, 0, F@_1,
								     F@_2, F@_3,
								     F@_4, F@_5,
								     TrUserData)
	  end
    end;
'dg_read_field_def_ProtobufClient.ClientIdentificationMessage'(<<>>,
							       0, 0, F@_1, F@_2,
							       F@_3, F@_4, R1,
							       TrUserData) ->
    #'ProtobufClient.ClientIdentificationMessage'{useragent
						      = F@_1,
						  revision = F@_2,
						  integration = F@_3,
						  locale = F@_4,
						  subscriptions =
						      lists_reverse(R1,
								    TrUserData)}.

'd_field_ProtobufClient.ClientIdentificationMessage_useragent'(<<1:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F@_1,
							       F@_2, F@_3, F@_4,
							       F@_5, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientIdentificationMessage_useragent'(Rest,
								   N + 7,
								   X bsl N +
								     Acc,
								   F@_1, F@_2,
								   F@_3, F@_4,
								   F@_5,
								   TrUserData);
'd_field_ProtobufClient.ClientIdentificationMessage_useragent'(<<0:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, _, F@_2,
							       F@_3, F@_4, F@_5,
							       TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(RestF,
								    0, 0,
								    NewFValue,
								    F@_2, F@_3,
								    F@_4, F@_5,
								    TrUserData).

'd_field_ProtobufClient.ClientIdentificationMessage_revision'(<<1:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F@_1,
							      F@_2, F@_3, F@_4,
							      F@_5, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientIdentificationMessage_revision'(Rest,
								  N + 7,
								  X bsl N + Acc,
								  F@_1, F@_2,
								  F@_3, F@_4,
								  F@_5,
								  TrUserData);
'd_field_ProtobufClient.ClientIdentificationMessage_revision'(<<0:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F@_1, _,
							      F@_3, F@_4, F@_5,
							      TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(RestF,
								    0, 0, F@_1,
								    NewFValue,
								    F@_3, F@_4,
								    F@_5,
								    TrUserData).

'd_field_ProtobufClient.ClientIdentificationMessage_integration'(<<1:1,
								   X:7,
								   Rest/binary>>,
								 N, Acc, F@_1,
								 F@_2, F@_3,
								 F@_4, F@_5,
								 TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientIdentificationMessage_integration'(Rest,
								     N + 7,
								     X bsl N +
								       Acc,
								     F@_1, F@_2,
								     F@_3, F@_4,
								     F@_5,
								     TrUserData);
'd_field_ProtobufClient.ClientIdentificationMessage_integration'(<<0:1,
								   X:7,
								   Rest/binary>>,
								 N, Acc, F@_1,
								 F@_2, _, F@_4,
								 F@_5,
								 TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(RestF,
								    0, 0, F@_1,
								    F@_2,
								    NewFValue,
								    F@_4, F@_5,
								    TrUserData).

'd_field_ProtobufClient.ClientIdentificationMessage_locale'(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F@_1, F@_2,
							    F@_3, F@_4, F@_5,
							    TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientIdentificationMessage_locale'(Rest,
								N + 7,
								X bsl N + Acc,
								F@_1, F@_2,
								F@_3, F@_4,
								F@_5,
								TrUserData);
'd_field_ProtobufClient.ClientIdentificationMessage_locale'(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F@_1, F@_2,
							    F@_3, _, F@_5,
							    TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(RestF,
								    0, 0, F@_1,
								    F@_2, F@_3,
								    NewFValue,
								    F@_5,
								    TrUserData).

'd_field_ProtobufClient.ClientIdentificationMessage_subscriptions'(<<1:1,
								     X:7,
								     Rest/binary>>,
								   N, Acc, F@_1,
								   F@_2, F@_3,
								   F@_4, F@_5,
								   TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientIdentificationMessage_subscriptions'(Rest,
								       N + 7,
								       X bsl N +
									 Acc,
								       F@_1,
								       F@_2,
								       F@_3,
								       F@_4,
								       F@_5,
								       TrUserData);
'd_field_ProtobufClient.ClientIdentificationMessage_subscriptions'(<<0:1,
								     X:7,
								     Rest/binary>>,
								   N, Acc, F@_1,
								   F@_2, F@_3,
								   F@_4, Prev,
								   TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(RestF,
								    0, 0, F@_1,
								    F@_2, F@_3,
								    F@_4,
								    cons(NewFValue,
									 Prev,
									 TrUserData),
								    TrUserData).

'skip_varint_ProtobufClient.ClientIdentificationMessage'(<<1:1,
							   _:7, Rest/binary>>,
							 Z1, Z2, F@_1, F@_2,
							 F@_3, F@_4, F@_5,
							 TrUserData) ->
    'skip_varint_ProtobufClient.ClientIdentificationMessage'(Rest,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4, F@_5,
							     TrUserData);
'skip_varint_ProtobufClient.ClientIdentificationMessage'(<<0:1,
							   _:7, Rest/binary>>,
							 Z1, Z2, F@_1, F@_2,
							 F@_3, F@_4, F@_5,
							 TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(Rest,
								    Z1, Z2,
								    F@_1, F@_2,
								    F@_3, F@_4,
								    F@_5,
								    TrUserData).

'skip_length_delimited_ProtobufClient.ClientIdentificationMessage'(<<1:1,
								     X:7,
								     Rest/binary>>,
								   N, Acc, F@_1,
								   F@_2, F@_3,
								   F@_4, F@_5,
								   TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtobufClient.ClientIdentificationMessage'(Rest,
								       N + 7,
								       X bsl N +
									 Acc,
								       F@_1,
								       F@_2,
								       F@_3,
								       F@_4,
								       F@_5,
								       TrUserData);
'skip_length_delimited_ProtobufClient.ClientIdentificationMessage'(<<0:1,
								     X:7,
								     Rest/binary>>,
								   N, Acc, F@_1,
								   F@_2, F@_3,
								   F@_4, F@_5,
								   TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(Rest2,
								    0, 0, F@_1,
								    F@_2, F@_3,
								    F@_4, F@_5,
								    TrUserData).

'skip_group_ProtobufClient.ClientIdentificationMessage'(Bin,
							FNum, Z2, F@_1, F@_2,
							F@_3, F@_4, F@_5,
							TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(Rest,
								    0, Z2, F@_1,
								    F@_2, F@_3,
								    F@_4, F@_5,
								    TrUserData).

'skip_32_ProtobufClient.ClientIdentificationMessage'(<<_:32,
						       Rest/binary>>,
						     Z1, Z2, F@_1, F@_2, F@_3,
						     F@_4, F@_5, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(Rest,
								    Z1, Z2,
								    F@_1, F@_2,
								    F@_3, F@_4,
								    F@_5,
								    TrUserData).

'skip_64_ProtobufClient.ClientIdentificationMessage'(<<_:64,
						       Rest/binary>>,
						     Z1, Z2, F@_1, F@_2, F@_3,
						     F@_4, F@_5, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientIdentificationMessage'(Rest,
								    Z1, Z2,
								    F@_1, F@_2,
								    F@_3, F@_4,
								    F@_5,
								    TrUserData).

'decode_msg_ProtobufClient.WebAuthenticationMessage'(Bin,
						     TrUserData) ->
    'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(Bin,
								 0, 0,
								 id(undefined,
								    TrUserData),
								 id([],
								    TrUserData),
								 id([],
								    TrUserData),
								 id([],
								    TrUserData),
								 TrUserData).

'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(<<10,
							       Rest/binary>>,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4,
							     TrUserData) ->
    'd_field_ProtobufClient.WebAuthenticationMessage_identification'(Rest,
								     Z1, Z2,
								     F@_1, F@_2,
								     F@_3, F@_4,
								     TrUserData);
'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(<<18,
							       Rest/binary>>,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4,
							     TrUserData) ->
    'd_field_ProtobufClient.WebAuthenticationMessage_token'(Rest,
							    Z1, Z2, F@_1, F@_2,
							    F@_3, F@_4,
							    TrUserData);
'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(<<26,
							       Rest/binary>>,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4,
							     TrUserData) ->
    'd_field_ProtobufClient.WebAuthenticationMessage_nonce'(Rest,
							    Z1, Z2, F@_1, F@_2,
							    F@_3, F@_4,
							    TrUserData);
'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(<<34,
							       Rest/binary>>,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4,
							     TrUserData) ->
    'd_field_ProtobufClient.WebAuthenticationMessage_access_list'(Rest,
								  Z1, Z2, F@_1,
								  F@_2, F@_3,
								  F@_4,
								  TrUserData);
'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(<<>>,
							     0, 0, F@_1, F@_2,
							     F@_3, R1,
							     TrUserData) ->
    #'ProtobufClient.WebAuthenticationMessage'{identification
						   = F@_1,
					       token = F@_2, nonce = F@_3,
					       access_list =
						   lists_reverse(R1,
								 TrUserData)};
'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(Other,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4,
							     TrUserData) ->
    'dg_read_field_def_ProtobufClient.WebAuthenticationMessage'(Other,
								Z1, Z2, F@_1,
								F@_2, F@_3,
								F@_4,
								TrUserData).

'dg_read_field_def_ProtobufClient.WebAuthenticationMessage'(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F@_1, F@_2,
							    F@_3, F@_4,
							    TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtobufClient.WebAuthenticationMessage'(Rest,
								N + 7,
								X bsl N + Acc,
								F@_1, F@_2,
								F@_3, F@_4,
								TrUserData);
'dg_read_field_def_ProtobufClient.WebAuthenticationMessage'(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F@_1, F@_2,
							    F@_3, F@_4,
							    TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  'd_field_ProtobufClient.WebAuthenticationMessage_identification'(Rest,
									   0, 0,
									   F@_1,
									   F@_2,
									   F@_3,
									   F@_4,
									   TrUserData);
      18 ->
	  'd_field_ProtobufClient.WebAuthenticationMessage_token'(Rest,
								  0, 0, F@_1,
								  F@_2, F@_3,
								  F@_4,
								  TrUserData);
      26 ->
	  'd_field_ProtobufClient.WebAuthenticationMessage_nonce'(Rest,
								  0, 0, F@_1,
								  F@_2, F@_3,
								  F@_4,
								  TrUserData);
      34 ->
	  'd_field_ProtobufClient.WebAuthenticationMessage_access_list'(Rest,
									0, 0,
									F@_1,
									F@_2,
									F@_3,
									F@_4,
									TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtobufClient.WebAuthenticationMessage'(Rest,
								      0, 0,
								      F@_1,
								      F@_2,
								      F@_3,
								      F@_4,
								      TrUserData);
	    1 ->
		'skip_64_ProtobufClient.WebAuthenticationMessage'(Rest,
								  0, 0, F@_1,
								  F@_2, F@_3,
								  F@_4,
								  TrUserData);
	    2 ->
		'skip_length_delimited_ProtobufClient.WebAuthenticationMessage'(Rest,
										0,
										0,
										F@_1,
										F@_2,
										F@_3,
										F@_4,
										TrUserData);
	    3 ->
		'skip_group_ProtobufClient.WebAuthenticationMessage'(Rest,
								     Key bsr 3,
								     0, F@_1,
								     F@_2, F@_3,
								     F@_4,
								     TrUserData);
	    5 ->
		'skip_32_ProtobufClient.WebAuthenticationMessage'(Rest,
								  0, 0, F@_1,
								  F@_2, F@_3,
								  F@_4,
								  TrUserData)
	  end
    end;
'dg_read_field_def_ProtobufClient.WebAuthenticationMessage'(<<>>,
							    0, 0, F@_1, F@_2,
							    F@_3, R1,
							    TrUserData) ->
    #'ProtobufClient.WebAuthenticationMessage'{identification
						   = F@_1,
					       token = F@_2, nonce = F@_3,
					       access_list =
						   lists_reverse(R1,
								 TrUserData)}.

'd_field_ProtobufClient.WebAuthenticationMessage_identification'(<<1:1,
								   X:7,
								   Rest/binary>>,
								 N, Acc, F@_1,
								 F@_2, F@_3,
								 F@_4,
								 TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.WebAuthenticationMessage_identification'(Rest,
								     N + 7,
								     X bsl N +
								       Acc,
								     F@_1, F@_2,
								     F@_3, F@_4,
								     TrUserData);
'd_field_ProtobufClient.WebAuthenticationMessage_identification'(<<0:1,
								   X:7,
								   Rest/binary>>,
								 N, Acc, Prev,
								 F@_2, F@_3,
								 F@_4,
								 TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Bs:Len/binary, Rest2/binary>> = Rest,
			   {id('decode_msg_ProtobufClient.ClientIdentificationMessage'(Bs,
										       TrUserData),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(RestF,
								 0, 0,
								 if Prev ==
								      undefined ->
									NewFValue;
								    true ->
									'merge_msg_ProtobufClient.ClientIdentificationMessage'(Prev,
															       NewFValue,
															       TrUserData)
								 end,
								 F@_2, F@_3,
								 F@_4,
								 TrUserData).

'd_field_ProtobufClient.WebAuthenticationMessage_token'(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F@_1, F@_2,
							F@_3, F@_4, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.WebAuthenticationMessage_token'(Rest,
							    N + 7,
							    X bsl N + Acc, F@_1,
							    F@_2, F@_3, F@_4,
							    TrUserData);
'd_field_ProtobufClient.WebAuthenticationMessage_token'(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F@_1, _, F@_3,
							F@_4, TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(RestF,
								 0, 0, F@_1,
								 NewFValue,
								 F@_3, F@_4,
								 TrUserData).

'd_field_ProtobufClient.WebAuthenticationMessage_nonce'(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F@_1, F@_2,
							F@_3, F@_4, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.WebAuthenticationMessage_nonce'(Rest,
							    N + 7,
							    X bsl N + Acc, F@_1,
							    F@_2, F@_3, F@_4,
							    TrUserData);
'd_field_ProtobufClient.WebAuthenticationMessage_nonce'(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F@_1, F@_2, _,
							F@_4, TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(RestF,
								 0, 0, F@_1,
								 F@_2,
								 NewFValue,
								 F@_4,
								 TrUserData).

'd_field_ProtobufClient.WebAuthenticationMessage_access_list'(<<1:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F@_1,
							      F@_2, F@_3, F@_4,
							      TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.WebAuthenticationMessage_access_list'(Rest,
								  N + 7,
								  X bsl N + Acc,
								  F@_1, F@_2,
								  F@_3, F@_4,
								  TrUserData);
'd_field_ProtobufClient.WebAuthenticationMessage_access_list'(<<0:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F@_1,
							      F@_2, F@_3, Prev,
							      TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(RestF,
								 0, 0, F@_1,
								 F@_2, F@_3,
								 cons(NewFValue,
								      Prev,
								      TrUserData),
								 TrUserData).

'skip_varint_ProtobufClient.WebAuthenticationMessage'(<<1:1,
							_:7, Rest/binary>>,
						      Z1, Z2, F@_1, F@_2, F@_3,
						      F@_4, TrUserData) ->
    'skip_varint_ProtobufClient.WebAuthenticationMessage'(Rest,
							  Z1, Z2, F@_1, F@_2,
							  F@_3, F@_4,
							  TrUserData);
'skip_varint_ProtobufClient.WebAuthenticationMessage'(<<0:1,
							_:7, Rest/binary>>,
						      Z1, Z2, F@_1, F@_2, F@_3,
						      F@_4, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(Rest,
								 Z1, Z2, F@_1,
								 F@_2, F@_3,
								 F@_4,
								 TrUserData).

'skip_length_delimited_ProtobufClient.WebAuthenticationMessage'(<<1:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F@_1,
								F@_2, F@_3,
								F@_4,
								TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtobufClient.WebAuthenticationMessage'(Rest,
								    N + 7,
								    X bsl N +
								      Acc,
								    F@_1, F@_2,
								    F@_3, F@_4,
								    TrUserData);
'skip_length_delimited_ProtobufClient.WebAuthenticationMessage'(<<0:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F@_1,
								F@_2, F@_3,
								F@_4,
								TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(Rest2,
								 0, 0, F@_1,
								 F@_2, F@_3,
								 F@_4,
								 TrUserData).

'skip_group_ProtobufClient.WebAuthenticationMessage'(Bin,
						     FNum, Z2, F@_1, F@_2, F@_3,
						     F@_4, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(Rest,
								 0, Z2, F@_1,
								 F@_2, F@_3,
								 F@_4,
								 TrUserData).

'skip_32_ProtobufClient.WebAuthenticationMessage'(<<_:32,
						    Rest/binary>>,
						  Z1, Z2, F@_1, F@_2, F@_3,
						  F@_4, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(Rest,
								 Z1, Z2, F@_1,
								 F@_2, F@_3,
								 F@_4,
								 TrUserData).

'skip_64_ProtobufClient.WebAuthenticationMessage'(<<_:64,
						    Rest/binary>>,
						  Z1, Z2, F@_1, F@_2, F@_3,
						  F@_4, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.WebAuthenticationMessage'(Rest,
								 Z1, Z2, F@_1,
								 F@_2, F@_3,
								 F@_4,
								 TrUserData).

'decode_msg_ProtobufClient.TradeSessionAuth'(Bin,
					     TrUserData) ->
    'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(Bin,
							 0, 0,
							 id([], TrUserData),
							 id([], TrUserData),
							 id([], TrUserData),
							 id([], TrUserData),
							 TrUserData).

'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(<<10,
						       Rest/binary>>,
						     Z1, Z2, F@_1, F@_2, F@_3,
						     F@_4, TrUserData) ->
    'd_field_ProtobufClient.TradeSessionAuth_api_key'(Rest,
						      Z1, Z2, F@_1, F@_2, F@_3,
						      F@_4, TrUserData);
'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(<<18,
						       Rest/binary>>,
						     Z1, Z2, F@_1, F@_2, F@_3,
						     F@_4, TrUserData) ->
    'd_field_ProtobufClient.TradeSessionAuth_api_secret'(Rest,
							 Z1, Z2, F@_1, F@_2,
							 F@_3, F@_4,
							 TrUserData);
'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(<<26,
						       Rest/binary>>,
						     Z1, Z2, F@_1, F@_2, F@_3,
						     F@_4, TrUserData) ->
    'd_field_ProtobufClient.TradeSessionAuth_customer_id'(Rest,
							  Z1, Z2, F@_1, F@_2,
							  F@_3, F@_4,
							  TrUserData);
'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(<<34,
						       Rest/binary>>,
						     Z1, Z2, F@_1, F@_2, F@_3,
						     F@_4, TrUserData) ->
    'd_field_ProtobufClient.TradeSessionAuth_key_passphrase'(Rest,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4,
							     TrUserData);
'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(<<>>,
						     0, 0, F@_1, F@_2, F@_3,
						     F@_4, _) ->
    #'ProtobufClient.TradeSessionAuth'{api_key = F@_1,
				       api_secret = F@_2, customer_id = F@_3,
				       key_passphrase = F@_4};
'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(Other,
						     Z1, Z2, F@_1, F@_2, F@_3,
						     F@_4, TrUserData) ->
    'dg_read_field_def_ProtobufClient.TradeSessionAuth'(Other,
							Z1, Z2, F@_1, F@_2,
							F@_3, F@_4, TrUserData).

'dg_read_field_def_ProtobufClient.TradeSessionAuth'(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F@_1, F@_2, F@_3,
						    F@_4, TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtobufClient.TradeSessionAuth'(Rest,
							N + 7, X bsl N + Acc,
							F@_1, F@_2, F@_3, F@_4,
							TrUserData);
'dg_read_field_def_ProtobufClient.TradeSessionAuth'(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, F@_1, F@_2, F@_3,
						    F@_4, TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  'd_field_ProtobufClient.TradeSessionAuth_api_key'(Rest,
							    0, 0, F@_1, F@_2,
							    F@_3, F@_4,
							    TrUserData);
      18 ->
	  'd_field_ProtobufClient.TradeSessionAuth_api_secret'(Rest,
							       0, 0, F@_1, F@_2,
							       F@_3, F@_4,
							       TrUserData);
      26 ->
	  'd_field_ProtobufClient.TradeSessionAuth_customer_id'(Rest,
								0, 0, F@_1,
								F@_2, F@_3,
								F@_4,
								TrUserData);
      34 ->
	  'd_field_ProtobufClient.TradeSessionAuth_key_passphrase'(Rest,
								   0, 0, F@_1,
								   F@_2, F@_3,
								   F@_4,
								   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtobufClient.TradeSessionAuth'(Rest, 0,
							      0, F@_1, F@_2,
							      F@_3, F@_4,
							      TrUserData);
	    1 ->
		'skip_64_ProtobufClient.TradeSessionAuth'(Rest, 0, 0,
							  F@_1, F@_2, F@_3,
							  F@_4, TrUserData);
	    2 ->
		'skip_length_delimited_ProtobufClient.TradeSessionAuth'(Rest,
									0, 0,
									F@_1,
									F@_2,
									F@_3,
									F@_4,
									TrUserData);
	    3 ->
		'skip_group_ProtobufClient.TradeSessionAuth'(Rest,
							     Key bsr 3, 0, F@_1,
							     F@_2, F@_3, F@_4,
							     TrUserData);
	    5 ->
		'skip_32_ProtobufClient.TradeSessionAuth'(Rest, 0, 0,
							  F@_1, F@_2, F@_3,
							  F@_4, TrUserData)
	  end
    end;
'dg_read_field_def_ProtobufClient.TradeSessionAuth'(<<>>,
						    0, 0, F@_1, F@_2, F@_3,
						    F@_4, _) ->
    #'ProtobufClient.TradeSessionAuth'{api_key = F@_1,
				       api_secret = F@_2, customer_id = F@_3,
				       key_passphrase = F@_4}.

'd_field_ProtobufClient.TradeSessionAuth_api_key'(<<1:1,
						    X:7, Rest/binary>>,
						  N, Acc, F@_1, F@_2, F@_3,
						  F@_4, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.TradeSessionAuth_api_key'(Rest,
						      N + 7, X bsl N + Acc,
						      F@_1, F@_2, F@_3, F@_4,
						      TrUserData);
'd_field_ProtobufClient.TradeSessionAuth_api_key'(<<0:1,
						    X:7, Rest/binary>>,
						  N, Acc, _, F@_2, F@_3, F@_4,
						  TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(RestF,
							 0, 0, NewFValue, F@_2,
							 F@_3, F@_4,
							 TrUserData).

'd_field_ProtobufClient.TradeSessionAuth_api_secret'(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F@_1, F@_2, F@_3,
						     F@_4, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.TradeSessionAuth_api_secret'(Rest,
							 N + 7, X bsl N + Acc,
							 F@_1, F@_2, F@_3, F@_4,
							 TrUserData);
'd_field_ProtobufClient.TradeSessionAuth_api_secret'(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F@_1, _, F@_3,
						     F@_4, TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(RestF,
							 0, 0, F@_1, NewFValue,
							 F@_3, F@_4,
							 TrUserData).

'd_field_ProtobufClient.TradeSessionAuth_customer_id'(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F@_1, F@_2, F@_3,
						      F@_4, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.TradeSessionAuth_customer_id'(Rest,
							  N + 7, X bsl N + Acc,
							  F@_1, F@_2, F@_3,
							  F@_4, TrUserData);
'd_field_ProtobufClient.TradeSessionAuth_customer_id'(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F@_1, F@_2, _,
						      F@_4, TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(RestF,
							 0, 0, F@_1, F@_2,
							 NewFValue, F@_4,
							 TrUserData).

'd_field_ProtobufClient.TradeSessionAuth_key_passphrase'(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F@_1, F@_2,
							 F@_3, F@_4, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.TradeSessionAuth_key_passphrase'(Rest,
							     N + 7,
							     X bsl N + Acc,
							     F@_1, F@_2, F@_3,
							     F@_4, TrUserData);
'd_field_ProtobufClient.TradeSessionAuth_key_passphrase'(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F@_1, F@_2,
							 F@_3, _, TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(RestF,
							 0, 0, F@_1, F@_2, F@_3,
							 NewFValue, TrUserData).

'skip_varint_ProtobufClient.TradeSessionAuth'(<<1:1,
						_:7, Rest/binary>>,
					      Z1, Z2, F@_1, F@_2, F@_3, F@_4,
					      TrUserData) ->
    'skip_varint_ProtobufClient.TradeSessionAuth'(Rest, Z1,
						  Z2, F@_1, F@_2, F@_3, F@_4,
						  TrUserData);
'skip_varint_ProtobufClient.TradeSessionAuth'(<<0:1,
						_:7, Rest/binary>>,
					      Z1, Z2, F@_1, F@_2, F@_3, F@_4,
					      TrUserData) ->
    'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(Rest,
							 Z1, Z2, F@_1, F@_2,
							 F@_3, F@_4,
							 TrUserData).

'skip_length_delimited_ProtobufClient.TradeSessionAuth'(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F@_1, F@_2,
							F@_3, F@_4, TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtobufClient.TradeSessionAuth'(Rest,
							    N + 7,
							    X bsl N + Acc, F@_1,
							    F@_2, F@_3, F@_4,
							    TrUserData);
'skip_length_delimited_ProtobufClient.TradeSessionAuth'(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F@_1, F@_2,
							F@_3, F@_4,
							TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(Rest2,
							 0, 0, F@_1, F@_2, F@_3,
							 F@_4, TrUserData).

'skip_group_ProtobufClient.TradeSessionAuth'(Bin, FNum,
					     Z2, F@_1, F@_2, F@_3, F@_4,
					     TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(Rest,
							 0, Z2, F@_1, F@_2,
							 F@_3, F@_4,
							 TrUserData).

'skip_32_ProtobufClient.TradeSessionAuth'(<<_:32,
					    Rest/binary>>,
					  Z1, Z2, F@_1, F@_2, F@_3, F@_4,
					  TrUserData) ->
    'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(Rest,
							 Z1, Z2, F@_1, F@_2,
							 F@_3, F@_4,
							 TrUserData).

'skip_64_ProtobufClient.TradeSessionAuth'(<<_:64,
					    Rest/binary>>,
					  Z1, Z2, F@_1, F@_2, F@_3, F@_4,
					  TrUserData) ->
    'dfp_read_field_def_ProtobufClient.TradeSessionAuth'(Rest,
							 Z1, Z2, F@_1, F@_2,
							 F@_3, F@_4,
							 TrUserData).

'decode_msg_ProtobufClient.TradeSubscription'(Bin,
					      TrUserData) ->
    'dfp_read_field_def_ProtobufClient.TradeSubscription'(Bin,
							  0, 0,
							  id([], TrUserData),
							  id(undefined,
							     TrUserData),
							  TrUserData).

'dfp_read_field_def_ProtobufClient.TradeSubscription'(<<10,
							Rest/binary>>,
						      Z1, Z2, F@_1, F@_2,
						      TrUserData) ->
    'd_field_ProtobufClient.TradeSubscription_marketId'(Rest,
							Z1, Z2, F@_1, F@_2,
							TrUserData);
'dfp_read_field_def_ProtobufClient.TradeSubscription'(<<18,
							Rest/binary>>,
						      Z1, Z2, F@_1, F@_2,
						      TrUserData) ->
    'd_field_ProtobufClient.TradeSubscription_auth'(Rest,
						    Z1, Z2, F@_1, F@_2,
						    TrUserData);
'dfp_read_field_def_ProtobufClient.TradeSubscription'(<<>>,
						      0, 0, F@_1, F@_2, _) ->
    #'ProtobufClient.TradeSubscription'{marketId = F@_1,
					auth = F@_2};
'dfp_read_field_def_ProtobufClient.TradeSubscription'(Other,
						      Z1, Z2, F@_1, F@_2,
						      TrUserData) ->
    'dg_read_field_def_ProtobufClient.TradeSubscription'(Other,
							 Z1, Z2, F@_1, F@_2,
							 TrUserData).

'dg_read_field_def_ProtobufClient.TradeSubscription'(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F@_1, F@_2,
						     TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtobufClient.TradeSubscription'(Rest,
							 N + 7, X bsl N + Acc,
							 F@_1, F@_2,
							 TrUserData);
'dg_read_field_def_ProtobufClient.TradeSubscription'(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, F@_1, F@_2,
						     TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  'd_field_ProtobufClient.TradeSubscription_marketId'(Rest,
							      0, 0, F@_1, F@_2,
							      TrUserData);
      18 ->
	  'd_field_ProtobufClient.TradeSubscription_auth'(Rest, 0,
							  0, F@_1, F@_2,
							  TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtobufClient.TradeSubscription'(Rest, 0,
							       0, F@_1, F@_2,
							       TrUserData);
	    1 ->
		'skip_64_ProtobufClient.TradeSubscription'(Rest, 0, 0,
							   F@_1, F@_2,
							   TrUserData);
	    2 ->
		'skip_length_delimited_ProtobufClient.TradeSubscription'(Rest,
									 0, 0,
									 F@_1,
									 F@_2,
									 TrUserData);
	    3 ->
		'skip_group_ProtobufClient.TradeSubscription'(Rest,
							      Key bsr 3, 0,
							      F@_1, F@_2,
							      TrUserData);
	    5 ->
		'skip_32_ProtobufClient.TradeSubscription'(Rest, 0, 0,
							   F@_1, F@_2,
							   TrUserData)
	  end
    end;
'dg_read_field_def_ProtobufClient.TradeSubscription'(<<>>,
						     0, 0, F@_1, F@_2, _) ->
    #'ProtobufClient.TradeSubscription'{marketId = F@_1,
					auth = F@_2}.

'd_field_ProtobufClient.TradeSubscription_marketId'(<<1:1,
						      X:7, Rest/binary>>,
						    N, Acc, F@_1, F@_2,
						    TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.TradeSubscription_marketId'(Rest,
							N + 7, X bsl N + Acc,
							F@_1, F@_2, TrUserData);
'd_field_ProtobufClient.TradeSubscription_marketId'(<<0:1,
						      X:7, Rest/binary>>,
						    N, Acc, _, F@_2,
						    TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.TradeSubscription'(RestF,
							  0, 0, NewFValue, F@_2,
							  TrUserData).

'd_field_ProtobufClient.TradeSubscription_auth'(<<1:1,
						  X:7, Rest/binary>>,
						N, Acc, F@_1, F@_2, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.TradeSubscription_auth'(Rest,
						    N + 7, X bsl N + Acc, F@_1,
						    F@_2, TrUserData);
'd_field_ProtobufClient.TradeSubscription_auth'(<<0:1,
						  X:7, Rest/binary>>,
						N, Acc, F@_1, Prev,
						TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Bs:Len/binary, Rest2/binary>> = Rest,
			   {id('decode_msg_ProtobufClient.TradeSessionAuth'(Bs,
									    TrUserData),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.TradeSubscription'(RestF,
							  0, 0, F@_1,
							  if Prev ==
							       undefined ->
								 NewFValue;
							     true ->
								 'merge_msg_ProtobufClient.TradeSessionAuth'(Prev,
													     NewFValue,
													     TrUserData)
							  end,
							  TrUserData).

'skip_varint_ProtobufClient.TradeSubscription'(<<1:1,
						 _:7, Rest/binary>>,
					       Z1, Z2, F@_1, F@_2,
					       TrUserData) ->
    'skip_varint_ProtobufClient.TradeSubscription'(Rest, Z1,
						   Z2, F@_1, F@_2, TrUserData);
'skip_varint_ProtobufClient.TradeSubscription'(<<0:1,
						 _:7, Rest/binary>>,
					       Z1, Z2, F@_1, F@_2,
					       TrUserData) ->
    'dfp_read_field_def_ProtobufClient.TradeSubscription'(Rest,
							  Z1, Z2, F@_1, F@_2,
							  TrUserData).

'skip_length_delimited_ProtobufClient.TradeSubscription'(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F@_1, F@_2,
							 TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtobufClient.TradeSubscription'(Rest,
							     N + 7,
							     X bsl N + Acc,
							     F@_1, F@_2,
							     TrUserData);
'skip_length_delimited_ProtobufClient.TradeSubscription'(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F@_1, F@_2,
							 TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtobufClient.TradeSubscription'(Rest2,
							  0, 0, F@_1, F@_2,
							  TrUserData).

'skip_group_ProtobufClient.TradeSubscription'(Bin, FNum,
					      Z2, F@_1, F@_2, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_ProtobufClient.TradeSubscription'(Rest,
							  0, Z2, F@_1, F@_2,
							  TrUserData).

'skip_32_ProtobufClient.TradeSubscription'(<<_:32,
					     Rest/binary>>,
					   Z1, Z2, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.TradeSubscription'(Rest,
							  Z1, Z2, F@_1, F@_2,
							  TrUserData).

'skip_64_ProtobufClient.TradeSubscription'(<<_:64,
					     Rest/binary>>,
					   Z1, Z2, F@_1, F@_2, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.TradeSubscription'(Rest,
							  Z1, Z2, F@_1, F@_2,
							  TrUserData).

'decode_msg_ProtobufClient.StreamSubscription'(Bin,
					       TrUserData) ->
    'dfp_read_field_def_ProtobufClient.StreamSubscription'(Bin,
							   0, 0,
							   id([], TrUserData),
							   TrUserData).

'dfp_read_field_def_ProtobufClient.StreamSubscription'(<<10,
							 Rest/binary>>,
						       Z1, Z2, F@_1,
						       TrUserData) ->
    'd_field_ProtobufClient.StreamSubscription_resource'(Rest,
							 Z1, Z2, F@_1,
							 TrUserData);
'dfp_read_field_def_ProtobufClient.StreamSubscription'(<<>>,
						       0, 0, F@_1, _) ->
    #'ProtobufClient.StreamSubscription'{resource = F@_1};
'dfp_read_field_def_ProtobufClient.StreamSubscription'(Other,
						       Z1, Z2, F@_1,
						       TrUserData) ->
    'dg_read_field_def_ProtobufClient.StreamSubscription'(Other,
							  Z1, Z2, F@_1,
							  TrUserData).

'dg_read_field_def_ProtobufClient.StreamSubscription'(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F@_1, TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtobufClient.StreamSubscription'(Rest,
							  N + 7, X bsl N + Acc,
							  F@_1, TrUserData);
'dg_read_field_def_ProtobufClient.StreamSubscription'(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F@_1,
						      TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  'd_field_ProtobufClient.StreamSubscription_resource'(Rest,
							       0, 0, F@_1,
							       TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtobufClient.StreamSubscription'(Rest, 0,
								0, F@_1,
								TrUserData);
	    1 ->
		'skip_64_ProtobufClient.StreamSubscription'(Rest, 0, 0,
							    F@_1, TrUserData);
	    2 ->
		'skip_length_delimited_ProtobufClient.StreamSubscription'(Rest,
									  0, 0,
									  F@_1,
									  TrUserData);
	    3 ->
		'skip_group_ProtobufClient.StreamSubscription'(Rest,
							       Key bsr 3, 0,
							       F@_1,
							       TrUserData);
	    5 ->
		'skip_32_ProtobufClient.StreamSubscription'(Rest, 0, 0,
							    F@_1, TrUserData)
	  end
    end;
'dg_read_field_def_ProtobufClient.StreamSubscription'(<<>>,
						      0, 0, F@_1, _) ->
    #'ProtobufClient.StreamSubscription'{resource = F@_1}.

'd_field_ProtobufClient.StreamSubscription_resource'(<<1:1,
						       X:7, Rest/binary>>,
						     N, Acc, F@_1, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.StreamSubscription_resource'(Rest,
							 N + 7, X bsl N + Acc,
							 F@_1, TrUserData);
'd_field_ProtobufClient.StreamSubscription_resource'(<<0:1,
						       X:7, Rest/binary>>,
						     N, Acc, _, TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.StreamSubscription'(RestF,
							   0, 0, NewFValue,
							   TrUserData).

'skip_varint_ProtobufClient.StreamSubscription'(<<1:1,
						  _:7, Rest/binary>>,
						Z1, Z2, F@_1, TrUserData) ->
    'skip_varint_ProtobufClient.StreamSubscription'(Rest,
						    Z1, Z2, F@_1, TrUserData);
'skip_varint_ProtobufClient.StreamSubscription'(<<0:1,
						  _:7, Rest/binary>>,
						Z1, Z2, F@_1, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.StreamSubscription'(Rest,
							   Z1, Z2, F@_1,
							   TrUserData).

'skip_length_delimited_ProtobufClient.StreamSubscription'(<<1:1,
							    X:7, Rest/binary>>,
							  N, Acc, F@_1,
							  TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtobufClient.StreamSubscription'(Rest,
							      N + 7,
							      X bsl N + Acc,
							      F@_1, TrUserData);
'skip_length_delimited_ProtobufClient.StreamSubscription'(<<0:1,
							    X:7, Rest/binary>>,
							  N, Acc, F@_1,
							  TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtobufClient.StreamSubscription'(Rest2,
							   0, 0, F@_1,
							   TrUserData).

'skip_group_ProtobufClient.StreamSubscription'(Bin,
					       FNum, Z2, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_ProtobufClient.StreamSubscription'(Rest,
							   0, Z2, F@_1,
							   TrUserData).

'skip_32_ProtobufClient.StreamSubscription'(<<_:32,
					      Rest/binary>>,
					    Z1, Z2, F@_1, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.StreamSubscription'(Rest,
							   Z1, Z2, F@_1,
							   TrUserData).

'skip_64_ProtobufClient.StreamSubscription'(<<_:64,
					      Rest/binary>>,
					    Z1, Z2, F@_1, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.StreamSubscription'(Rest,
							   Z1, Z2, F@_1,
							   TrUserData).

'decode_msg_ProtobufClient.ClientSubscription'(Bin,
					       TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSubscription'(Bin,
							   0, 0,
							   id(undefined,
							      TrUserData),
							   TrUserData).

'dfp_read_field_def_ProtobufClient.ClientSubscription'(<<10,
							 Rest/binary>>,
						       Z1, Z2, F@_1,
						       TrUserData) ->
    'd_field_ProtobufClient.ClientSubscription_stream_subscription'(Rest,
								    Z1, Z2,
								    F@_1,
								    TrUserData);
'dfp_read_field_def_ProtobufClient.ClientSubscription'(<<18,
							 Rest/binary>>,
						       Z1, Z2, F@_1,
						       TrUserData) ->
    'd_field_ProtobufClient.ClientSubscription_trade_subscription'(Rest,
								   Z1, Z2, F@_1,
								   TrUserData);
'dfp_read_field_def_ProtobufClient.ClientSubscription'(<<>>,
						       0, 0, F@_1, _) ->
    #'ProtobufClient.ClientSubscription'{body = F@_1};
'dfp_read_field_def_ProtobufClient.ClientSubscription'(Other,
						       Z1, Z2, F@_1,
						       TrUserData) ->
    'dg_read_field_def_ProtobufClient.ClientSubscription'(Other,
							  Z1, Z2, F@_1,
							  TrUserData).

'dg_read_field_def_ProtobufClient.ClientSubscription'(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F@_1, TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtobufClient.ClientSubscription'(Rest,
							  N + 7, X bsl N + Acc,
							  F@_1, TrUserData);
'dg_read_field_def_ProtobufClient.ClientSubscription'(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, F@_1,
						      TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  'd_field_ProtobufClient.ClientSubscription_stream_subscription'(Rest,
									  0, 0,
									  F@_1,
									  TrUserData);
      18 ->
	  'd_field_ProtobufClient.ClientSubscription_trade_subscription'(Rest,
									 0, 0,
									 F@_1,
									 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtobufClient.ClientSubscription'(Rest, 0,
								0, F@_1,
								TrUserData);
	    1 ->
		'skip_64_ProtobufClient.ClientSubscription'(Rest, 0, 0,
							    F@_1, TrUserData);
	    2 ->
		'skip_length_delimited_ProtobufClient.ClientSubscription'(Rest,
									  0, 0,
									  F@_1,
									  TrUserData);
	    3 ->
		'skip_group_ProtobufClient.ClientSubscription'(Rest,
							       Key bsr 3, 0,
							       F@_1,
							       TrUserData);
	    5 ->
		'skip_32_ProtobufClient.ClientSubscription'(Rest, 0, 0,
							    F@_1, TrUserData)
	  end
    end;
'dg_read_field_def_ProtobufClient.ClientSubscription'(<<>>,
						      0, 0, F@_1, _) ->
    #'ProtobufClient.ClientSubscription'{body = F@_1}.

'd_field_ProtobufClient.ClientSubscription_stream_subscription'(<<1:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F@_1,
								TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientSubscription_stream_subscription'(Rest,
								    N + 7,
								    X bsl N +
								      Acc,
								    F@_1,
								    TrUserData);
'd_field_ProtobufClient.ClientSubscription_stream_subscription'(<<0:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, Prev,
								TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Bs:Len/binary, Rest2/binary>> = Rest,
			   {id('decode_msg_ProtobufClient.StreamSubscription'(Bs,
									      TrUserData),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientSubscription'(RestF,
							   0, 0,
							   case Prev of
							     undefined ->
								 id({stream_subscription,
								     NewFValue},
								    TrUserData);
							     {stream_subscription,
							      MVPrev} ->
								 id({stream_subscription,
								     'merge_msg_ProtobufClient.StreamSubscription'(MVPrev,
														   NewFValue,
														   TrUserData)},
								    TrUserData);
							     _ ->
								 id({stream_subscription,
								     NewFValue},
								    TrUserData)
							   end,
							   TrUserData).

'd_field_ProtobufClient.ClientSubscription_trade_subscription'(<<1:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F@_1,
							       TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientSubscription_trade_subscription'(Rest,
								   N + 7,
								   X bsl N +
								     Acc,
								   F@_1,
								   TrUserData);
'd_field_ProtobufClient.ClientSubscription_trade_subscription'(<<0:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, Prev,
							       TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Bs:Len/binary, Rest2/binary>> = Rest,
			   {id('decode_msg_ProtobufClient.TradeSubscription'(Bs,
									     TrUserData),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientSubscription'(RestF,
							   0, 0,
							   case Prev of
							     undefined ->
								 id({trade_subscription,
								     NewFValue},
								    TrUserData);
							     {trade_subscription,
							      MVPrev} ->
								 id({trade_subscription,
								     'merge_msg_ProtobufClient.TradeSubscription'(MVPrev,
														  NewFValue,
														  TrUserData)},
								    TrUserData);
							     _ ->
								 id({trade_subscription,
								     NewFValue},
								    TrUserData)
							   end,
							   TrUserData).

'skip_varint_ProtobufClient.ClientSubscription'(<<1:1,
						  _:7, Rest/binary>>,
						Z1, Z2, F@_1, TrUserData) ->
    'skip_varint_ProtobufClient.ClientSubscription'(Rest,
						    Z1, Z2, F@_1, TrUserData);
'skip_varint_ProtobufClient.ClientSubscription'(<<0:1,
						  _:7, Rest/binary>>,
						Z1, Z2, F@_1, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSubscription'(Rest,
							   Z1, Z2, F@_1,
							   TrUserData).

'skip_length_delimited_ProtobufClient.ClientSubscription'(<<1:1,
							    X:7, Rest/binary>>,
							  N, Acc, F@_1,
							  TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtobufClient.ClientSubscription'(Rest,
							      N + 7,
							      X bsl N + Acc,
							      F@_1, TrUserData);
'skip_length_delimited_ProtobufClient.ClientSubscription'(<<0:1,
							    X:7, Rest/binary>>,
							  N, Acc, F@_1,
							  TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtobufClient.ClientSubscription'(Rest2,
							   0, 0, F@_1,
							   TrUserData).

'skip_group_ProtobufClient.ClientSubscription'(Bin,
					       FNum, Z2, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_ProtobufClient.ClientSubscription'(Rest,
							   0, Z2, F@_1,
							   TrUserData).

'skip_32_ProtobufClient.ClientSubscription'(<<_:32,
					      Rest/binary>>,
					    Z1, Z2, F@_1, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSubscription'(Rest,
							   Z1, Z2, F@_1,
							   TrUserData).

'skip_64_ProtobufClient.ClientSubscription'(<<_:64,
					      Rest/binary>>,
					    Z1, Z2, F@_1, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSubscription'(Rest,
							   Z1, Z2, F@_1,
							   TrUserData).

'decode_msg_ProtobufClient.APIAuthenticationMessage'(Bin,
						     TrUserData) ->
    'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(Bin,
								 0, 0,
								 id([],
								    TrUserData),
								 id([],
								    TrUserData),
								 id([],
								    TrUserData),
								 id('UNKNOWN',
								    TrUserData),
								 id([],
								    TrUserData),
								 id([],
								    TrUserData),
								 id([],
								    TrUserData),
								 TrUserData).

'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(<<10,
							       Rest/binary>>,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4, F@_5,
							     F@_6, F@_7,
							     TrUserData) ->
    'd_field_ProtobufClient.APIAuthenticationMessage_token'(Rest,
							    Z1, Z2, F@_1, F@_2,
							    F@_3, F@_4, F@_5,
							    F@_6, F@_7,
							    TrUserData);
'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(<<18,
							       Rest/binary>>,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4, F@_5,
							     F@_6, F@_7,
							     TrUserData) ->
    'd_field_ProtobufClient.APIAuthenticationMessage_nonce'(Rest,
							    Z1, Z2, F@_1, F@_2,
							    F@_3, F@_4, F@_5,
							    F@_6, F@_7,
							    TrUserData);
'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(<<26,
							       Rest/binary>>,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4, F@_5,
							     F@_6, F@_7,
							     TrUserData) ->
    'd_field_ProtobufClient.APIAuthenticationMessage_api_key'(Rest,
							      Z1, Z2, F@_1,
							      F@_2, F@_3, F@_4,
							      F@_5, F@_6, F@_7,
							      TrUserData);
'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(<<32,
							       Rest/binary>>,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4, F@_5,
							     F@_6, F@_7,
							     TrUserData) ->
    'd_field_ProtobufClient.APIAuthenticationMessage_source'(Rest,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4, F@_5,
							     F@_6, F@_7,
							     TrUserData);
'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(<<42,
							       Rest/binary>>,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4, F@_5,
							     F@_6, F@_7,
							     TrUserData) ->
    'd_field_ProtobufClient.APIAuthenticationMessage_version'(Rest,
							      Z1, Z2, F@_1,
							      F@_2, F@_3, F@_4,
							      F@_5, F@_6, F@_7,
							      TrUserData);
'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(<<50,
							       Rest/binary>>,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4, F@_5,
							     F@_6, F@_7,
							     TrUserData) ->
    'd_field_ProtobufClient.APIAuthenticationMessage_subscriptions'(Rest,
								    Z1, Z2,
								    F@_1, F@_2,
								    F@_3, F@_4,
								    F@_5, F@_6,
								    F@_7,
								    TrUserData);
'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(<<58,
							       Rest/binary>>,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4, F@_5,
							     F@_6, F@_7,
							     TrUserData) ->
    'd_field_ProtobufClient.APIAuthenticationMessage_client_subscriptions'(Rest,
									   Z1,
									   Z2,
									   F@_1,
									   F@_2,
									   F@_3,
									   F@_4,
									   F@_5,
									   F@_6,
									   F@_7,
									   TrUserData);
'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(<<>>,
							     0, 0, F@_1, F@_2,
							     F@_3, F@_4, F@_5,
							     R1, R2,
							     TrUserData) ->
    #'ProtobufClient.APIAuthenticationMessage'{token = F@_1,
					       nonce = F@_2, api_key = F@_3,
					       source = F@_4, version = F@_5,
					       subscriptions =
						   lists_reverse(R1,
								 TrUserData),
					       client_subscriptions =
						   lists_reverse(R2,
								 TrUserData)};
'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(Other,
							     Z1, Z2, F@_1, F@_2,
							     F@_3, F@_4, F@_5,
							     F@_6, F@_7,
							     TrUserData) ->
    'dg_read_field_def_ProtobufClient.APIAuthenticationMessage'(Other,
								Z1, Z2, F@_1,
								F@_2, F@_3,
								F@_4, F@_5,
								F@_6, F@_7,
								TrUserData).

'dg_read_field_def_ProtobufClient.APIAuthenticationMessage'(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F@_1, F@_2,
							    F@_3, F@_4, F@_5,
							    F@_6, F@_7,
							    TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtobufClient.APIAuthenticationMessage'(Rest,
								N + 7,
								X bsl N + Acc,
								F@_1, F@_2,
								F@_3, F@_4,
								F@_5, F@_6,
								F@_7,
								TrUserData);
'dg_read_field_def_ProtobufClient.APIAuthenticationMessage'(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F@_1, F@_2,
							    F@_3, F@_4, F@_5,
							    F@_6, F@_7,
							    TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  'd_field_ProtobufClient.APIAuthenticationMessage_token'(Rest,
								  0, 0, F@_1,
								  F@_2, F@_3,
								  F@_4, F@_5,
								  F@_6, F@_7,
								  TrUserData);
      18 ->
	  'd_field_ProtobufClient.APIAuthenticationMessage_nonce'(Rest,
								  0, 0, F@_1,
								  F@_2, F@_3,
								  F@_4, F@_5,
								  F@_6, F@_7,
								  TrUserData);
      26 ->
	  'd_field_ProtobufClient.APIAuthenticationMessage_api_key'(Rest,
								    0, 0, F@_1,
								    F@_2, F@_3,
								    F@_4, F@_5,
								    F@_6, F@_7,
								    TrUserData);
      32 ->
	  'd_field_ProtobufClient.APIAuthenticationMessage_source'(Rest,
								   0, 0, F@_1,
								   F@_2, F@_3,
								   F@_4, F@_5,
								   F@_6, F@_7,
								   TrUserData);
      42 ->
	  'd_field_ProtobufClient.APIAuthenticationMessage_version'(Rest,
								    0, 0, F@_1,
								    F@_2, F@_3,
								    F@_4, F@_5,
								    F@_6, F@_7,
								    TrUserData);
      50 ->
	  'd_field_ProtobufClient.APIAuthenticationMessage_subscriptions'(Rest,
									  0, 0,
									  F@_1,
									  F@_2,
									  F@_3,
									  F@_4,
									  F@_5,
									  F@_6,
									  F@_7,
									  TrUserData);
      58 ->
	  'd_field_ProtobufClient.APIAuthenticationMessage_client_subscriptions'(Rest,
										 0,
										 0,
										 F@_1,
										 F@_2,
										 F@_3,
										 F@_4,
										 F@_5,
										 F@_6,
										 F@_7,
										 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtobufClient.APIAuthenticationMessage'(Rest,
								      0, 0,
								      F@_1,
								      F@_2,
								      F@_3,
								      F@_4,
								      F@_5,
								      F@_6,
								      F@_7,
								      TrUserData);
	    1 ->
		'skip_64_ProtobufClient.APIAuthenticationMessage'(Rest,
								  0, 0, F@_1,
								  F@_2, F@_3,
								  F@_4, F@_5,
								  F@_6, F@_7,
								  TrUserData);
	    2 ->
		'skip_length_delimited_ProtobufClient.APIAuthenticationMessage'(Rest,
										0,
										0,
										F@_1,
										F@_2,
										F@_3,
										F@_4,
										F@_5,
										F@_6,
										F@_7,
										TrUserData);
	    3 ->
		'skip_group_ProtobufClient.APIAuthenticationMessage'(Rest,
								     Key bsr 3,
								     0, F@_1,
								     F@_2, F@_3,
								     F@_4, F@_5,
								     F@_6, F@_7,
								     TrUserData);
	    5 ->
		'skip_32_ProtobufClient.APIAuthenticationMessage'(Rest,
								  0, 0, F@_1,
								  F@_2, F@_3,
								  F@_4, F@_5,
								  F@_6, F@_7,
								  TrUserData)
	  end
    end;
'dg_read_field_def_ProtobufClient.APIAuthenticationMessage'(<<>>,
							    0, 0, F@_1, F@_2,
							    F@_3, F@_4, F@_5,
							    R1, R2,
							    TrUserData) ->
    #'ProtobufClient.APIAuthenticationMessage'{token = F@_1,
					       nonce = F@_2, api_key = F@_3,
					       source = F@_4, version = F@_5,
					       subscriptions =
						   lists_reverse(R1,
								 TrUserData),
					       client_subscriptions =
						   lists_reverse(R2,
								 TrUserData)}.

'd_field_ProtobufClient.APIAuthenticationMessage_token'(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F@_1, F@_2,
							F@_3, F@_4, F@_5, F@_6,
							F@_7, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.APIAuthenticationMessage_token'(Rest,
							    N + 7,
							    X bsl N + Acc, F@_1,
							    F@_2, F@_3, F@_4,
							    F@_5, F@_6, F@_7,
							    TrUserData);
'd_field_ProtobufClient.APIAuthenticationMessage_token'(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, _, F@_2, F@_3,
							F@_4, F@_5, F@_6, F@_7,
							TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(RestF,
								 0, 0,
								 NewFValue,
								 F@_2, F@_3,
								 F@_4, F@_5,
								 F@_6, F@_7,
								 TrUserData).

'd_field_ProtobufClient.APIAuthenticationMessage_nonce'(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F@_1, F@_2,
							F@_3, F@_4, F@_5, F@_6,
							F@_7, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.APIAuthenticationMessage_nonce'(Rest,
							    N + 7,
							    X bsl N + Acc, F@_1,
							    F@_2, F@_3, F@_4,
							    F@_5, F@_6, F@_7,
							    TrUserData);
'd_field_ProtobufClient.APIAuthenticationMessage_nonce'(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F@_1, _, F@_3,
							F@_4, F@_5, F@_6, F@_7,
							TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(RestF,
								 0, 0, F@_1,
								 NewFValue,
								 F@_3, F@_4,
								 F@_5, F@_6,
								 F@_7,
								 TrUserData).

'd_field_ProtobufClient.APIAuthenticationMessage_api_key'(<<1:1,
							    X:7, Rest/binary>>,
							  N, Acc, F@_1, F@_2,
							  F@_3, F@_4, F@_5,
							  F@_6, F@_7,
							  TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.APIAuthenticationMessage_api_key'(Rest,
							      N + 7,
							      X bsl N + Acc,
							      F@_1, F@_2, F@_3,
							      F@_4, F@_5, F@_6,
							      F@_7, TrUserData);
'd_field_ProtobufClient.APIAuthenticationMessage_api_key'(<<0:1,
							    X:7, Rest/binary>>,
							  N, Acc, F@_1, F@_2, _,
							  F@_4, F@_5, F@_6,
							  F@_7, TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(RestF,
								 0, 0, F@_1,
								 F@_2,
								 NewFValue,
								 F@_4, F@_5,
								 F@_6, F@_7,
								 TrUserData).

'd_field_ProtobufClient.APIAuthenticationMessage_source'(<<1:1,
							   X:7, Rest/binary>>,
							 N, Acc, F@_1, F@_2,
							 F@_3, F@_4, F@_5, F@_6,
							 F@_7, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.APIAuthenticationMessage_source'(Rest,
							     N + 7,
							     X bsl N + Acc,
							     F@_1, F@_2, F@_3,
							     F@_4, F@_5, F@_6,
							     F@_7, TrUserData);
'd_field_ProtobufClient.APIAuthenticationMessage_source'(<<0:1,
							   X:7, Rest/binary>>,
							 N, Acc, F@_1, F@_2,
							 F@_3, _, F@_5, F@_6,
							 F@_7, TrUserData) ->
    {NewFValue, RestF} =
	{id('d_enum_ProtobufClient.APIAuthenticationMessage.Source'(begin
								      <<Res:32/signed-native>> =
									  <<(X
									       bsl
									       N
									       +
									       Acc):32/unsigned-native>>,
								      id(Res,
									 TrUserData)
								    end),
	    TrUserData),
	 Rest},
    'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(RestF,
								 0, 0, F@_1,
								 F@_2, F@_3,
								 NewFValue,
								 F@_5, F@_6,
								 F@_7,
								 TrUserData).

'd_field_ProtobufClient.APIAuthenticationMessage_version'(<<1:1,
							    X:7, Rest/binary>>,
							  N, Acc, F@_1, F@_2,
							  F@_3, F@_4, F@_5,
							  F@_6, F@_7,
							  TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.APIAuthenticationMessage_version'(Rest,
							      N + 7,
							      X bsl N + Acc,
							      F@_1, F@_2, F@_3,
							      F@_4, F@_5, F@_6,
							      F@_7, TrUserData);
'd_field_ProtobufClient.APIAuthenticationMessage_version'(<<0:1,
							    X:7, Rest/binary>>,
							  N, Acc, F@_1, F@_2,
							  F@_3, F@_4, _, F@_6,
							  F@_7, TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(RestF,
								 0, 0, F@_1,
								 F@_2, F@_3,
								 F@_4,
								 NewFValue,
								 F@_6, F@_7,
								 TrUserData).

'd_field_ProtobufClient.APIAuthenticationMessage_subscriptions'(<<1:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F@_1,
								F@_2, F@_3,
								F@_4, F@_5,
								F@_6, F@_7,
								TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.APIAuthenticationMessage_subscriptions'(Rest,
								    N + 7,
								    X bsl N +
								      Acc,
								    F@_1, F@_2,
								    F@_3, F@_4,
								    F@_5, F@_6,
								    F@_7,
								    TrUserData);
'd_field_ProtobufClient.APIAuthenticationMessage_subscriptions'(<<0:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F@_1,
								F@_2, F@_3,
								F@_4, F@_5,
								Prev, F@_7,
								TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(RestF,
								 0, 0, F@_1,
								 F@_2, F@_3,
								 F@_4, F@_5,
								 cons(NewFValue,
								      Prev,
								      TrUserData),
								 F@_7,
								 TrUserData).

'd_field_ProtobufClient.APIAuthenticationMessage_client_subscriptions'(<<1:1,
									 X:7,
									 Rest/binary>>,
								       N, Acc,
								       F@_1,
								       F@_2,
								       F@_3,
								       F@_4,
								       F@_5,
								       F@_6,
								       F@_7,
								       TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.APIAuthenticationMessage_client_subscriptions'(Rest,
									   N +
									     7,
									   X bsl
									     N
									     +
									     Acc,
									   F@_1,
									   F@_2,
									   F@_3,
									   F@_4,
									   F@_5,
									   F@_6,
									   F@_7,
									   TrUserData);
'd_field_ProtobufClient.APIAuthenticationMessage_client_subscriptions'(<<0:1,
									 X:7,
									 Rest/binary>>,
								       N, Acc,
								       F@_1,
								       F@_2,
								       F@_3,
								       F@_4,
								       F@_5,
								       F@_6,
								       Prev,
								       TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Bs:Len/binary, Rest2/binary>> = Rest,
			   {id('decode_msg_ProtobufClient.ClientSubscription'(Bs,
									      TrUserData),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(RestF,
								 0, 0, F@_1,
								 F@_2, F@_3,
								 F@_4, F@_5,
								 F@_6,
								 cons(NewFValue,
								      Prev,
								      TrUserData),
								 TrUserData).

'skip_varint_ProtobufClient.APIAuthenticationMessage'(<<1:1,
							_:7, Rest/binary>>,
						      Z1, Z2, F@_1, F@_2, F@_3,
						      F@_4, F@_5, F@_6, F@_7,
						      TrUserData) ->
    'skip_varint_ProtobufClient.APIAuthenticationMessage'(Rest,
							  Z1, Z2, F@_1, F@_2,
							  F@_3, F@_4, F@_5,
							  F@_6, F@_7,
							  TrUserData);
'skip_varint_ProtobufClient.APIAuthenticationMessage'(<<0:1,
							_:7, Rest/binary>>,
						      Z1, Z2, F@_1, F@_2, F@_3,
						      F@_4, F@_5, F@_6, F@_7,
						      TrUserData) ->
    'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(Rest,
								 Z1, Z2, F@_1,
								 F@_2, F@_3,
								 F@_4, F@_5,
								 F@_6, F@_7,
								 TrUserData).

'skip_length_delimited_ProtobufClient.APIAuthenticationMessage'(<<1:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F@_1,
								F@_2, F@_3,
								F@_4, F@_5,
								F@_6, F@_7,
								TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtobufClient.APIAuthenticationMessage'(Rest,
								    N + 7,
								    X bsl N +
								      Acc,
								    F@_1, F@_2,
								    F@_3, F@_4,
								    F@_5, F@_6,
								    F@_7,
								    TrUserData);
'skip_length_delimited_ProtobufClient.APIAuthenticationMessage'(<<0:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F@_1,
								F@_2, F@_3,
								F@_4, F@_5,
								F@_6, F@_7,
								TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(Rest2,
								 0, 0, F@_1,
								 F@_2, F@_3,
								 F@_4, F@_5,
								 F@_6, F@_7,
								 TrUserData).

'skip_group_ProtobufClient.APIAuthenticationMessage'(Bin,
						     FNum, Z2, F@_1, F@_2, F@_3,
						     F@_4, F@_5, F@_6, F@_7,
						     TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(Rest,
								 0, Z2, F@_1,
								 F@_2, F@_3,
								 F@_4, F@_5,
								 F@_6, F@_7,
								 TrUserData).

'skip_32_ProtobufClient.APIAuthenticationMessage'(<<_:32,
						    Rest/binary>>,
						  Z1, Z2, F@_1, F@_2, F@_3,
						  F@_4, F@_5, F@_6, F@_7,
						  TrUserData) ->
    'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(Rest,
								 Z1, Z2, F@_1,
								 F@_2, F@_3,
								 F@_4, F@_5,
								 F@_6, F@_7,
								 TrUserData).

'skip_64_ProtobufClient.APIAuthenticationMessage'(<<_:64,
						    Rest/binary>>,
						  Z1, Z2, F@_1, F@_2, F@_3,
						  F@_4, F@_5, F@_6, F@_7,
						  TrUserData) ->
    'dfp_read_field_def_ProtobufClient.APIAuthenticationMessage'(Rest,
								 Z1, Z2, F@_1,
								 F@_2, F@_3,
								 F@_4, F@_5,
								 F@_6, F@_7,
								 TrUserData).

'decode_msg_ProtobufClient.ClientSessionMessage.Session'(Bin,
							 TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(Bin,
								     0, 0,
								     id([],
									TrUserData),
								     id(0,
									TrUserData),
								     id([],
									TrUserData),
								     id([],
									TrUserData),
								     TrUserData).

'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(<<10,
								   Rest/binary>>,
								 Z1, Z2, F@_1,
								 F@_2, F@_3,
								 F@_4,
								 TrUserData) ->
    'd_field_ProtobufClient.ClientSessionMessage.Session_userId'(Rest,
								 Z1, Z2, F@_1,
								 F@_2, F@_3,
								 F@_4,
								 TrUserData);
'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(<<16,
								   Rest/binary>>,
								 Z1, Z2, F@_1,
								 F@_2, F@_3,
								 F@_4,
								 TrUserData) ->
    'd_field_ProtobufClient.ClientSessionMessage.Session_expires'(Rest,
								  Z1, Z2, F@_1,
								  F@_2, F@_3,
								  F@_4,
								  TrUserData);
'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(<<26,
								   Rest/binary>>,
								 Z1, Z2, F@_1,
								 F@_2, F@_3,
								 F@_4,
								 TrUserData) ->
    'd_field_ProtobufClient.ClientSessionMessage.Session_token'(Rest,
								Z1, Z2, F@_1,
								F@_2, F@_3,
								F@_4,
								TrUserData);
'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(<<34,
								   Rest/binary>>,
								 Z1, Z2, F@_1,
								 F@_2, F@_3,
								 F@_4,
								 TrUserData) ->
    'd_field_ProtobufClient.ClientSessionMessage.Session_mfaToken'(Rest,
								   Z1, Z2, F@_1,
								   F@_2, F@_3,
								   F@_4,
								   TrUserData);
'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(<<>>,
								 0, 0, F@_1,
								 F@_2, F@_3,
								 F@_4, _) ->
    #'ProtobufClient.ClientSessionMessage.Session'{userId =
						       F@_1,
						   expires = F@_2, token = F@_3,
						   mfaToken = F@_4};
'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(Other,
								 Z1, Z2, F@_1,
								 F@_2, F@_3,
								 F@_4,
								 TrUserData) ->
    'dg_read_field_def_ProtobufClient.ClientSessionMessage.Session'(Other,
								    Z1, Z2,
								    F@_1, F@_2,
								    F@_3, F@_4,
								    TrUserData).

'dg_read_field_def_ProtobufClient.ClientSessionMessage.Session'(<<1:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F@_1,
								F@_2, F@_3,
								F@_4,
								TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtobufClient.ClientSessionMessage.Session'(Rest,
								    N + 7,
								    X bsl N +
								      Acc,
								    F@_1, F@_2,
								    F@_3, F@_4,
								    TrUserData);
'dg_read_field_def_ProtobufClient.ClientSessionMessage.Session'(<<0:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F@_1,
								F@_2, F@_3,
								F@_4,
								TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  'd_field_ProtobufClient.ClientSessionMessage.Session_userId'(Rest,
								       0, 0,
								       F@_1,
								       F@_2,
								       F@_3,
								       F@_4,
								       TrUserData);
      16 ->
	  'd_field_ProtobufClient.ClientSessionMessage.Session_expires'(Rest,
									0, 0,
									F@_1,
									F@_2,
									F@_3,
									F@_4,
									TrUserData);
      26 ->
	  'd_field_ProtobufClient.ClientSessionMessage.Session_token'(Rest,
								      0, 0,
								      F@_1,
								      F@_2,
								      F@_3,
								      F@_4,
								      TrUserData);
      34 ->
	  'd_field_ProtobufClient.ClientSessionMessage.Session_mfaToken'(Rest,
									 0, 0,
									 F@_1,
									 F@_2,
									 F@_3,
									 F@_4,
									 TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtobufClient.ClientSessionMessage.Session'(Rest,
									  0, 0,
									  F@_1,
									  F@_2,
									  F@_3,
									  F@_4,
									  TrUserData);
	    1 ->
		'skip_64_ProtobufClient.ClientSessionMessage.Session'(Rest,
								      0, 0,
								      F@_1,
								      F@_2,
								      F@_3,
								      F@_4,
								      TrUserData);
	    2 ->
		'skip_length_delimited_ProtobufClient.ClientSessionMessage.Session'(Rest,
										    0,
										    0,
										    F@_1,
										    F@_2,
										    F@_3,
										    F@_4,
										    TrUserData);
	    3 ->
		'skip_group_ProtobufClient.ClientSessionMessage.Session'(Rest,
									 Key bsr
									   3,
									 0,
									 F@_1,
									 F@_2,
									 F@_3,
									 F@_4,
									 TrUserData);
	    5 ->
		'skip_32_ProtobufClient.ClientSessionMessage.Session'(Rest,
								      0, 0,
								      F@_1,
								      F@_2,
								      F@_3,
								      F@_4,
								      TrUserData)
	  end
    end;
'dg_read_field_def_ProtobufClient.ClientSessionMessage.Session'(<<>>,
								0, 0, F@_1,
								F@_2, F@_3,
								F@_4, _) ->
    #'ProtobufClient.ClientSessionMessage.Session'{userId =
						       F@_1,
						   expires = F@_2, token = F@_3,
						   mfaToken = F@_4}.

'd_field_ProtobufClient.ClientSessionMessage.Session_userId'(<<1:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, F@_1, F@_2,
							     F@_3, F@_4,
							     TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientSessionMessage.Session_userId'(Rest,
								 N + 7,
								 X bsl N + Acc,
								 F@_1, F@_2,
								 F@_3, F@_4,
								 TrUserData);
'd_field_ProtobufClient.ClientSessionMessage.Session_userId'(<<0:1,
							       X:7,
							       Rest/binary>>,
							     N, Acc, _, F@_2,
							     F@_3, F@_4,
							     TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(RestF,
								     0, 0,
								     NewFValue,
								     F@_2, F@_3,
								     F@_4,
								     TrUserData).

'd_field_ProtobufClient.ClientSessionMessage.Session_expires'(<<1:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F@_1,
							      F@_2, F@_3, F@_4,
							      TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientSessionMessage.Session_expires'(Rest,
								  N + 7,
								  X bsl N + Acc,
								  F@_1, F@_2,
								  F@_3, F@_4,
								  TrUserData);
'd_field_ProtobufClient.ClientSessionMessage.Session_expires'(<<0:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F@_1, _,
							      F@_3, F@_4,
							      TrUserData) ->
    {NewFValue, RestF} = {begin
			    <<Res:64/signed-native>> = <<(X bsl N +
							    Acc):64/unsigned-native>>,
			    id(Res, TrUserData)
			  end,
			  Rest},
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(RestF,
								     0, 0, F@_1,
								     NewFValue,
								     F@_3, F@_4,
								     TrUserData).

'd_field_ProtobufClient.ClientSessionMessage.Session_token'(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F@_1, F@_2,
							    F@_3, F@_4,
							    TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientSessionMessage.Session_token'(Rest,
								N + 7,
								X bsl N + Acc,
								F@_1, F@_2,
								F@_3, F@_4,
								TrUserData);
'd_field_ProtobufClient.ClientSessionMessage.Session_token'(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F@_1, F@_2,
							    _, F@_4,
							    TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(RestF,
								     0, 0, F@_1,
								     F@_2,
								     NewFValue,
								     F@_4,
								     TrUserData).

'd_field_ProtobufClient.ClientSessionMessage.Session_mfaToken'(<<1:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F@_1,
							       F@_2, F@_3, F@_4,
							       TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientSessionMessage.Session_mfaToken'(Rest,
								   N + 7,
								   X bsl N +
								     Acc,
								   F@_1, F@_2,
								   F@_3, F@_4,
								   TrUserData);
'd_field_ProtobufClient.ClientSessionMessage.Session_mfaToken'(<<0:1,
								 X:7,
								 Rest/binary>>,
							       N, Acc, F@_1,
							       F@_2, F@_3, _,
							       TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(RestF,
								     0, 0, F@_1,
								     F@_2, F@_3,
								     NewFValue,
								     TrUserData).

'skip_varint_ProtobufClient.ClientSessionMessage.Session'(<<1:1,
							    _:7, Rest/binary>>,
							  Z1, Z2, F@_1, F@_2,
							  F@_3, F@_4,
							  TrUserData) ->
    'skip_varint_ProtobufClient.ClientSessionMessage.Session'(Rest,
							      Z1, Z2, F@_1,
							      F@_2, F@_3, F@_4,
							      TrUserData);
'skip_varint_ProtobufClient.ClientSessionMessage.Session'(<<0:1,
							    _:7, Rest/binary>>,
							  Z1, Z2, F@_1, F@_2,
							  F@_3, F@_4,
							  TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(Rest,
								     Z1, Z2,
								     F@_1, F@_2,
								     F@_3, F@_4,
								     TrUserData).

'skip_length_delimited_ProtobufClient.ClientSessionMessage.Session'(<<1:1,
								      X:7,
								      Rest/binary>>,
								    N, Acc,
								    F@_1, F@_2,
								    F@_3, F@_4,
								    TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtobufClient.ClientSessionMessage.Session'(Rest,
									N + 7,
									X bsl N
									  + Acc,
									F@_1,
									F@_2,
									F@_3,
									F@_4,
									TrUserData);
'skip_length_delimited_ProtobufClient.ClientSessionMessage.Session'(<<0:1,
								      X:7,
								      Rest/binary>>,
								    N, Acc,
								    F@_1, F@_2,
								    F@_3, F@_4,
								    TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(Rest2,
								     0, 0, F@_1,
								     F@_2, F@_3,
								     F@_4,
								     TrUserData).

'skip_group_ProtobufClient.ClientSessionMessage.Session'(Bin,
							 FNum, Z2, F@_1, F@_2,
							 F@_3, F@_4,
							 TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(Rest,
								     0, Z2,
								     F@_1, F@_2,
								     F@_3, F@_4,
								     TrUserData).

'skip_32_ProtobufClient.ClientSessionMessage.Session'(<<_:32,
							Rest/binary>>,
						      Z1, Z2, F@_1, F@_2, F@_3,
						      F@_4, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(Rest,
								     Z1, Z2,
								     F@_1, F@_2,
								     F@_3, F@_4,
								     TrUserData).

'skip_64_ProtobufClient.ClientSessionMessage.Session'(<<_:64,
							Rest/binary>>,
						      Z1, Z2, F@_1, F@_2, F@_3,
						      F@_4, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.Session'(Rest,
								     Z1, Z2,
								     F@_1, F@_2,
								     F@_3, F@_4,
								     TrUserData).

'decode_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Bin,
									 TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Bin,
										     0,
										     0,
										     id([],
											TrUserData),
										     id([],
											TrUserData),
										     id(0,
											TrUserData),
										     TrUserData).

'dfp_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(<<10,
										   Rest/binary>>,
										 Z1,
										 Z2,
										 F@_1,
										 F@_2,
										 F@_3,
										 TrUserData) ->
    'd_field_ProtobufClient.ClientSessionMessage.AnonymousTradingSession_exchange'(Rest,
										   Z1,
										   Z2,
										   F@_1,
										   F@_2,
										   F@_3,
										   TrUserData);
'dfp_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(<<18,
										   Rest/binary>>,
										 Z1,
										 Z2,
										 F@_1,
										 F@_2,
										 F@_3,
										 TrUserData) ->
    'd_field_ProtobufClient.ClientSessionMessage.AnonymousTradingSession_token'(Rest,
										Z1,
										Z2,
										F@_1,
										F@_2,
										F@_3,
										TrUserData);
'dfp_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(<<24,
										   Rest/binary>>,
										 Z1,
										 Z2,
										 F@_1,
										 F@_2,
										 F@_3,
										 TrUserData) ->
    'd_field_ProtobufClient.ClientSessionMessage.AnonymousTradingSession_expiration'(Rest,
										     Z1,
										     Z2,
										     F@_1,
										     F@_2,
										     F@_3,
										     TrUserData);
'dfp_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(<<>>,
										 0,
										 0,
										 F@_1,
										 F@_2,
										 F@_3,
										 _) ->
    #'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'{exchange
								       = F@_1,
								   token = F@_2,
								   expiration =
								       F@_3};
'dfp_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Other,
										 Z1,
										 Z2,
										 F@_1,
										 F@_2,
										 F@_3,
										 TrUserData) ->
    'dg_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Other,
										    Z1,
										    Z2,
										    F@_1,
										    F@_2,
										    F@_3,
										    TrUserData).

'dg_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(<<1:1,
										  X:7,
										  Rest/binary>>,
										N,
										Acc,
										F@_1,
										F@_2,
										F@_3,
										TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Rest,
										    N
										      +
										      7,
										    X
										      bsl
										      N
										      +
										      Acc,
										    F@_1,
										    F@_2,
										    F@_3,
										    TrUserData);
'dg_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(<<0:1,
										  X:7,
										  Rest/binary>>,
										N,
										Acc,
										F@_1,
										F@_2,
										F@_3,
										TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  'd_field_ProtobufClient.ClientSessionMessage.AnonymousTradingSession_exchange'(Rest,
											 0,
											 0,
											 F@_1,
											 F@_2,
											 F@_3,
											 TrUserData);
      18 ->
	  'd_field_ProtobufClient.ClientSessionMessage.AnonymousTradingSession_token'(Rest,
										      0,
										      0,
										      F@_1,
										      F@_2,
										      F@_3,
										      TrUserData);
      24 ->
	  'd_field_ProtobufClient.ClientSessionMessage.AnonymousTradingSession_expiration'(Rest,
											   0,
											   0,
											   F@_1,
											   F@_2,
											   F@_3,
											   TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Rest,
											  0,
											  0,
											  F@_1,
											  F@_2,
											  F@_3,
											  TrUserData);
	    1 ->
		'skip_64_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Rest,
										      0,
										      0,
										      F@_1,
										      F@_2,
										      F@_3,
										      TrUserData);
	    2 ->
		'skip_length_delimited_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Rest,
												    0,
												    0,
												    F@_1,
												    F@_2,
												    F@_3,
												    TrUserData);
	    3 ->
		'skip_group_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Rest,
											 Key
											   bsr
											   3,
											 0,
											 F@_1,
											 F@_2,
											 F@_3,
											 TrUserData);
	    5 ->
		'skip_32_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Rest,
										      0,
										      0,
										      F@_1,
										      F@_2,
										      F@_3,
										      TrUserData)
	  end
    end;
'dg_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(<<>>,
										0,
										0,
										F@_1,
										F@_2,
										F@_3,
										_) ->
    #'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'{exchange
								       = F@_1,
								   token = F@_2,
								   expiration =
								       F@_3}.

'd_field_ProtobufClient.ClientSessionMessage.AnonymousTradingSession_exchange'(<<1:1,
										 X:7,
										 Rest/binary>>,
									       N,
									       Acc,
									       F@_1,
									       F@_2,
									       F@_3,
									       TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientSessionMessage.AnonymousTradingSession_exchange'(Rest,
										   N
										     +
										     7,
										   X
										     bsl
										     N
										     +
										     Acc,
										   F@_1,
										   F@_2,
										   F@_3,
										   TrUserData);
'd_field_ProtobufClient.ClientSessionMessage.AnonymousTradingSession_exchange'(<<0:1,
										 X:7,
										 Rest/binary>>,
									       N,
									       Acc,
									       _,
									       F@_2,
									       F@_3,
									       TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(RestF,
										     0,
										     0,
										     NewFValue,
										     F@_2,
										     F@_3,
										     TrUserData).

'd_field_ProtobufClient.ClientSessionMessage.AnonymousTradingSession_token'(<<1:1,
									      X:7,
									      Rest/binary>>,
									    N,
									    Acc,
									    F@_1,
									    F@_2,
									    F@_3,
									    TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientSessionMessage.AnonymousTradingSession_token'(Rest,
										N
										  +
										  7,
										X
										  bsl
										  N
										  +
										  Acc,
										F@_1,
										F@_2,
										F@_3,
										TrUserData);
'd_field_ProtobufClient.ClientSessionMessage.AnonymousTradingSession_token'(<<0:1,
									      X:7,
									      Rest/binary>>,
									    N,
									    Acc,
									    F@_1,
									    _,
									    F@_3,
									    TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(RestF,
										     0,
										     0,
										     F@_1,
										     NewFValue,
										     F@_3,
										     TrUserData).

'd_field_ProtobufClient.ClientSessionMessage.AnonymousTradingSession_expiration'(<<1:1,
										   X:7,
										   Rest/binary>>,
										 N,
										 Acc,
										 F@_1,
										 F@_2,
										 F@_3,
										 TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientSessionMessage.AnonymousTradingSession_expiration'(Rest,
										     N
										       +
										       7,
										     X
										       bsl
										       N
										       +
										       Acc,
										     F@_1,
										     F@_2,
										     F@_3,
										     TrUserData);
'd_field_ProtobufClient.ClientSessionMessage.AnonymousTradingSession_expiration'(<<0:1,
										   X:7,
										   Rest/binary>>,
										 N,
										 Acc,
										 F@_1,
										 F@_2,
										 _,
										 TrUserData) ->
    {NewFValue, RestF} = {begin
			    <<Res:64/signed-native>> = <<(X bsl N +
							    Acc):64/unsigned-native>>,
			    id(Res, TrUserData)
			  end,
			  Rest},
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(RestF,
										     0,
										     0,
										     F@_1,
										     F@_2,
										     NewFValue,
										     TrUserData).

'skip_varint_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(<<1:1,
									    _:7,
									    Rest/binary>>,
									  Z1,
									  Z2,
									  F@_1,
									  F@_2,
									  F@_3,
									  TrUserData) ->
    'skip_varint_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Rest,
									      Z1,
									      Z2,
									      F@_1,
									      F@_2,
									      F@_3,
									      TrUserData);
'skip_varint_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(<<0:1,
									    _:7,
									    Rest/binary>>,
									  Z1,
									  Z2,
									  F@_1,
									  F@_2,
									  F@_3,
									  TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Rest,
										     Z1,
										     Z2,
										     F@_1,
										     F@_2,
										     F@_3,
										     TrUserData).

'skip_length_delimited_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(<<1:1,
										      X:7,
										      Rest/binary>>,
										    N,
										    Acc,
										    F@_1,
										    F@_2,
										    F@_3,
										    TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Rest,
											N
											  +
											  7,
											X
											  bsl
											  N
											  +
											  Acc,
											F@_1,
											F@_2,
											F@_3,
											TrUserData);
'skip_length_delimited_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(<<0:1,
										      X:7,
										      Rest/binary>>,
										    N,
										    Acc,
										    F@_1,
										    F@_2,
										    F@_3,
										    TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Rest2,
										     0,
										     0,
										     F@_1,
										     F@_2,
										     F@_3,
										     TrUserData).

'skip_group_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Bin,
									 FNum,
									 Z2,
									 F@_1,
									 F@_2,
									 F@_3,
									 TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Rest,
										     0,
										     Z2,
										     F@_1,
										     F@_2,
										     F@_3,
										     TrUserData).

'skip_32_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(<<_:32,
									Rest/binary>>,
								      Z1, Z2,
								      F@_1,
								      F@_2,
								      F@_3,
								      TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Rest,
										     Z1,
										     Z2,
										     F@_1,
										     F@_2,
										     F@_3,
										     TrUserData).

'skip_64_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(<<_:64,
									Rest/binary>>,
								      Z1, Z2,
								      F@_1,
								      F@_2,
								      F@_3,
								      TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Rest,
										     Z1,
										     Z2,
										     F@_1,
										     F@_2,
										     F@_3,
										     TrUserData).

'decode_msg_ProtobufClient.ClientSessionMessage'(Bin,
						 TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage'(Bin,
							     0, 0,
							     id(undefined,
								TrUserData),
							     TrUserData).

'dfp_read_field_def_ProtobufClient.ClientSessionMessage'(<<10,
							   Rest/binary>>,
							 Z1, Z2, F@_1,
							 TrUserData) ->
    'd_field_ProtobufClient.ClientSessionMessage_session'(Rest,
							  Z1, Z2, F@_1,
							  TrUserData);
'dfp_read_field_def_ProtobufClient.ClientSessionMessage'(<<18,
							   Rest/binary>>,
							 Z1, Z2, F@_1,
							 TrUserData) ->
    'd_field_ProtobufClient.ClientSessionMessage_anonymousTradingSession'(Rest,
									  Z1,
									  Z2,
									  F@_1,
									  TrUserData);
'dfp_read_field_def_ProtobufClient.ClientSessionMessage'(<<>>,
							 0, 0, F@_1, _) ->
    #'ProtobufClient.ClientSessionMessage'{'SessionConfig' =
					       F@_1};
'dfp_read_field_def_ProtobufClient.ClientSessionMessage'(Other,
							 Z1, Z2, F@_1,
							 TrUserData) ->
    'dg_read_field_def_ProtobufClient.ClientSessionMessage'(Other,
							    Z1, Z2, F@_1,
							    TrUserData).

'dg_read_field_def_ProtobufClient.ClientSessionMessage'(<<1:1,
							  X:7, Rest/binary>>,
							N, Acc, F@_1,
							TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtobufClient.ClientSessionMessage'(Rest,
							    N + 7,
							    X bsl N + Acc, F@_1,
							    TrUserData);
'dg_read_field_def_ProtobufClient.ClientSessionMessage'(<<0:1,
							  X:7, Rest/binary>>,
							N, Acc, F@_1,
							TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  'd_field_ProtobufClient.ClientSessionMessage_session'(Rest,
								0, 0, F@_1,
								TrUserData);
      18 ->
	  'd_field_ProtobufClient.ClientSessionMessage_anonymousTradingSession'(Rest,
										0,
										0,
										F@_1,
										TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtobufClient.ClientSessionMessage'(Rest,
								  0, 0, F@_1,
								  TrUserData);
	    1 ->
		'skip_64_ProtobufClient.ClientSessionMessage'(Rest, 0,
							      0, F@_1,
							      TrUserData);
	    2 ->
		'skip_length_delimited_ProtobufClient.ClientSessionMessage'(Rest,
									    0,
									    0,
									    F@_1,
									    TrUserData);
	    3 ->
		'skip_group_ProtobufClient.ClientSessionMessage'(Rest,
								 Key bsr 3, 0,
								 F@_1,
								 TrUserData);
	    5 ->
		'skip_32_ProtobufClient.ClientSessionMessage'(Rest, 0,
							      0, F@_1,
							      TrUserData)
	  end
    end;
'dg_read_field_def_ProtobufClient.ClientSessionMessage'(<<>>,
							0, 0, F@_1, _) ->
    #'ProtobufClient.ClientSessionMessage'{'SessionConfig' =
					       F@_1}.

'd_field_ProtobufClient.ClientSessionMessage_session'(<<1:1,
							X:7, Rest/binary>>,
						      N, Acc, F@_1, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientSessionMessage_session'(Rest,
							  N + 7, X bsl N + Acc,
							  F@_1, TrUserData);
'd_field_ProtobufClient.ClientSessionMessage_session'(<<0:1,
							X:7, Rest/binary>>,
						      N, Acc, Prev,
						      TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Bs:Len/binary, Rest2/binary>> = Rest,
			   {id('decode_msg_ProtobufClient.ClientSessionMessage.Session'(Bs,
											TrUserData),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage'(RestF,
							     0, 0,
							     case Prev of
							       undefined ->
								   id({session,
								       NewFValue},
								      TrUserData);
							       {session,
								MVPrev} ->
								   id({session,
								       'merge_msg_ProtobufClient.ClientSessionMessage.Session'(MVPrev,
															       NewFValue,
															       TrUserData)},
								      TrUserData);
							       _ ->
								   id({session,
								       NewFValue},
								      TrUserData)
							     end,
							     TrUserData).

'd_field_ProtobufClient.ClientSessionMessage_anonymousTradingSession'(<<1:1,
									X:7,
									Rest/binary>>,
								      N, Acc,
								      F@_1,
								      TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientSessionMessage_anonymousTradingSession'(Rest,
									  N + 7,
									  X bsl
									    N
									    +
									    Acc,
									  F@_1,
									  TrUserData);
'd_field_ProtobufClient.ClientSessionMessage_anonymousTradingSession'(<<0:1,
									X:7,
									Rest/binary>>,
								      N, Acc,
								      Prev,
								      TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Bs:Len/binary, Rest2/binary>> = Rest,
			   {id('decode_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Bs,
													TrUserData),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage'(RestF,
							     0, 0,
							     case Prev of
							       undefined ->
								   id({anonymousTradingSession,
								       NewFValue},
								      TrUserData);
							       {anonymousTradingSession,
								MVPrev} ->
								   id({anonymousTradingSession,
								       'merge_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(MVPrev,
																	       NewFValue,
																	       TrUserData)},
								      TrUserData);
							       _ ->
								   id({anonymousTradingSession,
								       NewFValue},
								      TrUserData)
							     end,
							     TrUserData).

'skip_varint_ProtobufClient.ClientSessionMessage'(<<1:1,
						    _:7, Rest/binary>>,
						  Z1, Z2, F@_1, TrUserData) ->
    'skip_varint_ProtobufClient.ClientSessionMessage'(Rest,
						      Z1, Z2, F@_1, TrUserData);
'skip_varint_ProtobufClient.ClientSessionMessage'(<<0:1,
						    _:7, Rest/binary>>,
						  Z1, Z2, F@_1, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage'(Rest,
							     Z1, Z2, F@_1,
							     TrUserData).

'skip_length_delimited_ProtobufClient.ClientSessionMessage'(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F@_1,
							    TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtobufClient.ClientSessionMessage'(Rest,
								N + 7,
								X bsl N + Acc,
								F@_1,
								TrUserData);
'skip_length_delimited_ProtobufClient.ClientSessionMessage'(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F@_1,
							    TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage'(Rest2,
							     0, 0, F@_1,
							     TrUserData).

'skip_group_ProtobufClient.ClientSessionMessage'(Bin,
						 FNum, Z2, F@_1, TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage'(Rest,
							     0, Z2, F@_1,
							     TrUserData).

'skip_32_ProtobufClient.ClientSessionMessage'(<<_:32,
						Rest/binary>>,
					      Z1, Z2, F@_1, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage'(Rest,
							     Z1, Z2, F@_1,
							     TrUserData).

'skip_64_ProtobufClient.ClientSessionMessage'(<<_:64,
						Rest/binary>>,
					      Z1, Z2, F@_1, TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSessionMessage'(Rest,
							     Z1, Z2, F@_1,
							     TrUserData).

'decode_msg_ProtobufClient.ClientSubscribeMessage'(Bin,
						   TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSubscribeMessage'(Bin,
							       0, 0,
							       id([],
								  TrUserData),
							       id([],
								  TrUserData),
							       TrUserData).

'dfp_read_field_def_ProtobufClient.ClientSubscribeMessage'(<<10,
							     Rest/binary>>,
							   Z1, Z2, F@_1, F@_2,
							   TrUserData) ->
    'd_field_ProtobufClient.ClientSubscribeMessage_subscriptionKeys'(Rest,
								     Z1, Z2,
								     F@_1, F@_2,
								     TrUserData);
'dfp_read_field_def_ProtobufClient.ClientSubscribeMessage'(<<18,
							     Rest/binary>>,
							   Z1, Z2, F@_1, F@_2,
							   TrUserData) ->
    'd_field_ProtobufClient.ClientSubscribeMessage_subscriptions'(Rest,
								  Z1, Z2, F@_1,
								  F@_2,
								  TrUserData);
'dfp_read_field_def_ProtobufClient.ClientSubscribeMessage'(<<>>,
							   0, 0, R1, R2,
							   TrUserData) ->
    #'ProtobufClient.ClientSubscribeMessage'{subscriptionKeys
						 =
						 lists_reverse(R1, TrUserData),
					     subscriptions =
						 lists_reverse(R2, TrUserData)};
'dfp_read_field_def_ProtobufClient.ClientSubscribeMessage'(Other,
							   Z1, Z2, F@_1, F@_2,
							   TrUserData) ->
    'dg_read_field_def_ProtobufClient.ClientSubscribeMessage'(Other,
							      Z1, Z2, F@_1,
							      F@_2, TrUserData).

'dg_read_field_def_ProtobufClient.ClientSubscribeMessage'(<<1:1,
							    X:7, Rest/binary>>,
							  N, Acc, F@_1, F@_2,
							  TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtobufClient.ClientSubscribeMessage'(Rest,
							      N + 7,
							      X bsl N + Acc,
							      F@_1, F@_2,
							      TrUserData);
'dg_read_field_def_ProtobufClient.ClientSubscribeMessage'(<<0:1,
							    X:7, Rest/binary>>,
							  N, Acc, F@_1, F@_2,
							  TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  'd_field_ProtobufClient.ClientSubscribeMessage_subscriptionKeys'(Rest,
									   0, 0,
									   F@_1,
									   F@_2,
									   TrUserData);
      18 ->
	  'd_field_ProtobufClient.ClientSubscribeMessage_subscriptions'(Rest,
									0, 0,
									F@_1,
									F@_2,
									TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtobufClient.ClientSubscribeMessage'(Rest,
								    0, 0, F@_1,
								    F@_2,
								    TrUserData);
	    1 ->
		'skip_64_ProtobufClient.ClientSubscribeMessage'(Rest, 0,
								0, F@_1, F@_2,
								TrUserData);
	    2 ->
		'skip_length_delimited_ProtobufClient.ClientSubscribeMessage'(Rest,
									      0,
									      0,
									      F@_1,
									      F@_2,
									      TrUserData);
	    3 ->
		'skip_group_ProtobufClient.ClientSubscribeMessage'(Rest,
								   Key bsr 3, 0,
								   F@_1, F@_2,
								   TrUserData);
	    5 ->
		'skip_32_ProtobufClient.ClientSubscribeMessage'(Rest, 0,
								0, F@_1, F@_2,
								TrUserData)
	  end
    end;
'dg_read_field_def_ProtobufClient.ClientSubscribeMessage'(<<>>,
							  0, 0, R1, R2,
							  TrUserData) ->
    #'ProtobufClient.ClientSubscribeMessage'{subscriptionKeys
						 =
						 lists_reverse(R1, TrUserData),
					     subscriptions =
						 lists_reverse(R2, TrUserData)}.

'd_field_ProtobufClient.ClientSubscribeMessage_subscriptionKeys'(<<1:1,
								   X:7,
								   Rest/binary>>,
								 N, Acc, F@_1,
								 F@_2,
								 TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientSubscribeMessage_subscriptionKeys'(Rest,
								     N + 7,
								     X bsl N +
								       Acc,
								     F@_1, F@_2,
								     TrUserData);
'd_field_ProtobufClient.ClientSubscribeMessage_subscriptionKeys'(<<0:1,
								   X:7,
								   Rest/binary>>,
								 N, Acc, Prev,
								 F@_2,
								 TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientSubscribeMessage'(RestF,
							       0, 0,
							       cons(NewFValue,
								    Prev,
								    TrUserData),
							       F@_2,
							       TrUserData).

'd_field_ProtobufClient.ClientSubscribeMessage_subscriptions'(<<1:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F@_1,
							      F@_2, TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientSubscribeMessage_subscriptions'(Rest,
								  N + 7,
								  X bsl N + Acc,
								  F@_1, F@_2,
								  TrUserData);
'd_field_ProtobufClient.ClientSubscribeMessage_subscriptions'(<<0:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F@_1,
							      Prev,
							      TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Bs:Len/binary, Rest2/binary>> = Rest,
			   {id('decode_msg_ProtobufClient.ClientSubscription'(Bs,
									      TrUserData),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientSubscribeMessage'(RestF,
							       0, 0, F@_1,
							       cons(NewFValue,
								    Prev,
								    TrUserData),
							       TrUserData).

'skip_varint_ProtobufClient.ClientSubscribeMessage'(<<1:1,
						      _:7, Rest/binary>>,
						    Z1, Z2, F@_1, F@_2,
						    TrUserData) ->
    'skip_varint_ProtobufClient.ClientSubscribeMessage'(Rest,
							Z1, Z2, F@_1, F@_2,
							TrUserData);
'skip_varint_ProtobufClient.ClientSubscribeMessage'(<<0:1,
						      _:7, Rest/binary>>,
						    Z1, Z2, F@_1, F@_2,
						    TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSubscribeMessage'(Rest,
							       Z1, Z2, F@_1,
							       F@_2,
							       TrUserData).

'skip_length_delimited_ProtobufClient.ClientSubscribeMessage'(<<1:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F@_1,
							      F@_2, TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtobufClient.ClientSubscribeMessage'(Rest,
								  N + 7,
								  X bsl N + Acc,
								  F@_1, F@_2,
								  TrUserData);
'skip_length_delimited_ProtobufClient.ClientSubscribeMessage'(<<0:1,
								X:7,
								Rest/binary>>,
							      N, Acc, F@_1,
							      F@_2,
							      TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtobufClient.ClientSubscribeMessage'(Rest2,
							       0, 0, F@_1, F@_2,
							       TrUserData).

'skip_group_ProtobufClient.ClientSubscribeMessage'(Bin,
						   FNum, Z2, F@_1, F@_2,
						   TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_ProtobufClient.ClientSubscribeMessage'(Rest,
							       0, Z2, F@_1,
							       F@_2,
							       TrUserData).

'skip_32_ProtobufClient.ClientSubscribeMessage'(<<_:32,
						  Rest/binary>>,
						Z1, Z2, F@_1, F@_2,
						TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSubscribeMessage'(Rest,
							       Z1, Z2, F@_1,
							       F@_2,
							       TrUserData).

'skip_64_ProtobufClient.ClientSubscribeMessage'(<<_:64,
						  Rest/binary>>,
						Z1, Z2, F@_1, F@_2,
						TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientSubscribeMessage'(Rest,
							       Z1, Z2, F@_1,
							       F@_2,
							       TrUserData).

'decode_msg_ProtobufClient.ClientUnsubscribeMessage'(Bin,
						     TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(Bin,
								 0, 0,
								 id([],
								    TrUserData),
								 id([],
								    TrUserData),
								 TrUserData).

'dfp_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(<<10,
							       Rest/binary>>,
							     Z1, Z2, F@_1, F@_2,
							     TrUserData) ->
    'd_field_ProtobufClient.ClientUnsubscribeMessage_subscriptionKeys'(Rest,
								       Z1, Z2,
								       F@_1,
								       F@_2,
								       TrUserData);
'dfp_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(<<18,
							       Rest/binary>>,
							     Z1, Z2, F@_1, F@_2,
							     TrUserData) ->
    'd_field_ProtobufClient.ClientUnsubscribeMessage_subscriptions'(Rest,
								    Z1, Z2,
								    F@_1, F@_2,
								    TrUserData);
'dfp_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(<<>>,
							     0, 0, R1, R2,
							     TrUserData) ->
    #'ProtobufClient.ClientUnsubscribeMessage'{subscriptionKeys
						   =
						   lists_reverse(R1,
								 TrUserData),
					       subscriptions =
						   lists_reverse(R2,
								 TrUserData)};
'dfp_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(Other,
							     Z1, Z2, F@_1, F@_2,
							     TrUserData) ->
    'dg_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(Other,
								Z1, Z2, F@_1,
								F@_2,
								TrUserData).

'dg_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(<<1:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F@_1, F@_2,
							    TrUserData)
    when N < 32 - 7 ->
    'dg_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(Rest,
								N + 7,
								X bsl N + Acc,
								F@_1, F@_2,
								TrUserData);
'dg_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(<<0:1,
							      X:7,
							      Rest/binary>>,
							    N, Acc, F@_1, F@_2,
							    TrUserData) ->
    Key = X bsl N + Acc,
    case Key of
      10 ->
	  'd_field_ProtobufClient.ClientUnsubscribeMessage_subscriptionKeys'(Rest,
									     0,
									     0,
									     F@_1,
									     F@_2,
									     TrUserData);
      18 ->
	  'd_field_ProtobufClient.ClientUnsubscribeMessage_subscriptions'(Rest,
									  0, 0,
									  F@_1,
									  F@_2,
									  TrUserData);
      _ ->
	  case Key band 7 of
	    0 ->
		'skip_varint_ProtobufClient.ClientUnsubscribeMessage'(Rest,
								      0, 0,
								      F@_1,
								      F@_2,
								      TrUserData);
	    1 ->
		'skip_64_ProtobufClient.ClientUnsubscribeMessage'(Rest,
								  0, 0, F@_1,
								  F@_2,
								  TrUserData);
	    2 ->
		'skip_length_delimited_ProtobufClient.ClientUnsubscribeMessage'(Rest,
										0,
										0,
										F@_1,
										F@_2,
										TrUserData);
	    3 ->
		'skip_group_ProtobufClient.ClientUnsubscribeMessage'(Rest,
								     Key bsr 3,
								     0, F@_1,
								     F@_2,
								     TrUserData);
	    5 ->
		'skip_32_ProtobufClient.ClientUnsubscribeMessage'(Rest,
								  0, 0, F@_1,
								  F@_2,
								  TrUserData)
	  end
    end;
'dg_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(<<>>,
							    0, 0, R1, R2,
							    TrUserData) ->
    #'ProtobufClient.ClientUnsubscribeMessage'{subscriptionKeys
						   =
						   lists_reverse(R1,
								 TrUserData),
					       subscriptions =
						   lists_reverse(R2,
								 TrUserData)}.

'd_field_ProtobufClient.ClientUnsubscribeMessage_subscriptionKeys'(<<1:1,
								     X:7,
								     Rest/binary>>,
								   N, Acc, F@_1,
								   F@_2,
								   TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientUnsubscribeMessage_subscriptionKeys'(Rest,
								       N + 7,
								       X bsl N +
									 Acc,
								       F@_1,
								       F@_2,
								       TrUserData);
'd_field_ProtobufClient.ClientUnsubscribeMessage_subscriptionKeys'(<<0:1,
								     X:7,
								     Rest/binary>>,
								   N, Acc, Prev,
								   F@_2,
								   TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Utf8:Len/binary, Rest2/binary>> = Rest,
			   {id(unicode:characters_to_list(Utf8, unicode),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(RestF,
								 0, 0,
								 cons(NewFValue,
								      Prev,
								      TrUserData),
								 F@_2,
								 TrUserData).

'd_field_ProtobufClient.ClientUnsubscribeMessage_subscriptions'(<<1:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F@_1,
								F@_2,
								TrUserData)
    when N < 57 ->
    'd_field_ProtobufClient.ClientUnsubscribeMessage_subscriptions'(Rest,
								    N + 7,
								    X bsl N +
								      Acc,
								    F@_1, F@_2,
								    TrUserData);
'd_field_ProtobufClient.ClientUnsubscribeMessage_subscriptions'(<<0:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F@_1,
								Prev,
								TrUserData) ->
    {NewFValue, RestF} = begin
			   Len = X bsl N + Acc,
			   <<Bs:Len/binary, Rest2/binary>> = Rest,
			   {id('decode_msg_ProtobufClient.ClientSubscription'(Bs,
									      TrUserData),
			       TrUserData),
			    Rest2}
			 end,
    'dfp_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(RestF,
								 0, 0, F@_1,
								 cons(NewFValue,
								      Prev,
								      TrUserData),
								 TrUserData).

'skip_varint_ProtobufClient.ClientUnsubscribeMessage'(<<1:1,
							_:7, Rest/binary>>,
						      Z1, Z2, F@_1, F@_2,
						      TrUserData) ->
    'skip_varint_ProtobufClient.ClientUnsubscribeMessage'(Rest,
							  Z1, Z2, F@_1, F@_2,
							  TrUserData);
'skip_varint_ProtobufClient.ClientUnsubscribeMessage'(<<0:1,
							_:7, Rest/binary>>,
						      Z1, Z2, F@_1, F@_2,
						      TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(Rest,
								 Z1, Z2, F@_1,
								 F@_2,
								 TrUserData).

'skip_length_delimited_ProtobufClient.ClientUnsubscribeMessage'(<<1:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F@_1,
								F@_2,
								TrUserData)
    when N < 57 ->
    'skip_length_delimited_ProtobufClient.ClientUnsubscribeMessage'(Rest,
								    N + 7,
								    X bsl N +
								      Acc,
								    F@_1, F@_2,
								    TrUserData);
'skip_length_delimited_ProtobufClient.ClientUnsubscribeMessage'(<<0:1,
								  X:7,
								  Rest/binary>>,
								N, Acc, F@_1,
								F@_2,
								TrUserData) ->
    Length = X bsl N + Acc,
    <<_:Length/binary, Rest2/binary>> = Rest,
    'dfp_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(Rest2,
								 0, 0, F@_1,
								 F@_2,
								 TrUserData).

'skip_group_ProtobufClient.ClientUnsubscribeMessage'(Bin,
						     FNum, Z2, F@_1, F@_2,
						     TrUserData) ->
    {_, Rest} = read_group(Bin, FNum),
    'dfp_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(Rest,
								 0, Z2, F@_1,
								 F@_2,
								 TrUserData).

'skip_32_ProtobufClient.ClientUnsubscribeMessage'(<<_:32,
						    Rest/binary>>,
						  Z1, Z2, F@_1, F@_2,
						  TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(Rest,
								 Z1, Z2, F@_1,
								 F@_2,
								 TrUserData).

'skip_64_ProtobufClient.ClientUnsubscribeMessage'(<<_:64,
						    Rest/binary>>,
						  Z1, Z2, F@_1, F@_2,
						  TrUserData) ->
    'dfp_read_field_def_ProtobufClient.ClientUnsubscribeMessage'(Rest,
								 Z1, Z2, F@_1,
								 F@_2,
								 TrUserData).

'd_enum_ProtobufClient.APIAuthenticationMessage.Source'(0) ->
    'UNKNOWN';
'd_enum_ProtobufClient.APIAuthenticationMessage.Source'(1) ->
    'GOLANG_SDK';
'd_enum_ProtobufClient.APIAuthenticationMessage.Source'(2) ->
    'JAVASCRIPT_SDK';
'd_enum_ProtobufClient.APIAuthenticationMessage.Source'(3) ->
    'NODE_SDK';
'd_enum_ProtobufClient.APIAuthenticationMessage.Source'(5) ->
    'RUST_SDK';
'd_enum_ProtobufClient.APIAuthenticationMessage.Source'(4) ->
    'CW_WEB';
'd_enum_ProtobufClient.APIAuthenticationMessage.Source'(V) ->
    V.

read_group(Bin, FieldNum) ->
    {NumBytes, EndTagLen} = read_gr_b(Bin, 0, 0, 0, 0, FieldNum),
    <<Group:NumBytes/binary, _:EndTagLen/binary, Rest/binary>> = Bin,
    {Group, Rest}.

%% Like skipping over fields, but record the total length,
%% Each field is <(FieldNum bsl 3) bor FieldType> ++ <FieldValue>
%% Record the length because varints may be non-optimally encoded.
%%
%% Groups can be nested, but assume the same FieldNum cannot be nested
%% because group field numbers are shared with the rest of the fields
%% numbers. Thus we can search just for an group-end with the same
%% field number.
%%
%% (The only time the same group field number could occur would
%% be in a nested sub message, but then it would be inside a
%% length-delimited entry, which we skip-read by length.)
read_gr_b(<<1:1, X:7, Tl/binary>>, N, Acc, NumBytes, TagLen, FieldNum)
  when N < (32-7) ->
    read_gr_b(Tl, N+7, X bsl N + Acc, NumBytes, TagLen+1, FieldNum);
read_gr_b(<<0:1, X:7, Tl/binary>>, N, Acc, NumBytes, TagLen,
          FieldNum) ->
    Key = X bsl N + Acc,
    TagLen1 = TagLen + 1,
    case {Key bsr 3, Key band 7} of
        {FieldNum, 4} -> % 4 = group_end
            {NumBytes, TagLen1};
        {_, 0} -> % 0 = varint
            read_gr_vi(Tl, 0, NumBytes + TagLen1, FieldNum);
        {_, 1} -> % 1 = bits64
            <<_:64, Tl2/binary>> = Tl,
            read_gr_b(Tl2, 0, 0, NumBytes + TagLen1 + 8, 0, FieldNum);
        {_, 2} -> % 2 = length_delimited
            read_gr_ld(Tl, 0, 0, NumBytes + TagLen1, FieldNum);
        {_, 3} -> % 3 = group_start
            read_gr_b(Tl, 0, 0, NumBytes + TagLen1, 0, FieldNum);
        {_, 4} -> % 4 = group_end
            read_gr_b(Tl, 0, 0, NumBytes + TagLen1, 0, FieldNum);
        {_, 5} -> % 5 = bits32
            <<_:32, Tl2/binary>> = Tl,
            read_gr_b(Tl2, 0, 0, NumBytes + TagLen1 + 4, 0, FieldNum)
    end.

read_gr_vi(<<1:1, _:7, Tl/binary>>, N, NumBytes, FieldNum)
  when N < (64-7) ->
    read_gr_vi(Tl, N+7, NumBytes+1, FieldNum);
read_gr_vi(<<0:1, _:7, Tl/binary>>, _, NumBytes, FieldNum) ->
    read_gr_b(Tl, 0, 0, NumBytes+1, 0, FieldNum).

read_gr_ld(<<1:1, X:7, Tl/binary>>, N, Acc, NumBytes, FieldNum)
  when N < (64-7) ->
    read_gr_ld(Tl, N+7, X bsl N + Acc, NumBytes+1, FieldNum);
read_gr_ld(<<0:1, X:7, Tl/binary>>, N, Acc, NumBytes, FieldNum) ->
    Len = X bsl N + Acc,
    NumBytes1 = NumBytes + 1,
    <<_:Len/binary, Tl2/binary>> = Tl,
    read_gr_b(Tl2, 0, 0, NumBytes1 + Len, 0, FieldNum).

merge_msgs(Prev, New)
    when element(1, Prev) =:= element(1, New) ->
    merge_msgs(Prev, New, element(1, Prev), []).

merge_msgs(Prev, New, MsgName) when is_atom(MsgName) ->
    merge_msgs(Prev, New, MsgName, []);
merge_msgs(Prev, New, Opts)
    when element(1, Prev) =:= element(1, New),
	 is_list(Opts) ->
    merge_msgs(Prev, New, element(1, Prev), Opts).

merge_msgs(Prev, New, MsgName, Opts) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
      'ProtobufClient.ClientMessage' ->
	  'merge_msg_ProtobufClient.ClientMessage'(Prev, New,
						   TrUserData);
      'ProtobufClient.ClientIdentificationMessage' ->
	  'merge_msg_ProtobufClient.ClientIdentificationMessage'(Prev,
								 New,
								 TrUserData);
      'ProtobufClient.WebAuthenticationMessage' ->
	  'merge_msg_ProtobufClient.WebAuthenticationMessage'(Prev,
							      New, TrUserData);
      'ProtobufClient.TradeSessionAuth' ->
	  'merge_msg_ProtobufClient.TradeSessionAuth'(Prev, New,
						      TrUserData);
      'ProtobufClient.TradeSubscription' ->
	  'merge_msg_ProtobufClient.TradeSubscription'(Prev, New,
						       TrUserData);
      'ProtobufClient.StreamSubscription' ->
	  'merge_msg_ProtobufClient.StreamSubscription'(Prev, New,
							TrUserData);
      'ProtobufClient.ClientSubscription' ->
	  'merge_msg_ProtobufClient.ClientSubscription'(Prev, New,
							TrUserData);
      'ProtobufClient.APIAuthenticationMessage' ->
	  'merge_msg_ProtobufClient.APIAuthenticationMessage'(Prev,
							      New, TrUserData);
      'ProtobufClient.ClientSessionMessage.Session' ->
	  'merge_msg_ProtobufClient.ClientSessionMessage.Session'(Prev,
								  New,
								  TrUserData);
      'ProtobufClient.ClientSessionMessage.AnonymousTradingSession' ->
	  'merge_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Prev,
										  New,
										  TrUserData);
      'ProtobufClient.ClientSessionMessage' ->
	  'merge_msg_ProtobufClient.ClientSessionMessage'(Prev,
							  New, TrUserData);
      'ProtobufClient.ClientSubscribeMessage' ->
	  'merge_msg_ProtobufClient.ClientSubscribeMessage'(Prev,
							    New, TrUserData);
      'ProtobufClient.ClientUnsubscribeMessage' ->
	  'merge_msg_ProtobufClient.ClientUnsubscribeMessage'(Prev,
							      New, TrUserData)
    end.

-compile({nowarn_unused_function,'merge_msg_ProtobufClient.ClientMessage'/3}).
'merge_msg_ProtobufClient.ClientMessage'(#'ProtobufClient.ClientMessage'{body
									     =
									     PFbody},
					 #'ProtobufClient.ClientMessage'{body =
									     NFbody},
					 TrUserData) ->
    #'ProtobufClient.ClientMessage'{body =
					case {PFbody, NFbody} of
					  {{identification, OPFbody},
					   {identification, ONFbody}} ->
					      {identification,
					       'merge_msg_ProtobufClient.ClientIdentificationMessage'(OPFbody,
												      ONFbody,
												      TrUserData)};
					  {{subscribe, OPFbody},
					   {subscribe, ONFbody}} ->
					      {subscribe,
					       'merge_msg_ProtobufClient.ClientSubscribeMessage'(OPFbody,
												 ONFbody,
												 TrUserData)};
					  {{unsubscribe, OPFbody},
					   {unsubscribe, ONFbody}} ->
					      {unsubscribe,
					       'merge_msg_ProtobufClient.ClientUnsubscribeMessage'(OPFbody,
												   ONFbody,
												   TrUserData)};
					  {{webAuthentication, OPFbody},
					   {webAuthentication, ONFbody}} ->
					      {webAuthentication,
					       'merge_msg_ProtobufClient.WebAuthenticationMessage'(OPFbody,
												   ONFbody,
												   TrUserData)};
					  {{apiAuthentication, OPFbody},
					   {apiAuthentication, ONFbody}} ->
					      {apiAuthentication,
					       'merge_msg_ProtobufClient.APIAuthenticationMessage'(OPFbody,
												   ONFbody,
												   TrUserData)};
					  {_, undefined} -> PFbody;
					  _ -> NFbody
					end}.

-compile({nowarn_unused_function,'merge_msg_ProtobufClient.ClientIdentificationMessage'/3}).
'merge_msg_ProtobufClient.ClientIdentificationMessage'(#'ProtobufClient.ClientIdentificationMessage'{useragent
													 =
													 PFuseragent,
												     revision
													 =
													 PFrevision,
												     integration
													 =
													 PFintegration,
												     locale
													 =
													 PFlocale,
												     subscriptions
													 =
													 PFsubscriptions},
						       #'ProtobufClient.ClientIdentificationMessage'{useragent
													 =
													 NFuseragent,
												     revision
													 =
													 NFrevision,
												     integration
													 =
													 NFintegration,
												     locale
													 =
													 NFlocale,
												     subscriptions
													 =
													 NFsubscriptions},
						       TrUserData) ->
    #'ProtobufClient.ClientIdentificationMessage'{useragent
						      =
						      if NFuseragent =:=
							   undefined ->
							     PFuseragent;
							 true -> NFuseragent
						      end,
						  revision =
						      if NFrevision =:=
							   undefined ->
							     PFrevision;
							 true -> NFrevision
						      end,
						  integration =
						      if NFintegration =:=
							   undefined ->
							     PFintegration;
							 true -> NFintegration
						      end,
						  locale =
						      if NFlocale =:=
							   undefined ->
							     PFlocale;
							 true -> NFlocale
						      end,
						  subscriptions =
						      if PFsubscriptions /=
							   undefined,
							 NFsubscriptions /=
							   undefined ->
							     'erlang_++'(PFsubscriptions,
									 NFsubscriptions,
									 TrUserData);
							 PFsubscriptions ==
							   undefined ->
							     NFsubscriptions;
							 NFsubscriptions ==
							   undefined ->
							     PFsubscriptions
						      end}.

-compile({nowarn_unused_function,'merge_msg_ProtobufClient.WebAuthenticationMessage'/3}).
'merge_msg_ProtobufClient.WebAuthenticationMessage'(#'ProtobufClient.WebAuthenticationMessage'{identification
												   =
												   PFidentification,
											       token
												   =
												   PFtoken,
											       nonce
												   =
												   PFnonce,
											       access_list
												   =
												   PFaccess_list},
						    #'ProtobufClient.WebAuthenticationMessage'{identification
												   =
												   NFidentification,
											       token
												   =
												   NFtoken,
											       nonce
												   =
												   NFnonce,
											       access_list
												   =
												   NFaccess_list},
						    TrUserData) ->
    #'ProtobufClient.WebAuthenticationMessage'{identification
						   =
						   if PFidentification /=
							undefined,
						      NFidentification /=
							undefined ->
							  'merge_msg_ProtobufClient.ClientIdentificationMessage'(PFidentification,
														 NFidentification,
														 TrUserData);
						      PFidentification ==
							undefined ->
							  NFidentification;
						      NFidentification ==
							undefined ->
							  PFidentification
						   end,
					       token =
						   if NFtoken =:= undefined ->
							  PFtoken;
						      true -> NFtoken
						   end,
					       nonce =
						   if NFnonce =:= undefined ->
							  PFnonce;
						      true -> NFnonce
						   end,
					       access_list =
						   if PFaccess_list /=
							undefined,
						      NFaccess_list /=
							undefined ->
							  'erlang_++'(PFaccess_list,
								      NFaccess_list,
								      TrUserData);
						      PFaccess_list ==
							undefined ->
							  NFaccess_list;
						      NFaccess_list ==
							undefined ->
							  PFaccess_list
						   end}.

-compile({nowarn_unused_function,'merge_msg_ProtobufClient.TradeSessionAuth'/3}).
'merge_msg_ProtobufClient.TradeSessionAuth'(#'ProtobufClient.TradeSessionAuth'{api_key
										   =
										   PFapi_key,
									       api_secret
										   =
										   PFapi_secret,
									       customer_id
										   =
										   PFcustomer_id,
									       key_passphrase
										   =
										   PFkey_passphrase},
					    #'ProtobufClient.TradeSessionAuth'{api_key
										   =
										   NFapi_key,
									       api_secret
										   =
										   NFapi_secret,
									       customer_id
										   =
										   NFcustomer_id,
									       key_passphrase
										   =
										   NFkey_passphrase},
					    _) ->
    #'ProtobufClient.TradeSessionAuth'{api_key =
					   if NFapi_key =:= undefined ->
						  PFapi_key;
					      true -> NFapi_key
					   end,
				       api_secret =
					   if NFapi_secret =:= undefined ->
						  PFapi_secret;
					      true -> NFapi_secret
					   end,
				       customer_id =
					   if NFcustomer_id =:= undefined ->
						  PFcustomer_id;
					      true -> NFcustomer_id
					   end,
				       key_passphrase =
					   if NFkey_passphrase =:= undefined ->
						  PFkey_passphrase;
					      true -> NFkey_passphrase
					   end}.

-compile({nowarn_unused_function,'merge_msg_ProtobufClient.TradeSubscription'/3}).
'merge_msg_ProtobufClient.TradeSubscription'(#'ProtobufClient.TradeSubscription'{marketId
										     =
										     PFmarketId,
										 auth
										     =
										     PFauth},
					     #'ProtobufClient.TradeSubscription'{marketId
										     =
										     NFmarketId,
										 auth
										     =
										     NFauth},
					     TrUserData) ->
    #'ProtobufClient.TradeSubscription'{marketId =
					    if NFmarketId =:= undefined ->
						   PFmarketId;
					       true -> NFmarketId
					    end,
					auth =
					    if PFauth /= undefined,
					       NFauth /= undefined ->
						   'merge_msg_ProtobufClient.TradeSessionAuth'(PFauth,
											       NFauth,
											       TrUserData);
					       PFauth == undefined -> NFauth;
					       NFauth == undefined -> PFauth
					    end}.

-compile({nowarn_unused_function,'merge_msg_ProtobufClient.StreamSubscription'/3}).
'merge_msg_ProtobufClient.StreamSubscription'(#'ProtobufClient.StreamSubscription'{resource
										       =
										       PFresource},
					      #'ProtobufClient.StreamSubscription'{resource
										       =
										       NFresource},
					      _) ->
    #'ProtobufClient.StreamSubscription'{resource =
					     if NFresource =:= undefined ->
						    PFresource;
						true -> NFresource
					     end}.

-compile({nowarn_unused_function,'merge_msg_ProtobufClient.ClientSubscription'/3}).
'merge_msg_ProtobufClient.ClientSubscription'(#'ProtobufClient.ClientSubscription'{body
										       =
										       PFbody},
					      #'ProtobufClient.ClientSubscription'{body
										       =
										       NFbody},
					      TrUserData) ->
    #'ProtobufClient.ClientSubscription'{body =
					     case {PFbody, NFbody} of
					       {{stream_subscription, OPFbody},
						{stream_subscription,
						 ONFbody}} ->
						   {stream_subscription,
						    'merge_msg_ProtobufClient.StreamSubscription'(OPFbody,
												  ONFbody,
												  TrUserData)};
					       {{trade_subscription, OPFbody},
						{trade_subscription,
						 ONFbody}} ->
						   {trade_subscription,
						    'merge_msg_ProtobufClient.TradeSubscription'(OPFbody,
												 ONFbody,
												 TrUserData)};
					       {_, undefined} -> PFbody;
					       _ -> NFbody
					     end}.

-compile({nowarn_unused_function,'merge_msg_ProtobufClient.APIAuthenticationMessage'/3}).
'merge_msg_ProtobufClient.APIAuthenticationMessage'(#'ProtobufClient.APIAuthenticationMessage'{token
												   =
												   PFtoken,
											       nonce
												   =
												   PFnonce,
											       api_key
												   =
												   PFapi_key,
											       source
												   =
												   PFsource,
											       version
												   =
												   PFversion,
											       subscriptions
												   =
												   PFsubscriptions,
											       client_subscriptions
												   =
												   PFclient_subscriptions},
						    #'ProtobufClient.APIAuthenticationMessage'{token
												   =
												   NFtoken,
											       nonce
												   =
												   NFnonce,
											       api_key
												   =
												   NFapi_key,
											       source
												   =
												   NFsource,
											       version
												   =
												   NFversion,
											       subscriptions
												   =
												   NFsubscriptions,
											       client_subscriptions
												   =
												   NFclient_subscriptions},
						    TrUserData) ->
    #'ProtobufClient.APIAuthenticationMessage'{token =
						   if NFtoken =:= undefined ->
							  PFtoken;
						      true -> NFtoken
						   end,
					       nonce =
						   if NFnonce =:= undefined ->
							  PFnonce;
						      true -> NFnonce
						   end,
					       api_key =
						   if NFapi_key =:= undefined ->
							  PFapi_key;
						      true -> NFapi_key
						   end,
					       source =
						   if NFsource =:= undefined ->
							  PFsource;
						      true -> NFsource
						   end,
					       version =
						   if NFversion =:= undefined ->
							  PFversion;
						      true -> NFversion
						   end,
					       subscriptions =
						   if PFsubscriptions /=
							undefined,
						      NFsubscriptions /=
							undefined ->
							  'erlang_++'(PFsubscriptions,
								      NFsubscriptions,
								      TrUserData);
						      PFsubscriptions ==
							undefined ->
							  NFsubscriptions;
						      NFsubscriptions ==
							undefined ->
							  PFsubscriptions
						   end,
					       client_subscriptions =
						   if PFclient_subscriptions /=
							undefined,
						      NFclient_subscriptions /=
							undefined ->
							  'erlang_++'(PFclient_subscriptions,
								      NFclient_subscriptions,
								      TrUserData);
						      PFclient_subscriptions ==
							undefined ->
							  NFclient_subscriptions;
						      NFclient_subscriptions ==
							undefined ->
							  PFclient_subscriptions
						   end}.

-compile({nowarn_unused_function,'merge_msg_ProtobufClient.ClientSessionMessage.Session'/3}).
'merge_msg_ProtobufClient.ClientSessionMessage.Session'(#'ProtobufClient.ClientSessionMessage.Session'{userId
													   =
													   PFuserId,
												       expires
													   =
													   PFexpires,
												       token
													   =
													   PFtoken,
												       mfaToken
													   =
													   PFmfaToken},
							#'ProtobufClient.ClientSessionMessage.Session'{userId
													   =
													   NFuserId,
												       expires
													   =
													   NFexpires,
												       token
													   =
													   NFtoken,
												       mfaToken
													   =
													   NFmfaToken},
							_) ->
    #'ProtobufClient.ClientSessionMessage.Session'{userId =
						       if NFuserId =:=
							    undefined ->
							      PFuserId;
							  true -> NFuserId
						       end,
						   expires =
						       if NFexpires =:=
							    undefined ->
							      PFexpires;
							  true -> NFexpires
						       end,
						   token =
						       if NFtoken =:=
							    undefined ->
							      PFtoken;
							  true -> NFtoken
						       end,
						   mfaToken =
						       if NFmfaToken =:=
							    undefined ->
							      PFmfaToken;
							  true -> NFmfaToken
						       end}.

-compile({nowarn_unused_function,'merge_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'/3}).
'merge_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(#'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'{exchange
																	   =
																	   PFexchange,
																       token
																	   =
																	   PFtoken,
																       expiration
																	   =
																	   PFexpiration},
									#'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'{exchange
																	   =
																	   NFexchange,
																       token
																	   =
																	   NFtoken,
																       expiration
																	   =
																	   NFexpiration},
									_) ->
    #'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'{exchange
								       =
								       if
									 NFexchange
									   =:=
									   undefined ->
									     PFexchange;
									 true ->
									     NFexchange
								       end,
								   token =
								       if
									 NFtoken
									   =:=
									   undefined ->
									     PFtoken;
									 true ->
									     NFtoken
								       end,
								   expiration =
								       if
									 NFexpiration
									   =:=
									   undefined ->
									     PFexpiration;
									 true ->
									     NFexpiration
								       end}.

-compile({nowarn_unused_function,'merge_msg_ProtobufClient.ClientSessionMessage'/3}).
'merge_msg_ProtobufClient.ClientSessionMessage'(#'ProtobufClient.ClientSessionMessage'{'SessionConfig'
											   =
											   PFSessionConfig},
						#'ProtobufClient.ClientSessionMessage'{'SessionConfig'
											   =
											   NFSessionConfig},
						TrUserData) ->
    #'ProtobufClient.ClientSessionMessage'{'SessionConfig' =
					       case {PFSessionConfig,
						     NFSessionConfig}
						   of
						 {{session, OPFSessionConfig},
						  {session,
						   ONFSessionConfig}} ->
						     {session,
						      'merge_msg_ProtobufClient.ClientSessionMessage.Session'(OPFSessionConfig,
													      ONFSessionConfig,
													      TrUserData)};
						 {{anonymousTradingSession,
						   OPFSessionConfig},
						  {anonymousTradingSession,
						   ONFSessionConfig}} ->
						     {anonymousTradingSession,
						      'merge_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(OPFSessionConfig,
															      ONFSessionConfig,
															      TrUserData)};
						 {_, undefined} ->
						     PFSessionConfig;
						 _ -> NFSessionConfig
					       end}.

-compile({nowarn_unused_function,'merge_msg_ProtobufClient.ClientSubscribeMessage'/3}).
'merge_msg_ProtobufClient.ClientSubscribeMessage'(#'ProtobufClient.ClientSubscribeMessage'{subscriptionKeys
											       =
											       PFsubscriptionKeys,
											   subscriptions
											       =
											       PFsubscriptions},
						  #'ProtobufClient.ClientSubscribeMessage'{subscriptionKeys
											       =
											       NFsubscriptionKeys,
											   subscriptions
											       =
											       NFsubscriptions},
						  TrUserData) ->
    #'ProtobufClient.ClientSubscribeMessage'{subscriptionKeys
						 =
						 if PFsubscriptionKeys /=
						      undefined,
						    NFsubscriptionKeys /=
						      undefined ->
							'erlang_++'(PFsubscriptionKeys,
								    NFsubscriptionKeys,
								    TrUserData);
						    PFsubscriptionKeys ==
						      undefined ->
							NFsubscriptionKeys;
						    NFsubscriptionKeys ==
						      undefined ->
							PFsubscriptionKeys
						 end,
					     subscriptions =
						 if PFsubscriptions /=
						      undefined,
						    NFsubscriptions /=
						      undefined ->
							'erlang_++'(PFsubscriptions,
								    NFsubscriptions,
								    TrUserData);
						    PFsubscriptions ==
						      undefined ->
							NFsubscriptions;
						    NFsubscriptions ==
						      undefined ->
							PFsubscriptions
						 end}.

-compile({nowarn_unused_function,'merge_msg_ProtobufClient.ClientUnsubscribeMessage'/3}).
'merge_msg_ProtobufClient.ClientUnsubscribeMessage'(#'ProtobufClient.ClientUnsubscribeMessage'{subscriptionKeys
												   =
												   PFsubscriptionKeys,
											       subscriptions
												   =
												   PFsubscriptions},
						    #'ProtobufClient.ClientUnsubscribeMessage'{subscriptionKeys
												   =
												   NFsubscriptionKeys,
											       subscriptions
												   =
												   NFsubscriptions},
						    TrUserData) ->
    #'ProtobufClient.ClientUnsubscribeMessage'{subscriptionKeys
						   =
						   if PFsubscriptionKeys /=
							undefined,
						      NFsubscriptionKeys /=
							undefined ->
							  'erlang_++'(PFsubscriptionKeys,
								      NFsubscriptionKeys,
								      TrUserData);
						      PFsubscriptionKeys ==
							undefined ->
							  NFsubscriptionKeys;
						      NFsubscriptionKeys ==
							undefined ->
							  PFsubscriptionKeys
						   end,
					       subscriptions =
						   if PFsubscriptions /=
							undefined,
						      NFsubscriptions /=
							undefined ->
							  'erlang_++'(PFsubscriptions,
								      NFsubscriptions,
								      TrUserData);
						      PFsubscriptions ==
							undefined ->
							  NFsubscriptions;
						      NFsubscriptions ==
							undefined ->
							  PFsubscriptions
						   end}.


verify_msg(Msg) when tuple_size(Msg) >= 1 ->
    verify_msg(Msg, element(1, Msg), []);
verify_msg(X) ->
    mk_type_error(not_a_known_message, X, []).

verify_msg(Msg, MsgName) when is_atom(MsgName) ->
    verify_msg(Msg, MsgName, []);
verify_msg(Msg, Opts) when tuple_size(Msg) >= 1 ->
    verify_msg(Msg, element(1, Msg), Opts);
verify_msg(X, _Opts) ->
    mk_type_error(not_a_known_message, X, []).

verify_msg(Msg, MsgName, Opts) ->
    TrUserData = proplists:get_value(user_data, Opts),
    case MsgName of
      'ProtobufClient.ClientMessage' ->
	  'v_msg_ProtobufClient.ClientMessage'(Msg, [MsgName],
					       TrUserData);
      'ProtobufClient.ClientIdentificationMessage' ->
	  'v_msg_ProtobufClient.ClientIdentificationMessage'(Msg,
							     [MsgName],
							     TrUserData);
      'ProtobufClient.WebAuthenticationMessage' ->
	  'v_msg_ProtobufClient.WebAuthenticationMessage'(Msg,
							  [MsgName],
							  TrUserData);
      'ProtobufClient.TradeSessionAuth' ->
	  'v_msg_ProtobufClient.TradeSessionAuth'(Msg, [MsgName],
						  TrUserData);
      'ProtobufClient.TradeSubscription' ->
	  'v_msg_ProtobufClient.TradeSubscription'(Msg, [MsgName],
						   TrUserData);
      'ProtobufClient.StreamSubscription' ->
	  'v_msg_ProtobufClient.StreamSubscription'(Msg,
						    [MsgName], TrUserData);
      'ProtobufClient.ClientSubscription' ->
	  'v_msg_ProtobufClient.ClientSubscription'(Msg,
						    [MsgName], TrUserData);
      'ProtobufClient.APIAuthenticationMessage' ->
	  'v_msg_ProtobufClient.APIAuthenticationMessage'(Msg,
							  [MsgName],
							  TrUserData);
      'ProtobufClient.ClientSessionMessage.Session' ->
	  'v_msg_ProtobufClient.ClientSessionMessage.Session'(Msg,
							      [MsgName],
							      TrUserData);
      'ProtobufClient.ClientSessionMessage.AnonymousTradingSession' ->
	  'v_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(Msg,
									      [MsgName],
									      TrUserData);
      'ProtobufClient.ClientSessionMessage' ->
	  'v_msg_ProtobufClient.ClientSessionMessage'(Msg,
						      [MsgName], TrUserData);
      'ProtobufClient.ClientSubscribeMessage' ->
	  'v_msg_ProtobufClient.ClientSubscribeMessage'(Msg,
							[MsgName], TrUserData);
      'ProtobufClient.ClientUnsubscribeMessage' ->
	  'v_msg_ProtobufClient.ClientUnsubscribeMessage'(Msg,
							  [MsgName],
							  TrUserData);
      _ -> mk_type_error(not_a_known_message, Msg, [])
    end.


-compile({nowarn_unused_function,'v_msg_ProtobufClient.ClientMessage'/3}).
-dialyzer({nowarn_function,'v_msg_ProtobufClient.ClientMessage'/3}).
'v_msg_ProtobufClient.ClientMessage'(#'ProtobufClient.ClientMessage'{body
									 = F1},
				     Path, TrUserData) ->
    case F1 of
      undefined -> ok;
      {identification, OF1} ->
	  'v_msg_ProtobufClient.ClientIdentificationMessage'(OF1,
							     [identification,
							      body
							      | Path],
							     TrUserData);
      {subscribe, OF1} ->
	  'v_msg_ProtobufClient.ClientSubscribeMessage'(OF1,
							[subscribe, body
							 | Path],
							TrUserData);
      {unsubscribe, OF1} ->
	  'v_msg_ProtobufClient.ClientUnsubscribeMessage'(OF1,
							  [unsubscribe, body
							   | Path],
							  TrUserData);
      {webAuthentication, OF1} ->
	  'v_msg_ProtobufClient.WebAuthenticationMessage'(OF1,
							  [webAuthentication,
							   body
							   | Path],
							  TrUserData);
      {apiAuthentication, OF1} ->
	  'v_msg_ProtobufClient.APIAuthenticationMessage'(OF1,
							  [apiAuthentication,
							   body
							   | Path],
							  TrUserData);
      _ -> mk_type_error(invalid_oneof, F1, [body | Path])
    end,
    ok;
'v_msg_ProtobufClient.ClientMessage'(X, Path,
				     _TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtobufClient.ClientMessage'},
		  X, Path).

-compile({nowarn_unused_function,'v_msg_ProtobufClient.ClientIdentificationMessage'/3}).
-dialyzer({nowarn_function,'v_msg_ProtobufClient.ClientIdentificationMessage'/3}).
'v_msg_ProtobufClient.ClientIdentificationMessage'(#'ProtobufClient.ClientIdentificationMessage'{useragent
												     =
												     F1,
												 revision
												     =
												     F2,
												 integration
												     =
												     F3,
												 locale
												     =
												     F4,
												 subscriptions
												     =
												     F5},
						   Path, TrUserData) ->
    if F1 == undefined -> ok;
       true ->
	   v_type_string(F1, [useragent | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [revision | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true ->
	   v_type_string(F3, [integration | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true -> v_type_string(F4, [locale | Path], TrUserData)
    end,
    if is_list(F5) ->
	   _ = [v_type_string(Elem, [subscriptions | Path],
			      TrUserData)
		|| Elem <- F5],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F5,
			 [subscriptions | Path])
    end,
    ok;
'v_msg_ProtobufClient.ClientIdentificationMessage'(X,
						   Path, _TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtobufClient.ClientIdentificationMessage'},
		  X, Path).

-compile({nowarn_unused_function,'v_msg_ProtobufClient.WebAuthenticationMessage'/3}).
-dialyzer({nowarn_function,'v_msg_ProtobufClient.WebAuthenticationMessage'/3}).
'v_msg_ProtobufClient.WebAuthenticationMessage'(#'ProtobufClient.WebAuthenticationMessage'{identification
											       =
											       F1,
											   token
											       =
											       F2,
											   nonce
											       =
											       F3,
											   access_list
											       =
											       F4},
						Path, TrUserData) ->
    if F1 == undefined -> ok;
       true ->
	   'v_msg_ProtobufClient.ClientIdentificationMessage'(F1,
							      [identification
							       | Path],
							      TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [token | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_string(F3, [nonce | Path], TrUserData)
    end,
    if is_list(F4) ->
	   _ = [v_type_string(Elem, [access_list | Path],
			      TrUserData)
		|| Elem <- F4],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F4,
			 [access_list | Path])
    end,
    ok;
'v_msg_ProtobufClient.WebAuthenticationMessage'(X, Path,
						_TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtobufClient.WebAuthenticationMessage'},
		  X, Path).

-compile({nowarn_unused_function,'v_msg_ProtobufClient.TradeSessionAuth'/3}).
-dialyzer({nowarn_function,'v_msg_ProtobufClient.TradeSessionAuth'/3}).
'v_msg_ProtobufClient.TradeSessionAuth'(#'ProtobufClient.TradeSessionAuth'{api_key
									       =
									       F1,
									   api_secret
									       =
									       F2,
									   customer_id
									       =
									       F3,
									   key_passphrase
									       =
									       F4},
					Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [api_key | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true ->
	   v_type_string(F2, [api_secret | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true ->
	   v_type_string(F3, [customer_id | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true ->
	   v_type_string(F4, [key_passphrase | Path], TrUserData)
    end,
    ok;
'v_msg_ProtobufClient.TradeSessionAuth'(X, Path,
					_TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtobufClient.TradeSessionAuth'},
		  X, Path).

-compile({nowarn_unused_function,'v_msg_ProtobufClient.TradeSubscription'/3}).
-dialyzer({nowarn_function,'v_msg_ProtobufClient.TradeSubscription'/3}).
'v_msg_ProtobufClient.TradeSubscription'(#'ProtobufClient.TradeSubscription'{marketId
										 =
										 F1,
									     auth
										 =
										 F2},
					 Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [marketId | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true ->
	   'v_msg_ProtobufClient.TradeSessionAuth'(F2,
						   [auth | Path], TrUserData)
    end,
    ok;
'v_msg_ProtobufClient.TradeSubscription'(X, Path,
					 _TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtobufClient.TradeSubscription'},
		  X, Path).

-compile({nowarn_unused_function,'v_msg_ProtobufClient.StreamSubscription'/3}).
-dialyzer({nowarn_function,'v_msg_ProtobufClient.StreamSubscription'/3}).
'v_msg_ProtobufClient.StreamSubscription'(#'ProtobufClient.StreamSubscription'{resource
										   =
										   F1},
					  Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [resource | Path], TrUserData)
    end,
    ok;
'v_msg_ProtobufClient.StreamSubscription'(X, Path,
					  _TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtobufClient.StreamSubscription'},
		  X, Path).

-compile({nowarn_unused_function,'v_msg_ProtobufClient.ClientSubscription'/3}).
-dialyzer({nowarn_function,'v_msg_ProtobufClient.ClientSubscription'/3}).
'v_msg_ProtobufClient.ClientSubscription'(#'ProtobufClient.ClientSubscription'{body
										   =
										   F1},
					  Path, TrUserData) ->
    case F1 of
      undefined -> ok;
      {stream_subscription, OF1} ->
	  'v_msg_ProtobufClient.StreamSubscription'(OF1,
						    [stream_subscription, body
						     | Path],
						    TrUserData);
      {trade_subscription, OF1} ->
	  'v_msg_ProtobufClient.TradeSubscription'(OF1,
						   [trade_subscription, body
						    | Path],
						   TrUserData);
      _ -> mk_type_error(invalid_oneof, F1, [body | Path])
    end,
    ok;
'v_msg_ProtobufClient.ClientSubscription'(X, Path,
					  _TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtobufClient.ClientSubscription'},
		  X, Path).

-compile({nowarn_unused_function,'v_msg_ProtobufClient.APIAuthenticationMessage'/3}).
-dialyzer({nowarn_function,'v_msg_ProtobufClient.APIAuthenticationMessage'/3}).
'v_msg_ProtobufClient.APIAuthenticationMessage'(#'ProtobufClient.APIAuthenticationMessage'{token
											       =
											       F1,
											   nonce
											       =
											       F2,
											   api_key
											       =
											       F3,
											   source
											       =
											       F4,
											   version
											       =
											       F5,
											   subscriptions
											       =
											       F6,
											   client_subscriptions
											       =
											       F7},
						Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [token | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [nonce | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_string(F3, [api_key | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true ->
	   'v_enum_ProtobufClient.APIAuthenticationMessage.Source'(F4,
								   [source
								    | Path],
								   TrUserData)
    end,
    if F5 == undefined -> ok;
       true -> v_type_string(F5, [version | Path], TrUserData)
    end,
    if is_list(F6) ->
	   _ = [v_type_string(Elem, [subscriptions | Path],
			      TrUserData)
		|| Elem <- F6],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F6,
			 [subscriptions | Path])
    end,
    if is_list(F7) ->
	   _ = ['v_msg_ProtobufClient.ClientSubscription'(Elem,
							  [client_subscriptions
							   | Path],
							  TrUserData)
		|| Elem <- F7],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, 'ProtobufClient.ClientSubscription'}},
			 F7, [client_subscriptions | Path])
    end,
    ok;
'v_msg_ProtobufClient.APIAuthenticationMessage'(X, Path,
						_TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtobufClient.APIAuthenticationMessage'},
		  X, Path).

-compile({nowarn_unused_function,'v_msg_ProtobufClient.ClientSessionMessage.Session'/3}).
-dialyzer({nowarn_function,'v_msg_ProtobufClient.ClientSessionMessage.Session'/3}).
'v_msg_ProtobufClient.ClientSessionMessage.Session'(#'ProtobufClient.ClientSessionMessage.Session'{userId
												       =
												       F1,
												   expires
												       =
												       F2,
												   token
												       =
												       F3,
												   mfaToken
												       =
												       F4},
						    Path, TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [userId | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_int64(F2, [expires | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true -> v_type_string(F3, [token | Path], TrUserData)
    end,
    if F4 == undefined -> ok;
       true -> v_type_string(F4, [mfaToken | Path], TrUserData)
    end,
    ok;
'v_msg_ProtobufClient.ClientSessionMessage.Session'(X,
						    Path, _TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtobufClient.ClientSessionMessage.Session'},
		  X, Path).

-compile({nowarn_unused_function,'v_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'/3}).
-dialyzer({nowarn_function,'v_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'/3}).
'v_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(#'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'{exchange
																       =
																       F1,
																   token
																       =
																       F2,
																   expiration
																       =
																       F3},
								    Path,
								    TrUserData) ->
    if F1 == undefined -> ok;
       true -> v_type_string(F1, [exchange | Path], TrUserData)
    end,
    if F2 == undefined -> ok;
       true -> v_type_string(F2, [token | Path], TrUserData)
    end,
    if F3 == undefined -> ok;
       true ->
	   v_type_int64(F3, [expiration | Path], TrUserData)
    end,
    ok;
'v_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(X,
								    Path,
								    _TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'},
		  X, Path).

-compile({nowarn_unused_function,'v_msg_ProtobufClient.ClientSessionMessage'/3}).
-dialyzer({nowarn_function,'v_msg_ProtobufClient.ClientSessionMessage'/3}).
'v_msg_ProtobufClient.ClientSessionMessage'(#'ProtobufClient.ClientSessionMessage'{'SessionConfig'
										       =
										       F1},
					    Path, TrUserData) ->
    case F1 of
      undefined -> ok;
      {session, OF1} ->
	  'v_msg_ProtobufClient.ClientSessionMessage.Session'(OF1,
							      [session,
							       'SessionConfig'
							       | Path],
							      TrUserData);
      {anonymousTradingSession, OF1} ->
	  'v_msg_ProtobufClient.ClientSessionMessage.AnonymousTradingSession'(OF1,
									      [anonymousTradingSession,
									       'SessionConfig'
									       | Path],
									      TrUserData);
      _ ->
	  mk_type_error(invalid_oneof, F1,
			['SessionConfig' | Path])
    end,
    ok;
'v_msg_ProtobufClient.ClientSessionMessage'(X, Path,
					    _TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtobufClient.ClientSessionMessage'},
		  X, Path).

-compile({nowarn_unused_function,'v_msg_ProtobufClient.ClientSubscribeMessage'/3}).
-dialyzer({nowarn_function,'v_msg_ProtobufClient.ClientSubscribeMessage'/3}).
'v_msg_ProtobufClient.ClientSubscribeMessage'(#'ProtobufClient.ClientSubscribeMessage'{subscriptionKeys
											   =
											   F1,
										       subscriptions
											   =
											   F2},
					      Path, TrUserData) ->
    if is_list(F1) ->
	   _ = [v_type_string(Elem, [subscriptionKeys | Path],
			      TrUserData)
		|| Elem <- F1],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F1,
			 [subscriptionKeys | Path])
    end,
    if is_list(F2) ->
	   _ = ['v_msg_ProtobufClient.ClientSubscription'(Elem,
							  [subscriptions
							   | Path],
							  TrUserData)
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, 'ProtobufClient.ClientSubscription'}},
			 F2, [subscriptions | Path])
    end,
    ok;
'v_msg_ProtobufClient.ClientSubscribeMessage'(X, Path,
					      _TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtobufClient.ClientSubscribeMessage'},
		  X, Path).

-compile({nowarn_unused_function,'v_msg_ProtobufClient.ClientUnsubscribeMessage'/3}).
-dialyzer({nowarn_function,'v_msg_ProtobufClient.ClientUnsubscribeMessage'/3}).
'v_msg_ProtobufClient.ClientUnsubscribeMessage'(#'ProtobufClient.ClientUnsubscribeMessage'{subscriptionKeys
											       =
											       F1,
											   subscriptions
											       =
											       F2},
						Path, TrUserData) ->
    if is_list(F1) ->
	   _ = [v_type_string(Elem, [subscriptionKeys | Path],
			      TrUserData)
		|| Elem <- F1],
	   ok;
       true ->
	   mk_type_error({invalid_list_of, string}, F1,
			 [subscriptionKeys | Path])
    end,
    if is_list(F2) ->
	   _ = ['v_msg_ProtobufClient.ClientSubscription'(Elem,
							  [subscriptions
							   | Path],
							  TrUserData)
		|| Elem <- F2],
	   ok;
       true ->
	   mk_type_error({invalid_list_of,
			  {msg, 'ProtobufClient.ClientSubscription'}},
			 F2, [subscriptions | Path])
    end,
    ok;
'v_msg_ProtobufClient.ClientUnsubscribeMessage'(X, Path,
						_TrUserData) ->
    mk_type_error({expected_msg,
		   'ProtobufClient.ClientUnsubscribeMessage'},
		  X, Path).

-compile({nowarn_unused_function,'v_enum_ProtobufClient.APIAuthenticationMessage.Source'/3}).
-dialyzer({nowarn_function,'v_enum_ProtobufClient.APIAuthenticationMessage.Source'/3}).
'v_enum_ProtobufClient.APIAuthenticationMessage.Source'('UNKNOWN',
							_Path, _TrUserData) ->
    ok;
'v_enum_ProtobufClient.APIAuthenticationMessage.Source'('GOLANG_SDK',
							_Path, _TrUserData) ->
    ok;
'v_enum_ProtobufClient.APIAuthenticationMessage.Source'('JAVASCRIPT_SDK',
							_Path, _TrUserData) ->
    ok;
'v_enum_ProtobufClient.APIAuthenticationMessage.Source'('NODE_SDK',
							_Path, _TrUserData) ->
    ok;
'v_enum_ProtobufClient.APIAuthenticationMessage.Source'('RUST_SDK',
							_Path, _TrUserData) ->
    ok;
'v_enum_ProtobufClient.APIAuthenticationMessage.Source'('CW_WEB',
							_Path, _TrUserData) ->
    ok;
'v_enum_ProtobufClient.APIAuthenticationMessage.Source'(V,
							Path, TrUserData)
    when is_integer(V) ->
    v_type_sint32(V, Path, TrUserData);
'v_enum_ProtobufClient.APIAuthenticationMessage.Source'(X,
							Path, _TrUserData) ->
    mk_type_error({invalid_enum,
		   'ProtobufClient.APIAuthenticationMessage.Source'},
		  X, Path).

-compile({nowarn_unused_function,v_type_sint32/3}).
-dialyzer({nowarn_function,v_type_sint32/3}).
v_type_sint32(N, _Path, _TrUserData)
    when -2147483648 =< N, N =< 2147483647 ->
    ok;
v_type_sint32(N, Path, _TrUserData)
    when is_integer(N) ->
    mk_type_error({value_out_of_range, sint32, signed, 32},
		  N, Path);
v_type_sint32(X, Path, _TrUserData) ->
    mk_type_error({bad_integer, sint32, signed, 32}, X,
		  Path).

-compile({nowarn_unused_function,v_type_int64/3}).
-dialyzer({nowarn_function,v_type_int64/3}).
v_type_int64(N, _Path, _TrUserData)
    when -9223372036854775808 =< N,
	 N =< 9223372036854775807 ->
    ok;
v_type_int64(N, Path, _TrUserData) when is_integer(N) ->
    mk_type_error({value_out_of_range, int64, signed, 64},
		  N, Path);
v_type_int64(X, Path, _TrUserData) ->
    mk_type_error({bad_integer, int64, signed, 64}, X,
		  Path).

-compile({nowarn_unused_function,v_type_string/3}).
-dialyzer({nowarn_function,v_type_string/3}).
v_type_string(S, Path, _TrUserData)
    when is_list(S); is_binary(S) ->
    try unicode:characters_to_binary(S) of
      B when is_binary(B) -> ok;
      {error, _, _} ->
	  mk_type_error(bad_unicode_string, S, Path)
    catch
      error:badarg ->
	  mk_type_error(bad_unicode_string, S, Path)
    end;
v_type_string(X, Path, _TrUserData) ->
    mk_type_error(bad_unicode_string, X, Path).

-compile({nowarn_unused_function,mk_type_error/3}).
-spec mk_type_error(_, _, list()) -> no_return().
mk_type_error(Error, ValueSeen, Path) ->
    Path2 = prettify_path(Path),
    erlang:error({gpb_type_error,
		  {Error, [{value, ValueSeen}, {path, Path2}]}}).


-compile({nowarn_unused_function,prettify_path/1}).
-dialyzer({nowarn_function,prettify_path/1}).
prettify_path([]) -> top_level;
prettify_path(PathR) ->
    list_to_atom(lists:append(lists:join(".",
					 lists:map(fun atom_to_list/1,
						   lists:reverse(PathR))))).


-compile({nowarn_unused_function,id/2}).
-compile({inline,id/2}).
id(X, _TrUserData) -> X.

-compile({nowarn_unused_function,v_ok/3}).
-compile({inline,v_ok/3}).
v_ok(_Value, _Path, _TrUserData) -> ok.

-compile({nowarn_unused_function,m_overwrite/3}).
-compile({inline,m_overwrite/3}).
m_overwrite(_Prev, New, _TrUserData) -> New.

-compile({nowarn_unused_function,cons/3}).
-compile({inline,cons/3}).
cons(Elem, Acc, _TrUserData) -> [Elem | Acc].

-compile({nowarn_unused_function,lists_reverse/2}).
-compile({inline,lists_reverse/2}).
'lists_reverse'(L, _TrUserData) -> lists:reverse(L).
-compile({nowarn_unused_function,'erlang_++'/3}).
-compile({inline,'erlang_++'/3}).
'erlang_++'(A, B, _TrUserData) -> A ++ B.

get_msg_defs() ->
    [{{enum,
       'ProtobufClient.APIAuthenticationMessage.Source'},
      [{'UNKNOWN', 0}, {'GOLANG_SDK', 1},
       {'JAVASCRIPT_SDK', 2}, {'NODE_SDK', 3}, {'RUST_SDK', 5},
       {'CW_WEB', 4}]},
     {{msg, 'ProtobufClient.ClientMessage'},
      [#gpb_oneof{name = body, rnum = 2,
		  fields =
		      [#field{name = identification, fnum = 1, rnum = 2,
			      type =
				  {msg,
				   'ProtobufClient.ClientIdentificationMessage'},
			      occurrence = optional, opts = []},
		       #field{name = subscribe, fnum = 2, rnum = 2,
			      type =
				  {msg,
				   'ProtobufClient.ClientSubscribeMessage'},
			      occurrence = optional, opts = []},
		       #field{name = unsubscribe, fnum = 3, rnum = 2,
			      type =
				  {msg,
				   'ProtobufClient.ClientUnsubscribeMessage'},
			      occurrence = optional, opts = []},
		       #field{name = webAuthentication, fnum = 4, rnum = 2,
			      type =
				  {msg,
				   'ProtobufClient.WebAuthenticationMessage'},
			      occurrence = optional, opts = []},
		       #field{name = apiAuthentication, fnum = 5, rnum = 2,
			      type =
				  {msg,
				   'ProtobufClient.APIAuthenticationMessage'},
			      occurrence = optional, opts = []}]}]},
     {{msg, 'ProtobufClient.ClientIdentificationMessage'},
      [#field{name = useragent, fnum = 1, rnum = 2,
	      type = string, occurrence = optional, opts = []},
       #field{name = revision, fnum = 2, rnum = 3,
	      type = string, occurrence = optional, opts = []},
       #field{name = integration, fnum = 3, rnum = 4,
	      type = string, occurrence = optional, opts = []},
       #field{name = locale, fnum = 4, rnum = 5, type = string,
	      occurrence = optional, opts = []},
       #field{name = subscriptions, fnum = 5, rnum = 6,
	      type = string, occurrence = repeated, opts = []}]},
     {{msg, 'ProtobufClient.WebAuthenticationMessage'},
      [#field{name = identification, fnum = 1, rnum = 2,
	      type =
		  {msg, 'ProtobufClient.ClientIdentificationMessage'},
	      occurrence = optional, opts = []},
       #field{name = token, fnum = 2, rnum = 3, type = string,
	      occurrence = optional, opts = []},
       #field{name = nonce, fnum = 3, rnum = 4, type = string,
	      occurrence = optional, opts = []},
       #field{name = access_list, fnum = 4, rnum = 5,
	      type = string, occurrence = repeated, opts = []}]},
     {{msg, 'ProtobufClient.TradeSessionAuth'},
      [#field{name = api_key, fnum = 1, rnum = 2,
	      type = string, occurrence = optional, opts = []},
       #field{name = api_secret, fnum = 2, rnum = 3,
	      type = string, occurrence = optional, opts = []},
       #field{name = customer_id, fnum = 3, rnum = 4,
	      type = string, occurrence = optional, opts = []},
       #field{name = key_passphrase, fnum = 4, rnum = 5,
	      type = string, occurrence = optional, opts = []}]},
     {{msg, 'ProtobufClient.TradeSubscription'},
      [#field{name = marketId, fnum = 1, rnum = 2,
	      type = string, occurrence = optional, opts = []},
       #field{name = auth, fnum = 2, rnum = 3,
	      type = {msg, 'ProtobufClient.TradeSessionAuth'},
	      occurrence = optional, opts = []}]},
     {{msg, 'ProtobufClient.StreamSubscription'},
      [#field{name = resource, fnum = 1, rnum = 2,
	      type = string, occurrence = optional, opts = []}]},
     {{msg, 'ProtobufClient.ClientSubscription'},
      [#gpb_oneof{name = body, rnum = 2,
		  fields =
		      [#field{name = stream_subscription, fnum = 1, rnum = 2,
			      type = {msg, 'ProtobufClient.StreamSubscription'},
			      occurrence = optional, opts = []},
		       #field{name = trade_subscription, fnum = 2, rnum = 2,
			      type = {msg, 'ProtobufClient.TradeSubscription'},
			      occurrence = optional, opts = []}]}]},
     {{msg, 'ProtobufClient.APIAuthenticationMessage'},
      [#field{name = token, fnum = 1, rnum = 2, type = string,
	      occurrence = optional, opts = []},
       #field{name = nonce, fnum = 2, rnum = 3, type = string,
	      occurrence = optional, opts = []},
       #field{name = api_key, fnum = 3, rnum = 4,
	      type = string, occurrence = optional, opts = []},
       #field{name = source, fnum = 4, rnum = 5,
	      type =
		  {enum,
		   'ProtobufClient.APIAuthenticationMessage.Source'},
	      occurrence = optional, opts = []},
       #field{name = version, fnum = 5, rnum = 6,
	      type = string, occurrence = optional, opts = []},
       #field{name = subscriptions, fnum = 6, rnum = 7,
	      type = string, occurrence = repeated,
	      opts = [deprecated]},
       #field{name = client_subscriptions, fnum = 7, rnum = 8,
	      type = {msg, 'ProtobufClient.ClientSubscription'},
	      occurrence = repeated, opts = []}]},
     {{msg, 'ProtobufClient.ClientSessionMessage.Session'},
      [#field{name = userId, fnum = 1, rnum = 2,
	      type = string, occurrence = optional, opts = []},
       #field{name = expires, fnum = 2, rnum = 3, type = int64,
	      occurrence = optional, opts = []},
       #field{name = token, fnum = 3, rnum = 4, type = string,
	      occurrence = optional, opts = []},
       #field{name = mfaToken, fnum = 4, rnum = 5,
	      type = string, occurrence = optional, opts = []}]},
     {{msg,
       'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'},
      [#field{name = exchange, fnum = 1, rnum = 2,
	      type = string, occurrence = optional, opts = []},
       #field{name = token, fnum = 2, rnum = 3, type = string,
	      occurrence = optional, opts = []},
       #field{name = expiration, fnum = 3, rnum = 4,
	      type = int64, occurrence = optional, opts = []}]},
     {{msg, 'ProtobufClient.ClientSessionMessage'},
      [#gpb_oneof{name = 'SessionConfig', rnum = 2,
		  fields =
		      [#field{name = session, fnum = 1, rnum = 2,
			      type =
				  {msg,
				   'ProtobufClient.ClientSessionMessage.Session'},
			      occurrence = optional, opts = []},
		       #field{name = anonymousTradingSession, fnum = 2,
			      rnum = 2,
			      type =
				  {msg,
				   'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'},
			      occurrence = optional, opts = []}]}]},
     {{msg, 'ProtobufClient.ClientSubscribeMessage'},
      [#field{name = subscriptionKeys, fnum = 1, rnum = 2,
	      type = string, occurrence = repeated,
	      opts = [deprecated]},
       #field{name = subscriptions, fnum = 2, rnum = 3,
	      type = {msg, 'ProtobufClient.ClientSubscription'},
	      occurrence = repeated, opts = []}]},
     {{msg, 'ProtobufClient.ClientUnsubscribeMessage'},
      [#field{name = subscriptionKeys, fnum = 1, rnum = 2,
	      type = string, occurrence = repeated,
	      opts = [deprecated]},
       #field{name = subscriptions, fnum = 2, rnum = 3,
	      type = {msg, 'ProtobufClient.ClientSubscription'},
	      occurrence = repeated, opts = []}]}].


get_msg_names() ->
    ['ProtobufClient.ClientMessage',
     'ProtobufClient.ClientIdentificationMessage',
     'ProtobufClient.WebAuthenticationMessage',
     'ProtobufClient.TradeSessionAuth',
     'ProtobufClient.TradeSubscription',
     'ProtobufClient.StreamSubscription',
     'ProtobufClient.ClientSubscription',
     'ProtobufClient.APIAuthenticationMessage',
     'ProtobufClient.ClientSessionMessage.Session',
     'ProtobufClient.ClientSessionMessage.AnonymousTradingSession',
     'ProtobufClient.ClientSessionMessage',
     'ProtobufClient.ClientSubscribeMessage',
     'ProtobufClient.ClientUnsubscribeMessage'].


get_group_names() -> [].


get_msg_or_group_names() ->
    ['ProtobufClient.ClientMessage',
     'ProtobufClient.ClientIdentificationMessage',
     'ProtobufClient.WebAuthenticationMessage',
     'ProtobufClient.TradeSessionAuth',
     'ProtobufClient.TradeSubscription',
     'ProtobufClient.StreamSubscription',
     'ProtobufClient.ClientSubscription',
     'ProtobufClient.APIAuthenticationMessage',
     'ProtobufClient.ClientSessionMessage.Session',
     'ProtobufClient.ClientSessionMessage.AnonymousTradingSession',
     'ProtobufClient.ClientSessionMessage',
     'ProtobufClient.ClientSubscribeMessage',
     'ProtobufClient.ClientUnsubscribeMessage'].


get_enum_names() ->
    ['ProtobufClient.APIAuthenticationMessage.Source'].


fetch_msg_def(MsgName) ->
    case find_msg_def(MsgName) of
      Fs when is_list(Fs) -> Fs;
      error -> erlang:error({no_such_msg, MsgName})
    end.


fetch_enum_def(EnumName) ->
    case find_enum_def(EnumName) of
      Es when is_list(Es) -> Es;
      error -> erlang:error({no_such_enum, EnumName})
    end.


find_msg_def('ProtobufClient.ClientMessage') ->
    [#gpb_oneof{name = body, rnum = 2,
		fields =
		    [#field{name = identification, fnum = 1, rnum = 2,
			    type =
				{msg,
				 'ProtobufClient.ClientIdentificationMessage'},
			    occurrence = optional, opts = []},
		     #field{name = subscribe, fnum = 2, rnum = 2,
			    type =
				{msg, 'ProtobufClient.ClientSubscribeMessage'},
			    occurrence = optional, opts = []},
		     #field{name = unsubscribe, fnum = 3, rnum = 2,
			    type =
				{msg,
				 'ProtobufClient.ClientUnsubscribeMessage'},
			    occurrence = optional, opts = []},
		     #field{name = webAuthentication, fnum = 4, rnum = 2,
			    type =
				{msg,
				 'ProtobufClient.WebAuthenticationMessage'},
			    occurrence = optional, opts = []},
		     #field{name = apiAuthentication, fnum = 5, rnum = 2,
			    type =
				{msg,
				 'ProtobufClient.APIAuthenticationMessage'},
			    occurrence = optional, opts = []}]}];
find_msg_def('ProtobufClient.ClientIdentificationMessage') ->
    [#field{name = useragent, fnum = 1, rnum = 2,
	    type = string, occurrence = optional, opts = []},
     #field{name = revision, fnum = 2, rnum = 3,
	    type = string, occurrence = optional, opts = []},
     #field{name = integration, fnum = 3, rnum = 4,
	    type = string, occurrence = optional, opts = []},
     #field{name = locale, fnum = 4, rnum = 5, type = string,
	    occurrence = optional, opts = []},
     #field{name = subscriptions, fnum = 5, rnum = 6,
	    type = string, occurrence = repeated, opts = []}];
find_msg_def('ProtobufClient.WebAuthenticationMessage') ->
    [#field{name = identification, fnum = 1, rnum = 2,
	    type =
		{msg, 'ProtobufClient.ClientIdentificationMessage'},
	    occurrence = optional, opts = []},
     #field{name = token, fnum = 2, rnum = 3, type = string,
	    occurrence = optional, opts = []},
     #field{name = nonce, fnum = 3, rnum = 4, type = string,
	    occurrence = optional, opts = []},
     #field{name = access_list, fnum = 4, rnum = 5,
	    type = string, occurrence = repeated, opts = []}];
find_msg_def('ProtobufClient.TradeSessionAuth') ->
    [#field{name = api_key, fnum = 1, rnum = 2,
	    type = string, occurrence = optional, opts = []},
     #field{name = api_secret, fnum = 2, rnum = 3,
	    type = string, occurrence = optional, opts = []},
     #field{name = customer_id, fnum = 3, rnum = 4,
	    type = string, occurrence = optional, opts = []},
     #field{name = key_passphrase, fnum = 4, rnum = 5,
	    type = string, occurrence = optional, opts = []}];
find_msg_def('ProtobufClient.TradeSubscription') ->
    [#field{name = marketId, fnum = 1, rnum = 2,
	    type = string, occurrence = optional, opts = []},
     #field{name = auth, fnum = 2, rnum = 3,
	    type = {msg, 'ProtobufClient.TradeSessionAuth'},
	    occurrence = optional, opts = []}];
find_msg_def('ProtobufClient.StreamSubscription') ->
    [#field{name = resource, fnum = 1, rnum = 2,
	    type = string, occurrence = optional, opts = []}];
find_msg_def('ProtobufClient.ClientSubscription') ->
    [#gpb_oneof{name = body, rnum = 2,
		fields =
		    [#field{name = stream_subscription, fnum = 1, rnum = 2,
			    type = {msg, 'ProtobufClient.StreamSubscription'},
			    occurrence = optional, opts = []},
		     #field{name = trade_subscription, fnum = 2, rnum = 2,
			    type = {msg, 'ProtobufClient.TradeSubscription'},
			    occurrence = optional, opts = []}]}];
find_msg_def('ProtobufClient.APIAuthenticationMessage') ->
    [#field{name = token, fnum = 1, rnum = 2, type = string,
	    occurrence = optional, opts = []},
     #field{name = nonce, fnum = 2, rnum = 3, type = string,
	    occurrence = optional, opts = []},
     #field{name = api_key, fnum = 3, rnum = 4,
	    type = string, occurrence = optional, opts = []},
     #field{name = source, fnum = 4, rnum = 5,
	    type =
		{enum,
		 'ProtobufClient.APIAuthenticationMessage.Source'},
	    occurrence = optional, opts = []},
     #field{name = version, fnum = 5, rnum = 6,
	    type = string, occurrence = optional, opts = []},
     #field{name = subscriptions, fnum = 6, rnum = 7,
	    type = string, occurrence = repeated,
	    opts = [deprecated]},
     #field{name = client_subscriptions, fnum = 7, rnum = 8,
	    type = {msg, 'ProtobufClient.ClientSubscription'},
	    occurrence = repeated, opts = []}];
find_msg_def('ProtobufClient.ClientSessionMessage.Session') ->
    [#field{name = userId, fnum = 1, rnum = 2,
	    type = string, occurrence = optional, opts = []},
     #field{name = expires, fnum = 2, rnum = 3, type = int64,
	    occurrence = optional, opts = []},
     #field{name = token, fnum = 3, rnum = 4, type = string,
	    occurrence = optional, opts = []},
     #field{name = mfaToken, fnum = 4, rnum = 5,
	    type = string, occurrence = optional, opts = []}];
find_msg_def('ProtobufClient.ClientSessionMessage.AnonymousTradingSession') ->
    [#field{name = exchange, fnum = 1, rnum = 2,
	    type = string, occurrence = optional, opts = []},
     #field{name = token, fnum = 2, rnum = 3, type = string,
	    occurrence = optional, opts = []},
     #field{name = expiration, fnum = 3, rnum = 4,
	    type = int64, occurrence = optional, opts = []}];
find_msg_def('ProtobufClient.ClientSessionMessage') ->
    [#gpb_oneof{name = 'SessionConfig', rnum = 2,
		fields =
		    [#field{name = session, fnum = 1, rnum = 2,
			    type =
				{msg,
				 'ProtobufClient.ClientSessionMessage.Session'},
			    occurrence = optional, opts = []},
		     #field{name = anonymousTradingSession, fnum = 2,
			    rnum = 2,
			    type =
				{msg,
				 'ProtobufClient.ClientSessionMessage.AnonymousTradingSession'},
			    occurrence = optional, opts = []}]}];
find_msg_def('ProtobufClient.ClientSubscribeMessage') ->
    [#field{name = subscriptionKeys, fnum = 1, rnum = 2,
	    type = string, occurrence = repeated,
	    opts = [deprecated]},
     #field{name = subscriptions, fnum = 2, rnum = 3,
	    type = {msg, 'ProtobufClient.ClientSubscription'},
	    occurrence = repeated, opts = []}];
find_msg_def('ProtobufClient.ClientUnsubscribeMessage') ->
    [#field{name = subscriptionKeys, fnum = 1, rnum = 2,
	    type = string, occurrence = repeated,
	    opts = [deprecated]},
     #field{name = subscriptions, fnum = 2, rnum = 3,
	    type = {msg, 'ProtobufClient.ClientSubscription'},
	    occurrence = repeated, opts = []}];
find_msg_def(_) -> error.


find_enum_def('ProtobufClient.APIAuthenticationMessage.Source') ->
    [{'UNKNOWN', 0}, {'GOLANG_SDK', 1},
     {'JAVASCRIPT_SDK', 2}, {'NODE_SDK', 3}, {'RUST_SDK', 5},
     {'CW_WEB', 4}];
find_enum_def(_) -> error.


enum_symbol_by_value('ProtobufClient.APIAuthenticationMessage.Source',
		     Value) ->
    'enum_symbol_by_value_ProtobufClient.APIAuthenticationMessage.Source'(Value).


enum_value_by_symbol('ProtobufClient.APIAuthenticationMessage.Source',
		     Sym) ->
    'enum_value_by_symbol_ProtobufClient.APIAuthenticationMessage.Source'(Sym).


'enum_symbol_by_value_ProtobufClient.APIAuthenticationMessage.Source'(0) ->
    'UNKNOWN';
'enum_symbol_by_value_ProtobufClient.APIAuthenticationMessage.Source'(1) ->
    'GOLANG_SDK';
'enum_symbol_by_value_ProtobufClient.APIAuthenticationMessage.Source'(2) ->
    'JAVASCRIPT_SDK';
'enum_symbol_by_value_ProtobufClient.APIAuthenticationMessage.Source'(3) ->
    'NODE_SDK';
'enum_symbol_by_value_ProtobufClient.APIAuthenticationMessage.Source'(5) ->
    'RUST_SDK';
'enum_symbol_by_value_ProtobufClient.APIAuthenticationMessage.Source'(4) ->
    'CW_WEB'.


'enum_value_by_symbol_ProtobufClient.APIAuthenticationMessage.Source'('UNKNOWN') ->
    0;
'enum_value_by_symbol_ProtobufClient.APIAuthenticationMessage.Source'('GOLANG_SDK') ->
    1;
'enum_value_by_symbol_ProtobufClient.APIAuthenticationMessage.Source'('JAVASCRIPT_SDK') ->
    2;
'enum_value_by_symbol_ProtobufClient.APIAuthenticationMessage.Source'('NODE_SDK') ->
    3;
'enum_value_by_symbol_ProtobufClient.APIAuthenticationMessage.Source'('RUST_SDK') ->
    5;
'enum_value_by_symbol_ProtobufClient.APIAuthenticationMessage.Source'('CW_WEB') ->
    4.


get_service_names() -> [].


get_service_def(_) -> error.


get_rpc_names(_) -> error.


find_rpc_def(_, _) -> error.



-spec fetch_rpc_def(_, _) -> no_return().
fetch_rpc_def(ServiceName, RpcName) ->
    erlang:error({no_such_rpc, ServiceName, RpcName}).


%% Convert a a fully qualified (ie with package name) service name
%% as a binary to a service name as an atom.
-spec fqbin_to_service_name(_) -> no_return().
fqbin_to_service_name(X) ->
    error({gpb_error, {badservice, X}}).


%% Convert a service name as an atom to a fully qualified
%% (ie with package name) name as a binary.
-spec service_name_to_fqbin(_) -> no_return().
service_name_to_fqbin(X) ->
    error({gpb_error, {badservice, X}}).


%% Convert a a fully qualified (ie with package name) service name
%% and an rpc name, both as binaries to a service name and an rpc
%% name, as atoms.
-spec fqbins_to_service_and_rpc_name(_, _) -> no_return().
fqbins_to_service_and_rpc_name(S, R) ->
    error({gpb_error, {badservice_or_rpc, {S, R}}}).


%% Convert a service name and an rpc name, both as atoms,
%% to a fully qualified (ie with package name) service name and
%% an rpc name as binaries.
-spec service_and_rpc_name_to_fqbins(_, _) -> no_return().
service_and_rpc_name_to_fqbins(S, R) ->
    error({gpb_error, {badservice_or_rpc, {S, R}}}).


fqbin_to_msg_name(<<"ProtobufClient.ClientMessage">>) ->
    'ProtobufClient.ClientMessage';
fqbin_to_msg_name(<<"ProtobufClient.ClientIdentificationMessage">>) ->
    'ProtobufClient.ClientIdentificationMessage';
fqbin_to_msg_name(<<"ProtobufClient.WebAuthenticationMessage">>) ->
    'ProtobufClient.WebAuthenticationMessage';
fqbin_to_msg_name(<<"ProtobufClient.TradeSessionAuth">>) ->
    'ProtobufClient.TradeSessionAuth';
fqbin_to_msg_name(<<"ProtobufClient.TradeSubscription">>) ->
    'ProtobufClient.TradeSubscription';
fqbin_to_msg_name(<<"ProtobufClient.StreamSubscription">>) ->
    'ProtobufClient.StreamSubscription';
fqbin_to_msg_name(<<"ProtobufClient.ClientSubscription">>) ->
    'ProtobufClient.ClientSubscription';
fqbin_to_msg_name(<<"ProtobufClient.APIAuthenticationMessage">>) ->
    'ProtobufClient.APIAuthenticationMessage';
fqbin_to_msg_name(<<"ProtobufClient.ClientSessionMessage.Session">>) ->
    'ProtobufClient.ClientSessionMessage.Session';
fqbin_to_msg_name(<<"ProtobufClient.ClientSessionMessage.AnonymousTradingSession">>) ->
    'ProtobufClient.ClientSessionMessage.AnonymousTradingSession';
fqbin_to_msg_name(<<"ProtobufClient.ClientSessionMessage">>) ->
    'ProtobufClient.ClientSessionMessage';
fqbin_to_msg_name(<<"ProtobufClient.ClientSubscribeMessage">>) ->
    'ProtobufClient.ClientSubscribeMessage';
fqbin_to_msg_name(<<"ProtobufClient.ClientUnsubscribeMessage">>) ->
    'ProtobufClient.ClientUnsubscribeMessage';
fqbin_to_msg_name(E) -> error({gpb_error, {badmsg, E}}).


msg_name_to_fqbin('ProtobufClient.ClientMessage') ->
    <<"ProtobufClient.ClientMessage">>;
msg_name_to_fqbin('ProtobufClient.ClientIdentificationMessage') ->
    <<"ProtobufClient.ClientIdentificationMessage">>;
msg_name_to_fqbin('ProtobufClient.WebAuthenticationMessage') ->
    <<"ProtobufClient.WebAuthenticationMessage">>;
msg_name_to_fqbin('ProtobufClient.TradeSessionAuth') ->
    <<"ProtobufClient.TradeSessionAuth">>;
msg_name_to_fqbin('ProtobufClient.TradeSubscription') ->
    <<"ProtobufClient.TradeSubscription">>;
msg_name_to_fqbin('ProtobufClient.StreamSubscription') ->
    <<"ProtobufClient.StreamSubscription">>;
msg_name_to_fqbin('ProtobufClient.ClientSubscription') ->
    <<"ProtobufClient.ClientSubscription">>;
msg_name_to_fqbin('ProtobufClient.APIAuthenticationMessage') ->
    <<"ProtobufClient.APIAuthenticationMessage">>;
msg_name_to_fqbin('ProtobufClient.ClientSessionMessage.Session') ->
    <<"ProtobufClient.ClientSessionMessage.Session">>;
msg_name_to_fqbin('ProtobufClient.ClientSessionMessage.AnonymousTradingSession') ->
    <<"ProtobufClient.ClientSessionMessage.AnonymousTradingSession">>;
msg_name_to_fqbin('ProtobufClient.ClientSessionMessage') ->
    <<"ProtobufClient.ClientSessionMessage">>;
msg_name_to_fqbin('ProtobufClient.ClientSubscribeMessage') ->
    <<"ProtobufClient.ClientSubscribeMessage">>;
msg_name_to_fqbin('ProtobufClient.ClientUnsubscribeMessage') ->
    <<"ProtobufClient.ClientUnsubscribeMessage">>;
msg_name_to_fqbin(E) -> error({gpb_error, {badmsg, E}}).


fqbin_to_enum_name(<<"ProtobufClient.APIAuthenticationMessage.Source">>) ->
    'ProtobufClient.APIAuthenticationMessage.Source';
fqbin_to_enum_name(E) ->
    error({gpb_error, {badenum, E}}).


enum_name_to_fqbin('ProtobufClient.APIAuthenticationMessage.Source') ->
    <<"ProtobufClient.APIAuthenticationMessage.Source">>;
enum_name_to_fqbin(E) ->
    error({gpb_error, {badenum, E}}).


get_package_name() -> 'ProtobufClient'.


%% Whether or not the message names
%% are prepended with package name or not.
uses_packages() -> true.


source_basename() -> "client.proto".


%% Retrieve all proto file names, also imported ones.
%% The order is top-down. The first element is always the main
%% source file. The files are returned with extension,
%% see get_all_proto_names/0 for a version that returns
%% the basenames sans extension
get_all_source_basenames() -> ["client.proto"].


%% Retrieve all proto file names, also imported ones.
%% The order is top-down. The first element is always the main
%% source file. The files are returned sans .proto extension,
%% to make it easier to use them with the various get_xyz_containment
%% functions.
get_all_proto_names() -> ["client"].


get_msg_containment("client") ->
    ['ProtobufClient.APIAuthenticationMessage',
     'ProtobufClient.ClientIdentificationMessage',
     'ProtobufClient.ClientMessage',
     'ProtobufClient.ClientSessionMessage',
     'ProtobufClient.ClientSessionMessage.AnonymousTradingSession',
     'ProtobufClient.ClientSessionMessage.Session',
     'ProtobufClient.ClientSubscribeMessage',
     'ProtobufClient.ClientSubscription',
     'ProtobufClient.ClientUnsubscribeMessage',
     'ProtobufClient.StreamSubscription',
     'ProtobufClient.TradeSessionAuth',
     'ProtobufClient.TradeSubscription',
     'ProtobufClient.WebAuthenticationMessage'];
get_msg_containment(P) ->
    error({gpb_error, {badproto, P}}).


get_pkg_containment("client") -> 'ProtobufClient';
get_pkg_containment(P) ->
    error({gpb_error, {badproto, P}}).


get_service_containment("client") -> [];
get_service_containment(P) ->
    error({gpb_error, {badproto, P}}).


get_rpc_containment("client") -> [];
get_rpc_containment(P) ->
    error({gpb_error, {badproto, P}}).


get_enum_containment("client") ->
    ['ProtobufClient.APIAuthenticationMessage.Source'];
get_enum_containment(P) ->
    error({gpb_error, {badproto, P}}).


get_proto_by_msg_name_as_fqbin(<<"ProtobufClient.WebAuthenticationMessage">>) -> "client";
get_proto_by_msg_name_as_fqbin(<<"ProtobufClient.ClientUnsubscribeMessage">>) -> "client";
get_proto_by_msg_name_as_fqbin(<<"ProtobufClient.ClientSubscribeMessage">>) -> "client";
get_proto_by_msg_name_as_fqbin(<<"ProtobufClient.ClientSessionMessage">>) -> "client";
get_proto_by_msg_name_as_fqbin(<<"ProtobufClient.ClientMessage">>) -> "client";
get_proto_by_msg_name_as_fqbin(<<"ProtobufClient.ClientIdentificationMessage">>) -> "client";
get_proto_by_msg_name_as_fqbin(<<"ProtobufClient.APIAuthenticationMessage">>) -> "client";
get_proto_by_msg_name_as_fqbin(<<"ProtobufClient.TradeSessionAuth">>) -> "client";
get_proto_by_msg_name_as_fqbin(<<"ProtobufClient.TradeSubscription">>) -> "client";
get_proto_by_msg_name_as_fqbin(<<"ProtobufClient.StreamSubscription">>) -> "client";
get_proto_by_msg_name_as_fqbin(<<"ProtobufClient.ClientSubscription">>) -> "client";
get_proto_by_msg_name_as_fqbin(<<"ProtobufClient.ClientSessionMessage.Session">>) -> "client";
get_proto_by_msg_name_as_fqbin(<<"ProtobufClient.ClientSessionMessage.AnonymousTradingSession">>) -> "client";
get_proto_by_msg_name_as_fqbin(E) ->
    error({gpb_error, {badmsg, E}}).


-spec get_proto_by_service_name_as_fqbin(_) -> no_return().
get_proto_by_service_name_as_fqbin(E) ->
    error({gpb_error, {badservice, E}}).


get_proto_by_enum_name_as_fqbin(<<"ProtobufClient.APIAuthenticationMessage.Source">>) -> "client";
get_proto_by_enum_name_as_fqbin(E) ->
    error({gpb_error, {badenum, E}}).


get_protos_by_pkg_name_as_fqbin(<<"ProtobufClient">>) -> ["client"];
get_protos_by_pkg_name_as_fqbin(E) ->
    error({gpb_error, {badpkg, E}}).



gpb_version_as_string() ->
    "4.7.1".

gpb_version_as_list() ->
    [4,7,1].
